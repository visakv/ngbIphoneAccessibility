"use strict";
(self["webpackChunkduet_angular_template"] = self["webpackChunkduet_angular_template"] || []).push([["node_modules_duetds_components_lib_esm_duet-radio_2_entry_js"],{

/***/ 9668:
/*!***********************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/create-id-981107da.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "c": () => (/* binding */ createID)
/* harmony export */ });
/*!
 * Built with Duet Design System
 */
function chr4() {
  return Math.random().toString(16).slice(-4);
}
function createID(prefix) {
  return `${prefix}-${chr4()}${chr4()}-${chr4()}-${chr4()}-${chr4()}-${chr4()}${chr4()}${chr4()}`;
}




/***/ }),

/***/ 7554:
/*!***********************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/duet-radio_2.entry.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "duet_radio": () => (/* binding */ DuetRadio),
/* harmony export */   "duet_radio_group": () => (/* binding */ DuetRadioGroup)
/* harmony export */ });
/* harmony import */ var C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 1670);
/* harmony import */ var _index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-54e0bce3.js */ 3669);
/* harmony import */ var _create_id_981107da_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./create-id-981107da.js */ 9668);
/* harmony import */ var _themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./themeable-component-e8fc98bf.js */ 7558);
/* harmony import */ var _watch_options_dd55bce8_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./watch-options-dd55bce8.js */ 7567);


/*!
 * Built with Duet Design System
 */




const duetRadioCss = "*.sc-duet-radio,*.sc-duet-radio::after,*.sc-duet-radio::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}.sc-duet-radio-h{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;margin-right:28px !important;margin-bottom:12px !important;display:inline-flex;width:100%;vertical-align:bottom;-webkit-tap-highlight-color:transparent}.sc-duet-radio-h:last-child,.sc-duet-radio-h:last-of-type{margin-right:0 !important}.vertical.sc-duet-radio-h{margin-right:0 !important}.horizontal.sc-duet-radio-h{margin-bottom:0 !important;width:auto}.horizontal.sc-duet-radio-h .duet-label.sc-duet-radio span.sc-duet-radio{max-width:100%}@media (min-width: 48em){.horizontal-responsive.sc-duet-radio-h{margin-right:28px !important;margin-bottom:0 !important;width:auto}.horizontal-responsive.sc-duet-radio-h:last-child,.horizontal-responsive.sc-duet-radio-h:last-of-type{margin-right:0 !important}.horizontal-responsive.sc-duet-radio-h .duet-label.sc-duet-radio span.sc-duet-radio{max-width:100%}}.duet-m-0.sc-duet-radio-h{margin:0 !important}.sc-duet-radio-h:last-child:not(:only-child){margin-right:0 !important;margin-bottom:0 !important}.duet-label.sc-duet-radio{position:relative;z-index:100;display:flex;width:100%;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1rem;font-weight:400;line-height:1.5;color:#00294d;cursor:pointer;background:transparent}.duet-theme-turva.sc-duet-radio .duet-label.sc-duet-radio{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:#171c3a}.duet-label.sc-duet-radio span.sc-duet-radio{flex-grow:1;font-size:1rem}.duet-label-hidden.sc-duet-radio .duet-label.sc-duet-radio{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0 0 0 0);border:0}.duet-radio-container.sc-duet-radio{position:relative;width:100%;height:100%}.duet-radio.sc-duet-radio{padding:14px !important;position:absolute;top:0;left:0;z-index:200;width:100%;height:100%;cursor:pointer;opacity:0}.duet-radio.sc-duet-radio+label.sc-duet-radio::before{z-index:100;flex-shrink:0;width:20px;height:20px;margin:2px 10px 1px 1px;content:\"\";background:white;border:1px solid #00294d;border-radius:50%}.duet-theme-turva.sc-duet-radio .duet-radio.sc-duet-radio+label.sc-duet-radio::before{border-color:#171c3a}.duet-radio.sc-duet-radio:focus+label.sc-duet-radio::before{box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px #0077b3}.duet-theme-turva.sc-duet-radio .duet-radio.sc-duet-radio:focus+label.sc-duet-radio::before{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px #171c3a}.duet-radio.sc-duet-radio:checked+label.sc-duet-radio::after{position:absolute;top:6px;left:5px;z-index:200;flex-shrink:0;width:12px;height:12px;content:\"\";background:#00294d;border-radius:50%}.duet-theme-turva.sc-duet-radio .duet-radio.sc-duet-radio:checked+label.sc-duet-radio::after{background:#171c3a}.duet-radio[disabled].sc-duet-radio{cursor:default}.duet-radio[disabled].sc-duet-radio+label.sc-duet-radio{color:#657787}.duet-theme-turva.sc-duet-radio .duet-radio[disabled].sc-duet-radio+label.sc-duet-radio{color:#747475}.duet-radio[disabled].sc-duet-radio+label.sc-duet-radio::before{border-color:#cfd2d4}.duet-theme-turva.sc-duet-radio .duet-radio[disabled].sc-duet-radio+label.sc-duet-radio::before{border-color:#cfcfd1}.duet-radio[disabled].sc-duet-radio:checked+label.sc-duet-radio::before{border:1px solid #657787}.duet-radio[disabled].sc-duet-radio:checked+label.sc-duet-radio::after{background:#657787}.duet-theme-turva.sc-duet-radio .duet-radio[disabled].sc-duet-radio:checked+label.sc-duet-radio::after{background:#747475;border-color:#747475}";
const DuetRadio = class {
  constructor(hostRef) {
    (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.duetChange = (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "duetChange", 7);
    this.duetFocus = (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "duetFocus", 7);
    this.duetBlur = (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "duetBlur", 7);
    /**
     * Own Properties.
     */

    this.radioId = (0,_create_id_981107da_js__WEBPACK_IMPORTED_MODULE_2__.c)("DuetRadio");
    /**
     * Controls the margin of the component.
     */

    this.margin = "auto";
    /**
     * Theme of the radio.
     */

    this.theme = "";
    /**
     * Makes the radio component disabled. This prevents users from being able to
     * interact with the radio, and conveys its inactive state to assistive technologies.
     */

    this.disabled = false;
    /**
     * Set whether the input is required or not. Please note that this is required for
     * accessible inputs when the user is required to fill them. When using this property
     * you need to also set “novalidate” attribute to your form element to prevent
     * browser from displaying its own validation errors.
     */

    this.required = false;
    /**
     * Stops the components from emitting events
     */

    this.blockEvents = false;
    /**
     * Label for the radio.
     */

    this.label = "label";
    /**
     * Component event handling.
     */

    this.onClick = ev => {
      ev.stopPropagation();
    };

    this.onChange = ev => {
      this.checked = ev.target.value;

      if (this.checked && !this.blockEvents) {
        this.duetChange.emit({
          originalEvent: ev,
          checked: this.checked,
          value: this.value,
          component: "duet-radio"
        });
      }
    };

    this.onBlur = ev => {
      this.duetBlur.emit({
        originalEvent: ev,
        checked: this.checked,
        value: this.value,
        component: "duet-radio"
      });
    };

    this.onFocus = ev => {
      this.duetFocus.emit({
        originalEvent: ev,
        checked: this.checked,
        value: this.value,
        component: "duet-radio"
      });
    };
  }
  /**
   * Component lifecycle events.
   */


  componentWillLoad() {
    (0,_themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_3__.i)(this);

    if (this.value === undefined) {
      this.value = this.identifier;
    }
  }
  /**
   * Sets focus on the specified `duet-radio`. Use this method instead of the global
   * `input.focus()`.
   */


  setFocus(options) {
    var _this = this;

    return (0,C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this.nativeInput.focus(options);
    })();
  }
  /**
   * render() function
   * Always the last one in the class.
   */


  render() {
    const identifier = this.identifier || this.radioId;
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      onClick: this.onClick,
      class: {
        horizontal: this.groupDirection === "horizontal" && !this.groupResponsive,
        "horizontal-responsive": this.groupDirection === "horizontal" && this.groupResponsive,
        "duet-m-0": this.margin === "none"
      }
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        "duet-radio-container": true,
        "duet-theme-turva": this.theme === "turva"
      }
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("input", {
      type: "radio",
      onFocus: this.onFocus,
      onBlur: this.onBlur,
      onChange: this.onChange,
      value: this.value,
      tabindex: this.accessibleIndex,
      class: {
        "duet-radio": true,
        disabled: this.disabled || this.groupDisabled
      },
      checked: this.checked,
      disabled: this.disabled || this.groupDisabled,
      required: this.required,
      "aria-controls": this.accessibleControls,
      "aria-activedescendant": this.accessibleActiveDescendant,
      "aria-owns": this.accessibleOwns,
      "aria-describedby": this.accessibleDescribedBy,
      role: this.role,
      name: this.name,
      id: identifier,
      ref: input => this.nativeInput = input
    }), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("label", {
      class: "duet-label",
      htmlFor: identifier
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("span", null, this.label))));
  }

  get element() {
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

};
DuetRadio.style = duetRadioCss;
const duetRadioGroupCss = "*.sc-duet-radio-group,*.sc-duet-radio-group::after,*.sc-duet-radio-group::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}.sc-duet-radio-group-h{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;display:block;width:100%}.horizontal.sc-duet-radio-group-h .duet-radio-group.sc-duet-radio-group{display:block}@media (min-width: 48em){.horizontal.sc-duet-radio-group-h .duet-radio-group.sc-duet-radio-group{display:flex}}.horizontal.sc-duet-radio-group-h .duet-radio-group.duet-no-stacking.sc-duet-radio-group{display:flex}.deut-radio-group.sc-duet-radio-group{width:100%}";
const DuetRadioGroup = class {
  constructor(hostRef) {
    (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    /**
     * Direction of the radio group.
     */

    this.direction = "vertical";
    /**
     * Controls the margin of the component.
     */

    this.margin = "auto";
    /**
     * Theme of the radio group.
     */

    this.theme = "";
    /**
     * Display radio group in error state along with an error message.
     */

    this.error = "";
    /**
     * Tooltip to display next to the label of the radio group.
     */

    this.tooltip = "";
    /**
     * With direction setting you can force the tooltip to always open towards left
     * or right instead of automatically determining the direction.
     */

    this.tooltipDirection = "auto";
    /**
     * Legend displayed for the radio buttons in this group.
     */

    this.label = "Label";
    /**
     * Visually hide the label, but still show it to screen readers.
     */

    this.labelHidden = false;
    /**
     * Additional caption to show inside the label of the radio group.
     */

    this.caption = "";
    /**
     * Enable or disable the automatic responsive behaviour of the radio group
     * component when horizontal setting is used. Setting this option to "true"
     * makes sure that contents are stacked vertically on mobile.
     */

    this.responsive = false;
    /**
     * Component event handling.
     */

    this.onSelect = ev => {
      const selectedRadio = ev.target;

      if (selectedRadio) {
        this.value = selectedRadio.value;
      } // Prevent events from bubbling up the DOM tree in case
      // this group is a sub-group of another choice group.


      ev.cancelBubble = true;
    };
  }
  /**
   * Component lifecycle events.
   */


  connectedCallback() {
    var _this2 = this;

    return (0,C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const el = _this2.element;

      if (_this2.value === undefined) {
        const radio = (0,_watch_options_dd55bce8_js__WEBPACK_IMPORTED_MODULE_4__.f)(el, "duet-radio");

        if (radio !== undefined) {
          yield radio.componentOnReady();

          if (_this2.value === undefined) {
            _this2.value = radio.value;
          }
        }
      }

      _this2.mutationO = (0,_watch_options_dd55bce8_js__WEBPACK_IMPORTED_MODULE_4__.w)(el, "duet-radio", newOption => {
        if (newOption !== undefined) {
          newOption.componentOnReady().then(() => {
            _this2.value = newOption.value;
          });
        } else {
          _this2.updateRadios();
        }
      });

      _this2.updateRadios();
    })();
  }

  disconnectedCallback() {
    if (this.mutationO) {
      this.mutationO.disconnect();
      this.mutationO = undefined;
    }
  }

  componentWillLoad() {
    (0,_themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_3__.i)(this);
  }
  /**
   * Local methods.
   */


  updateRadios() {
    var _this3 = this;

    return (0,C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      /**
       * Make sure we get all radios first so values are up to date prior
       * to caching the radio group value
       */
      const radios = Array.from(_this3.element.querySelectorAll("duet-radio"));
      const {
        value
      } = _this3;
      let hasChecked = false; // Walk the DOM in reverse order, since the last selected one wins

      for (const radio of radios) {
        radio.name = _this3.name;
        radio.groupDisabled = _this3.disabled;
        radio.groupDirection = _this3.direction;
        radio.groupResponsive = _this3.responsive;

        if (!hasChecked && radio.value === value) {
          // Correct value for this radio, but this radio isn't checked yet
          // and we haven't found a checked yet
          hasChecked = true;
          radio.checked = true;
        } else {
          // This radio doesn't have the correct value or the radio group has been already checked
          radio.checked = false;
        }
      } // Reset value if


      if (!hasChecked) {
        _this3.value = undefined;
      }
    })();
  }
  /**
   * render() function
   * Always the last one in the class.
   */


  render() {
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      onDuetChange: this.onSelect,
      class: {
        horizontal: this.direction === "horizontal"
      }
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-fieldset", {
      label: this.label,
      labelHidden: this.labelHidden,
      caption: this.caption,
      error: this.error,
      margin: this.margin,
      theme: this.theme
    }, this.tooltip && (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-tooltip", {
      slot: "tooltip",
      direction: this.tooltipDirection,
      accessibleInputLabel: this.label
    }, this.tooltip), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        "duet-radio-group": true,
        "duet-no-stacking": !this.responsive
      }
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null))));
  }

  get element() {
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

  static get watchers() {
    return {
      "name": ["updateRadios"],
      "value": ["updateRadios"],
      "disabled": ["updateRadios"],
      "direction": ["updateRadios"],
      "responsive": ["updateRadios"]
    };
  }

};
DuetRadioGroup.style = duetRadioGroupCss;


/***/ }),

/***/ 7558:
/*!*********************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/themeable-component-e8fc98bf.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "i": () => (/* binding */ inheritGlobalTheme)
/* harmony export */ });
/*!
 * Built with Duet Design System
 */
const inheritGlobalTheme = (component) => {
  // this minor change enables duet-theme-XXXXX instead of just duet-theme-turva
  const classList = Array.from(document.documentElement.classList).join(" ") || "";
  const theme = /(duet-theme-)([a-z]*)/gis.exec(classList);
  if (theme && theme[1] === "duet-theme-") {
    component.theme = theme[2] === "default" ? "" : theme[2];
  }
};




/***/ })

}]);
//# sourceMappingURL=node_modules_duetds_components_lib_esm_duet-radio_2_entry_js.js.map