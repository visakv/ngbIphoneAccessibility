"use strict";
(self["webpackChunkduet_angular_template"] = self["webpackChunkduet_angular_template"] || []).push([["node_modules_duetds_components_lib_esm_duet-upload-aria-status_entry_js"],{

/***/ 4538:
/*!**********************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/duet-upload-aria-status.entry.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "duet_upload_aria_status": () => (/* binding */ DuetUploadAriaStatus)
/* harmony export */ });
/* harmony import */ var _index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-54e0bce3.js */ 3669);
/*!
 * Built with Duet Design System
 */


const DuetUploadAriaStatus = class {
  constructor(hostRef) {
    (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    /**
     * State() variables
     */
    this.statusMessage = null;
    /**
     * Status labels used in the component
     */
    this.statusMessageLabel = null;
    /**
     * Adds accessible label that is read aloud
     */
    this.accessibleAriaLive = "polite";
    /**
     * valid file amount
     */
    this.valid = undefined;
    /**
     * total files
     */
    this.total = undefined;
    /**
     * invalid file amount
     */
    this.invalid = undefined;
    /**
     * valid file amount
     */
    this.inprogress = undefined;
    /**
     * Private functions
     */
    this.replacePlaceHolders = (statusString) => {
      const addFiles = (amount) => {
        return amount > 1 ? `${amount} ${this.statusMessageLabel.files}` : `${amount} ${this.statusMessageLabel.file}`;
      };
      return statusString
        .replace("{filesUploaded}", addFiles(this.valid))
        .replace("{filesInProgress}", addFiles(this.inprogress))
        .replace("{filesTotal}", addFiles(this.total))
        .replace("{filesWithErrors}", addFiles(this.invalid));
    };
    this.getStatusMessage = () => {
      const { done, inProgress, doneWithErrors, inProgressWithErrors } = this.statusMessageLabel;
      const hasErrors = this.invalid > 0;
      const isInProgress = this.inprogress > 0;
      const isInProgressWithErrors = this.inprogress > 0 && hasErrors;
      const isDone = this.valid === this.total && !isInProgress && !hasErrors;
      const isDoneWithErrors = this.valid + this.invalid === this.total && !isInProgress;
      if (isDone) {
        this.statusMessage = this.replacePlaceHolders(done);
        return;
      }
      else if (isInProgressWithErrors) {
        this.statusMessage = this.replacePlaceHolders(inProgressWithErrors);
        return;
      }
      else if (isInProgress) {
        this.statusMessage = this.replacePlaceHolders(inProgress);
        return;
      }
      else if (isDoneWithErrors) {
        this.statusMessage = this.replacePlaceHolders(doneWithErrors);
        return;
      }
      return;
    };
  }
  watchHandler(newValue, oldValue) {
    if (newValue !== oldValue) {
      this.getStatusMessage();
    }
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    return ((0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_0__.H, { role: "status", "aria-live": "assertive", "aria-atomic": "true", "aria-relevant": "all" }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_0__.h)("duet-visually-hidden", null, this.statusMessage)));
  }
  static get watchers() { return {
    "valid": ["watchHandler"],
    "invalid": ["watchHandler"],
    "inprogress": ["watchHandler"],
    "total": ["watchHandler"]
  }; }
};




/***/ })

}]);
//# sourceMappingURL=node_modules_duetds_components_lib_esm_duet-upload-aria-status_entry_js.js.map