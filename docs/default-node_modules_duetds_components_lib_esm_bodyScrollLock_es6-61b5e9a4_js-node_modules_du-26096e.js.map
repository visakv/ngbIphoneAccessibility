{"version":3,"file":"default-node_modules_duetds_components_lib_esm_bodyScrollLock_es6-61b5e9a4_js-node_modules_du-26096e.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;AACA,gFAAgF,gBAAgB;AAChG;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,aAAa;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kFAAkF,iBAAiB;AACnG;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,qFAAqF,iBAAiB;AACtG;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEyD;;;;;;;;;;;;;;;ACvLzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO,GAAG,OAAO,EAAE,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,EAAE,OAAO,EAAE,OAAO;AAChG;;AAEyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEgS;;;;;;;;;;;;;;;;;;;ACnBhS;AACA;AACA;AACoE;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,KAAK;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ,cAAc,6CAA6C;AAC9E,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB,aAAa,iBAAiB,wBAAwB,gBAAgB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEuF;;;;;;;;;;;;;;;;;AC3FvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,GAAG,eAAe,GAAG,WAAW,GAAG,sBAAsB,yCAAyC,EAAE;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,EAAE,GAAG,EAAE,GAAG,OAAO;AAC9C,8BAA8B,MAAM,qBAAqB,MAAM;AAC/D,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wBAAwB;AACzD;AACA;AACA;;AAE+E","sources":["./node_modules/@duetds/components/lib/esm/bodyScrollLock.es6-61b5e9a4.js","./node_modules/@duetds/components/lib/esm/create-id-981107da.js","./node_modules/@duetds/components/lib/esm/keyboard-utils-88ea1007.js","./node_modules/@duetds/components/lib/esm/language-utils-bf701d37.js","./node_modules/@duetds/components/lib/esm/string-utils-5954f458.js"],"sourcesContent":["/*!\n * Built with Duet Design System\n */\n// Older browsers don't support event options, feature detect it.\n\n// Adopted and modified solution from Bohdan Didukh (2017)\n// https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi\n\nlet hasPassiveEvents = false;\nif (typeof window !== 'undefined') {\n  const passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return undefined;\n    }\n  };\n  window.addEventListener('testPassive', null, passiveTestOptions);\n  window.removeEventListener('testPassive', null, passiveTestOptions);\n}\n\nconst isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);\n\n\nlet locks = [];\nlet documentListenerAdded = false;\nlet initialClientY = -1;\nlet previousBodyOverflowSetting;\nlet previousBodyPaddingRight;\n\n// returns true if `el` should be allowed to receive touchmove events.\nconst allowTouchMove = el => locks.some(lock => {\n  if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n    return true;\n  }\n\n  return false;\n});\n\nconst preventDefault = rawEvent => {\n  const e = rawEvent || window.event;\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true;\n  }\n\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true;\n\n  if (e.preventDefault) e.preventDefault();\n\n  return false;\n};\n\nconst setOverflowHidden = options => {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    const reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n    const scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n    if (reserveScrollBarGap && scrollBarGap > 0) {\n      previousBodyPaddingRight = document.body.style.paddingRight;\n      document.body.style.paddingRight = `${scrollBarGap}px`;\n    }\n  }\n\n  // If previousBodyOverflowSetting is already set, don't set it again.\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n  }\n};\n\nconst restoreOverflowSetting = () => {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight;\n\n    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n    previousBodyPaddingRight = undefined;\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting;\n\n    // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n    previousBodyOverflowSetting = undefined;\n  }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nconst isTargetElementTotallyScrolled = targetElement => targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\n\nconst handleScroll = (event, targetElement) => {\n  const clientY = event.targetTouches[0].clientY - initialClientY;\n\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event);\n  }\n\n  event.stopPropagation();\n  return true;\n};\n\nconst disableBodyScroll = (targetElement, options) => {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n    return;\n  }\n\n  // disableBodyScroll must not have been called on this targetElement before\n  if (locks.some(lock => lock.targetElement === targetElement)) {\n    return;\n  }\n\n  const lock = {\n    targetElement,\n    options: options || {}\n  };\n\n  locks = [...locks, lock];\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = event => {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY;\n      }\n    };\n    targetElement.ontouchmove = event => {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement);\n      }\n    };\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = true;\n    }\n  } else {\n    setOverflowHidden(options);\n  }\n};\n\nconst enableBodyScroll = targetElement => {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n    return;\n  }\n\n  locks = locks.filter(lock => lock.targetElement !== targetElement);\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n  } else if (!locks.length) {\n    restoreOverflowSetting();\n  }\n};\n\nexport { disableBodyScroll as d, enableBodyScroll as e };\n","/*!\n * Built with Duet Design System\n */\nfunction chr4() {\n  return Math.random().toString(16).slice(-4);\n}\nfunction createID(prefix) {\n  return `${prefix}-${chr4()}${chr4()}-${chr4()}-${chr4()}-${chr4()}-${chr4()}${chr4()}${chr4()}`;\n}\n\nexport { createID as c };\n","/*!\n * Built with Duet Design System\n */\nconst isArrowLeftKey = (e) => e.keyCode === 37;\nconst isArrowUpKey = (e) => e.keyCode === 38;\nconst isArrowRightKey = (e) => e.keyCode === 39;\nconst isArrowDownKey = (e) => e.keyCode === 40;\nconst isArrowKey = (e) => isArrowDownKey(e) || isArrowRightKey(e) || isArrowUpKey(e) || isArrowLeftKey(e);\nconst isEscapeKey = (e) => e.key === \"Escape\" || e.key === \"Esc\" || e.keyCode === 27;\nconst isTabKey = (e) => e.key === \"Tab\" || e.keyCode === 9;\nconst isBackspaceKey = (e) => e.keyCode === 8;\nconst isSpaceKey = (e) => e.key === \"Space\" || e.keyCode === 32;\nconst isPlusKey = (e) => e.key === \"+\" || e.keyCode === 43;\nconst isMinusKey = (e) => e.key === \"-\" || e.keyCode === 45;\nconst isQuestionKey = (e) => e.key === \"?\";\nconst isEnterKey = (e) => e.key === \"Enter\" || e.keyCode === 13;\nconst isKeyboardClick = (e) => isEnterKey(e) || isSpaceKey(e);\nconst isNumber = (e) => (e.keyCode >= 48 && e.keyCode <= 57) || (e.keyCode >= 96 && e.keyCode <= 105);\n\nexport { isArrowRightKey as a, isArrowUpKey as b, isArrowDownKey as c, isArrowLeftKey as d, isBackspaceKey as e, isEscapeKey as f, isSpaceKey as g, isQuestionKey as h, isKeyboardClick as i, isArrowKey as j, isNumber as k, isMinusKey as l, isPlusKey as m, isEnterKey as n, isTabKey as o };\n","/*!\n * Built with Duet Design System\n */\nimport { c as convertHtmlQuotes } from './string-utils-5954f458.js';\n\nconst localeLookUpTable = {\n  fi: \"fi-FI\",\n  en: \"en-GB\",\n  us: \"en-US\",\n  sv: \"sv-SE\",\n};\nconst localeMonetarySignifierLookUpTable = {\n  fi: \"€\",\n  en: \"£\",\n  us: \"$\",\n  sv: \"€\",\n};\nconst defLanguageArray = [\"fi\", \"en\", \"sv\"];\nconst defaultLanguage = \"fi\";\nconst getCurrentLanguage = () => {\n  return document.documentElement.lang ? document.documentElement.lang.toLowerCase() : defaultLanguage;\n};\nconst isOfTypeLanguage = (keyInput) => {\n  return defLanguageArray.includes(keyInput);\n};\nconst checkForLanguage = (languageString = getCurrentLanguage()) => {\n  if (isOfTypeLanguage(languageString)) {\n    return languageString;\n  }\n  else {\n    return defaultLanguage;\n  }\n};\n/**\n * Returns the current language as a string representation (taken from html lang attribute)\n * If language is not fi|sv|en it will default to \"fi\"\n * @param {string} lang=fi - \"fi\" | \"sv\" | \"en\"\n * @default {string} \"fi\"\n */\nconst getLanguage = (languageString = getCurrentLanguage()) => checkForLanguage(languageString);\n/**\n * Returns the current language and locale\n * If language is not fi|sv|en it will default to \"fi\"\n * special case where lang can be ALSO be \"us\" in addition to other types - if user decides to override local language\n * @param {string} lang=\"fi\" - \"fi\" | \"sv\" | \"en\" | \"us\"\n * @default {object} {locale: \"fi-FI\", money: \"€\"}\n */\nconst getLocale = (lang) => {\n  const returnObj = {\n    locale: localeLookUpTable[lang],\n    money: localeMonetarySignifierLookUpTable[lang],\n  };\n  if (returnObj.locale && returnObj.money) {\n    return returnObj;\n  }\n  throw new Error(`Locale for \"${lang}\" not found`);\n};\n/**\n * Takes any json object that is passed and/or htmlencoded and converts it to proper json\n */\nconst sanitizeString = (string) => {\n  const argIsString = typeof string === \"string\";\n  if (argIsString) {\n    try {\n      return JSON.parse(convertHtmlQuotes(string));\n    }\n    catch (e) {\n      console.log(\"sanitizeString received a string, that didnt parse to json object\", string, e);\n    }\n  }\n  return string;\n};\n/**\n * Returns the current string / object from a given translation object\n * If language is not fi|sv|en it will default to \"fi\"\n * special case where lang can be ALSO be \"us\" in addition to other types - if user decides to override local language\n * @param {object} langObject - {fi: \"finnish\", sv: \"swedish\", en: \"english\"} | string will get JSON.parsed\n * @param {boolean} languageOverride = false - in case you want to override the actual language set in html tag\n * @default {object} {locale: \"fi-FI\", money: \"€\"}\n * @returns {(string|Object)} given example contains {fi:\"something\"} and language===fi this will return \"something\"\n */\nconst getLocaleString = (langObject, languageOverride) => {\n  const obj = sanitizeString(langObject);\n  if (languageOverride) {\n    return obj[checkForLanguage(languageOverride)];\n  }\n  else {\n    return obj[getLanguage()];\n  }\n};\n\nexport { getLanguage as a, getLocale as b, getLocaleString as g, sanitizeString as s };\n","/*!\n * Built with Duet Design System\n */\nfunction isObject(maybeObj) {\n  return Object.prototype.toString.call(maybeObj) === \"[object Object]\";\n}\nconst parsePossibleJSON = (maybeJSON) => {\n  if (Array.isArray(maybeJSON) || isObject(maybeJSON)) {\n    return maybeJSON;\n  }\n  if (typeof maybeJSON === \"string\") {\n    try {\n      return JSON.parse(maybeJSON);\n    }\n    catch (e) {\n      console.warn(e);\n      try {\n        return JSON.parse(convertHtmlQuotes(maybeJSON));\n      }\n      catch (e) {\n        console.warn(e);\n      }\n    }\n  }\n  // undefined is not a type in JSON,\n  // so we use it here to signal invalid input\n  return undefined;\n};\n/**\n * Format string, via simplistic sprintf equivalent\n * @example String.format('{0} is super, but {1} is best! {{0}}', 'Duet', 'Coffee'); -> \"Duet is super, but Coffee ist best! {0}\"\n *\n */\n// @ts-ignore\nif (!String.format) {\n  // @ts-ignore\n  String.format = function (format) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return format.replace(/\\{\\{|\\}\\}|\\{(\\d+)\\}/g, function (curlyBrack, index) {\n      return curlyBrack == \"{{\" ? \"{\" : curlyBrack == \"}}\" ? \"}\" : args[index];\n    });\n  };\n}\nconst MATCH_DISALLOWED_CHARS = /[^a-z0-9áéíóúñüöäå \\.,_-]/gim;\nfunction sanitizeString(string) {\n  return string.replace(MATCH_DISALLOWED_CHARS, \"\").trim();\n}\nconst convertHtmlQuotes = string => {\n  if (typeof string === \"string\") {\n    return string.replace(/&quot;/g, '\"').replace(/&apos;/g, '\"');\n  }\n  return string;\n};\n\nexport { convertHtmlQuotes as c, parsePossibleJSON as p, sanitizeString as s };\n"],"names":[],"sourceRoot":"webpack:///"}