{"version":3,"file":"node_modules_duetds_components_lib_esm_duet-checkbox_entry_js.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO,GAAG,OAAO,EAAE,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,EAAE,OAAO,EAAE,OAAO;AAChG;;AAEyB;;;;;;;;;;;;;;;;;;;;;ACVzB;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMY,eAAe,GAAG,swIAAxB;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzBC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnBd,IAAAA,qDAAgB,CAAC,IAAD,EAAOc,OAAP,CAAhB;AACA,SAAKC,UAAL,GAAkBb,qDAAW,CAAC,IAAD,EAAO,YAAP,EAAqB,CAArB,CAA7B;AACA,SAAKc,SAAL,GAAiBd,qDAAW,CAAC,IAAD,EAAO,WAAP,EAAoB,CAApB,CAA5B;AACA,SAAKe,QAAL,GAAgBf,qDAAW,CAAC,IAAD,EAAO,UAAP,EAAmB,CAAnB,CAA3B;AACA;AACJ;AACA;;AACI,SAAKgB,UAAL,GAAkBV,yDAAQ,CAAC,cAAD,CAA1B;AACA;AACJ;AACA;;AACI,SAAKW,MAAL,GAAc,MAAd;AACA;AACJ;AACA;AACA;AACA;AACA;;AACI,SAAKC,QAAL,GAAgB,KAAhB;AACA;AACJ;AACA;;AACI,SAAKC,KAAL,GAAa,EAAb;AACA;AACJ;AACA;AACA;;AACI,SAAKC,QAAL,GAAgB,KAAhB;AACA;AACJ;AACA;;AACI,SAAKC,KAAL,GAAa,OAAb;AACA;AACJ;AACA;;AACI,SAAKC,WAAL,GAAmB,KAAnB;AACA;AACJ;AACA;;AACI,SAAKC,OAAL,GAAe,KAAf;AACA;AACJ;AACA;;AACI,SAAKC,QAAL,GAAiBC,EAAD,IAAQ;AACtB,WAAKF,OAAL,GAAe,CAAC,KAAKA,OAArB;AACA,WAAKV,UAAL,CAAgBa,IAAhB,CAAqB;AACnBC,QAAAA,aAAa,EAAEF,EADI;AAEnBF,QAAAA,OAAO,EAAE,KAAKA,OAFK;AAGnBK,QAAAA,KAAK,EAAE,KAAKA,KAHO;AAInBC,QAAAA,SAAS,EAAE;AAJQ,OAArB;AAMD,KARD;;AASA,SAAKC,MAAL,GAAeL,EAAD,IAAQ;AACpB,WAAKV,QAAL,CAAcW,IAAd,CAAmB;AACjBC,QAAAA,aAAa,EAAEF,EADE;AAEjBF,QAAAA,OAAO,EAAE,KAAKA,OAFG;AAGjBK,QAAAA,KAAK,EAAE,KAAKA,KAHK;AAIjBC,QAAAA,SAAS,EAAE;AAJM,OAAnB;AAMD,KAPD;;AAQA,SAAKE,OAAL,GAAgBN,EAAD,IAAQ;AACrB,WAAKX,SAAL,CAAeY,IAAf,CAAoB;AAClBC,QAAAA,aAAa,EAAEF,EADG;AAElBF,QAAAA,OAAO,EAAE,KAAKA,OAFI;AAGlBK,QAAAA,KAAK,EAAE,KAAKA,KAHM;AAIlBC,QAAAA,SAAS,EAAE;AAJO,OAApB;AAMD,KAPD;AAQD;AACD;AACF;AACA;;;AACEG,EAAAA,iBAAiB,GAAG;AAClBxB,IAAAA,mEAAkB,CAAC,IAAD,CAAlB;;AACA,QAAI,KAAKoB,KAAL,KAAeK,SAAnB,EAA8B;AAC5B,WAAKL,KAAL,GAAa,KAAKM,UAAlB;AACD;AACF;AACD;AACF;AACA;AACA;;;AACQC,EAAAA,QAAQ,CAACC,OAAD,EAAU;AAAA;;AAAA;AACtB,WAAI,CAACC,WAAL,CAAiBC,KAAjB,CAAuBF,OAAvB;AADsB;AAEvB;AACD;AACF;AACA;AACA;;;AACEG,EAAAA,MAAM,GAAG;AACP,UAAML,UAAU,GAAG,KAAKA,UAAL,IAAmB,KAAKlB,UAA3C;AACA,WAAQf,qDAAC,CAACE,iDAAD,EAAO;AAAEqC,MAAAA,KAAK,EAAE;AAAE,oBAAY,KAAKvB,MAAL,KAAgB;AAA9B;AAAT,KAAP,EAA0DhB,qDAAC,CAAC,KAAD,EAAQ;AAAEuC,MAAAA,KAAK,EAAE;AACjF,mCAA2B,IADsD;AAEjF,6BAAqB,KAAKlB,WAFuD;AAGjF,4BAAoB,KAAKH,KAAL,KAAe;AAH8C;AAAT,KAAR,EAI7DlB,qDAAC,CAAC,OAAD,EAAU;AAAEwC,MAAAA,GAAG,EAAEC,KAAK,IAAK,KAAKL,WAAL,GAAmBK,KAApC;AAA4CC,MAAAA,IAAI,EAAE,UAAlD;AAA8DZ,MAAAA,OAAO,EAAE,KAAKA,OAA5E;AAAqFD,MAAAA,MAAM,EAAE,KAAKA,MAAlG;AAA0GN,MAAAA,QAAQ,EAAE,KAAKA,QAAzH;AAAmII,MAAAA,KAAK,EAAE,KAAKA,KAA/I;AAAsJY,MAAAA,KAAK,EAAE;AAAE,yBAAiB,IAAnB;AAAyBpB,QAAAA,QAAQ,EAAE,KAAKA;AAAxC,OAA7J;AAAiNG,MAAAA,OAAO,EAAE,KAAKA,OAA/N;AAAwOH,MAAAA,QAAQ,EAAE,KAAKA,QAAvP;AAAiQwB,MAAAA,QAAQ,EAAE,KAAKC,eAAhR;AAAiS,uBAAiB,KAAKC,kBAAvT;AAA2U,+BAAyB,KAAKC,0BAAzW;AAAqY,mBAAa,KAAKC,cAAvZ;AAAua,0BAAoB,KAAKC,qBAAhc;AAAud/B,MAAAA,QAAQ,EAAE,KAAKA,QAAte;AAAgfgC,MAAAA,IAAI,EAAE,KAAKA,IAA3f;AAAigBC,MAAAA,IAAI,EAAE,KAAKA,IAA5gB;AAAkhBC,MAAAA,EAAE,EAAElB;AAAthB,KAAV,CAJ4D,EAImfjC,qDAAC,CAAC,OAAD,EAAU;AAAEuC,MAAAA,KAAK,EAAE,YAAT;AAAuBa,MAAAA,OAAO,EAAEnB;AAAhC,KAAV,EAAwDjC,qDAAC,CAAC,MAAD,EAAS,IAAT,EAAe,KAAKoB,KAApB,CAAzD,CAJpf,CAA3D,CAAT;AAKD;;AACU,MAAPiC,OAAO,GAAG;AAAE,WAAOjD,qDAAU,CAAC,IAAD,CAAjB;AAA0B;;AAnGjB,CAA3B;AAqGAK,YAAY,CAAC6C,KAAb,GAAqB9C,eAArB;;;;;;;;;;;;;;;AC9GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEmC","sources":["./node_modules/@duetds/components/lib/esm/create-id-981107da.js","./node_modules/@duetds/components/lib/esm/duet-checkbox.entry.js","./node_modules/@duetds/components/lib/esm/themeable-component-e8fc98bf.js"],"sourcesContent":["/*!\n * Built with Duet Design System\n */\nfunction chr4() {\n  return Math.random().toString(16).slice(-4);\n}\nfunction createID(prefix) {\n  return `${prefix}-${chr4()}${chr4()}-${chr4()}-${chr4()}-${chr4()}-${chr4()}${chr4()}${chr4()}`;\n}\n\nexport { createID as c };\n","/*!\n * Built with Duet Design System\n */\nimport { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-54e0bce3.js';\nimport { c as createID } from './create-id-981107da.js';\nimport { i as inheritGlobalTheme } from './themeable-component-e8fc98bf.js';\n\nconst duetCheckboxCss = \"*.sc-duet-checkbox,*.sc-duet-checkbox::after,*.sc-duet-checkbox::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}.sc-duet-checkbox-h{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;margin-right:8px !important;margin-bottom:12px !important;display:inline-flex;width:100%;vertical-align:bottom;-webkit-tap-highlight-color:transparent}.sc-duet-checkbox-h:last-child,.sc-duet-checkbox-h:last-of-type{margin-right:0 !important}.sc-duet-checkbox-h:last-child:not(:only-child){margin-bottom:0 !important}.duet-m-0.sc-duet-checkbox-h{margin:0 !important}.duet-label.sc-duet-checkbox{position:relative;z-index:100;display:inline;font-family:\\\"localtapiola-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";font-size:1rem;font-weight:400;line-height:1.5;color:#00294d;vertical-align:top;cursor:pointer;background:transparent;transition:300ms ease}.duet-theme-turva.sc-duet-checkbox .duet-label.sc-duet-checkbox{font-family:\\\"turva-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";color:#171c3a}.duet-label.sc-duet-checkbox span.sc-duet-checkbox{display:inline-block;width:calc(100% - 32px);font-size:1rem;font-weight:400;vertical-align:top}.duet-checkbox-container.sc-duet-checkbox{position:relative;width:100%;height:100%}.duet-checkbox.sc-duet-checkbox{padding:14px !important;position:absolute;top:0;left:0;z-index:2;width:100%;height:100%;cursor:pointer;opacity:0}.duet-checkbox.sc-duet-checkbox+label.sc-duet-checkbox::before{z-index:100;display:inline-block;width:20px;height:20px;margin:2px 10px 1px 1px;vertical-align:top;content:\\\"\\\";background:white;border:1px solid #00294d;border-radius:4px}.duet-theme-turva.sc-duet-checkbox .duet-checkbox.sc-duet-checkbox+label.sc-duet-checkbox::before{border-color:#171c3a}.duet-checkbox.sc-duet-checkbox:checked+label.sc-duet-checkbox::before{background:#00294d;border:1px solid #00294d}.duet-theme-turva.sc-duet-checkbox .duet-checkbox.sc-duet-checkbox:checked+label.sc-duet-checkbox::before{background:#171c3a;border-color:#171c3a}.duet-checkbox.sc-duet-checkbox:focus+label.sc-duet-checkbox::before{box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px #0077b3}.duet-theme-turva.sc-duet-checkbox .duet-checkbox.sc-duet-checkbox:focus+label.sc-duet-checkbox::before{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px #171c3a}.duet-checkbox.sc-duet-checkbox+label.sc-duet-checkbox{position:static}.duet-checkbox.sc-duet-checkbox:checked+label.sc-duet-checkbox::after{position:absolute;top:6px;left:5px;z-index:200;width:12px;height:12px;pointer-events:none;content:\\\"\\\";background:transparent url(\\\"data:image/svg+xml,%3Csvg%20fill%3D%27white%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20width%3D%2724%27%20height%3D%2724%27%20viewBox%3D%270%200%2024%2024%27%3E%3Cpath%20d%3D%27M23.374.287a1.5%2C1.5%2C0%2C0%2C0-2.093.345L7.246%2C20.2%2C2.561%2C15.511A1.5%2C1.5%2C0%2C1%2C0%2C.439%2C17.632l5.935%2C5.934a1.525%2C1.525%2C0%2C0%2C0%2C2.279-.186l15.066-21A1.5%2C1.5%2C0%2C0%2C0%2C23.374.287Z%27%20%2F%3E%3C%2Fsvg%3E\\\") no-repeat 0 0;background-size:100% auto}.duet-checkbox[disabled].sc-duet-checkbox{cursor:default}.duet-checkbox[disabled].sc-duet-checkbox+label.sc-duet-checkbox{color:#657787}.duet-theme-turva.sc-duet-checkbox .duet-checkbox[disabled].sc-duet-checkbox+label.sc-duet-checkbox{color:#747475}.duet-checkbox[disabled].sc-duet-checkbox+label.sc-duet-checkbox::before{border-color:#cfd2d4}.duet-theme-turva.sc-duet-checkbox .duet-checkbox[disabled].sc-duet-checkbox+label.sc-duet-checkbox::before{border-color:#cfcfd1}.duet-checkbox[disabled].sc-duet-checkbox:checked+label.sc-duet-checkbox::before{background:#657787;border:1px solid #657787}.duet-theme-turva.sc-duet-checkbox .duet-checkbox[disabled].sc-duet-checkbox:checked+label.sc-duet-checkbox::before{background:#747475;border-color:#747475}.duet-label-hidden.sc-duet-checkbox .duet-label.sc-duet-checkbox span.sc-duet-checkbox{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0 0 0 0);border:0}\";\n\nconst DuetCheckbox = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.duetChange = createEvent(this, \"duetChange\", 3);\n    this.duetFocus = createEvent(this, \"duetFocus\", 7);\n    this.duetBlur = createEvent(this, \"duetBlur\", 7);\n    /**\n     * Own Properties.\n     */\n    this.checkboxId = createID(\"DuetCheckbox\");\n    /**\n     * Controls the margin of the component.\n     */\n    this.margin = \"auto\";\n    /**\n     * Set whether the input is required or not. Please note that this is required for\n     * accessible inputs when the user is required to fill them. When using this property\n     * you need to also set “novalidate” attribute to your form element to prevent\n     * browser from displaying its own validation errors.\n     */\n    this.required = false;\n    /**\n     * Theme of the checkbox.\n     */\n    this.theme = \"\";\n    /**\n     * Makes the checkbox component disabled. This prevents users from being able to\n     * interact with the checkbox, and conveys its inactive state to assistive technologies.\n     */\n    this.disabled = false;\n    /**\n     * Label for the checkbox\n     */\n    this.label = \"label\";\n    /**\n     * Visually hide the label, but still show it to screen readers.\n     */\n    this.labelHidden = false;\n    /**\n     * Check state of the checkbox.\n     */\n    this.checked = false;\n    /**\n     * Component event handling.\n     */\n    this.onChange = (ev) => {\n      this.checked = !this.checked;\n      this.duetChange.emit({\n        originalEvent: ev,\n        checked: this.checked,\n        value: this.value,\n        component: \"duet-checkbox\",\n      });\n    };\n    this.onBlur = (ev) => {\n      this.duetBlur.emit({\n        originalEvent: ev,\n        checked: this.checked,\n        value: this.value,\n        component: \"duet-checkbox\",\n      });\n    };\n    this.onFocus = (ev) => {\n      this.duetFocus.emit({\n        originalEvent: ev,\n        checked: this.checked,\n        value: this.value,\n        component: \"duet-checkbox\",\n      });\n    };\n  }\n  /**\n   * Component lifecycle events.\n   */\n  componentWillLoad() {\n    inheritGlobalTheme(this);\n    if (this.value === undefined) {\n      this.value = this.identifier;\n    }\n  }\n  /**\n   * Sets focus on the specified `duet-checkbox`. Use this method instead of the global\n   * `input.focus()`.\n   */\n  async setFocus(options) {\n    this.nativeInput.focus(options);\n  }\n  /**\n   * render() function\n   * Always the last one in the class.\n   */\n  render() {\n    const identifier = this.identifier || this.checkboxId;\n    return (h(Host, { class: { \"duet-m-0\": this.margin === \"none\" } }, h(\"div\", { class: {\n        \"duet-checkbox-container\": true,\n        \"duet-label-hidden\": this.labelHidden,\n        \"duet-theme-turva\": this.theme === \"turva\",\n      } }, h(\"input\", { ref: input => (this.nativeInput = input), type: \"checkbox\", onFocus: this.onFocus, onBlur: this.onBlur, onChange: this.onChange, value: this.value, class: { \"duet-checkbox\": true, disabled: this.disabled }, checked: this.checked, disabled: this.disabled, tabindex: this.accessibleIndex, \"aria-controls\": this.accessibleControls, \"aria-activedescendant\": this.accessibleActiveDescendant, \"aria-owns\": this.accessibleOwns, \"aria-describedby\": this.accessibleDescribedBy, required: this.required, role: this.role, name: this.name, id: identifier }), h(\"label\", { class: \"duet-label\", htmlFor: identifier }, h(\"span\", null, this.label)))));\n  }\n  get element() { return getElement(this); }\n};\nDuetCheckbox.style = duetCheckboxCss;\n\nexport { DuetCheckbox as duet_checkbox };\n","/*!\n * Built with Duet Design System\n */\nconst inheritGlobalTheme = (component) => {\n  // this minor change enables duet-theme-XXXXX instead of just duet-theme-turva\n  const classList = Array.from(document.documentElement.classList).join(\" \") || \"\";\n  const theme = /(duet-theme-)([a-z]*)/gis.exec(classList);\n  if (theme && theme[1] === \"duet-theme-\") {\n    component.theme = theme[2] === \"default\" ? \"\" : theme[2];\n  }\n};\n\nexport { inheritGlobalTheme as i };\n"],"names":["r","registerInstance","c","createEvent","h","H","Host","g","getElement","createID","i","inheritGlobalTheme","duetCheckboxCss","DuetCheckbox","constructor","hostRef","duetChange","duetFocus","duetBlur","checkboxId","margin","required","theme","disabled","label","labelHidden","checked","onChange","ev","emit","originalEvent","value","component","onBlur","onFocus","componentWillLoad","undefined","identifier","setFocus","options","nativeInput","focus","render","class","ref","input","type","tabindex","accessibleIndex","accessibleControls","accessibleActiveDescendant","accessibleOwns","accessibleDescribedBy","role","name","id","htmlFor","element","style","duet_checkbox"],"sourceRoot":"webpack:///"}