"use strict";
(self["webpackChunkduet_angular_template"] = self["webpackChunkduet_angular_template"] || []).push([["node_modules_duetds_components_lib_esm_duet-modal_entry_js"],{

/***/ 6735:
/*!*********************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/duet-modal.entry.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "duet_modal": () => (/* binding */ DuetModal)
/* harmony export */ });
/* harmony import */ var C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 1670);
/* harmony import */ var _index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-54e0bce3.js */ 3669);
/* harmony import */ var _bodyScrollLock_es6_61b5e9a4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bodyScrollLock.es6-61b5e9a4.js */ 6979);
/* harmony import */ var _create_id_981107da_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./create-id-981107da.js */ 9668);
/* harmony import */ var _focus_utils_ea33cb8a_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./focus-utils-ea33cb8a.js */ 7681);
/* harmony import */ var _keyboard_utils_88ea1007_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./keyboard-utils-88ea1007.js */ 1681);
/* harmony import */ var _language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./language-utils-bf701d37.js */ 2601);
/* harmony import */ var _themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./themeable-component-e8fc98bf.js */ 7558);
/* harmony import */ var _string_utils_5954f458_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./string-utils-5954f458.js */ 4506);


/*!
 * Built with Duet Design System
 */








const duetModalCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}.duet-modal-overlay{position:fixed;top:0;right:0;bottom:0;left:0;z-index:900;max-height:100vh;overflow-y:auto;visibility:hidden;background:rgba(0, 41, 77, 0.85);opacity:0;transition:300ms ease;transition-delay:200ms}.duet-modal-overlay.duet-theme-turva{background:rgba(23, 28, 58, 0.85)}.duet-modal-overlay.duet-modal-active{visibility:visible;opacity:1;transition:300ms ease;transition-delay:0s}.duet-modal-overlay.duet-disable-transitions{transition:none}::slotted(img){width:100%}.duet-modal-inner{display:flex;align-items:center;width:100%;min-height:100%;padding:20px 16px}@media (min-width: 36em){.duet-modal-inner{padding:48px 16px}}@media (max-width: 35.9375em){.duet-modal-inner.duet-modal-large{padding-right:0;padding-left:0}}.duet-modal{position:relative;width:100%;max-width:686px;margin:auto;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-weight:400;font-variant-numeric:tabular-nums;line-height:1.5;color:#00294d;background:white;border-radius:4px;opacity:0;transition:300ms ease;transition-delay:0ms;transform:scale(0.96)}.duet-theme-turva .duet-modal{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:#171c3a}.duet-modal-active .duet-modal{opacity:1;transition:300ms ease;transition-delay:200ms;transform:none}.duet-disable-transitions .duet-modal{transition:none}.duet-modal.small{max-width:545px}.duet-modal.large{max-width:100%}@media (min-width: 36em){.duet-modal.large{max-width:1110px}}.duet-modal:focus{outline:0}.duet-modal-body{width:100%;padding:36px 28px}.duet-modal-body.duet-modal-gutter-small{padding:36px 20px}.duet-modal-body.duet-modal-gutter-large{padding:48px 36px}@media (max-width: 22.5em){.duet-modal-body{padding:36px 20px}.duet-modal-body.duet-modal-gutter-large{padding:48px 28px}}@media (max-width: 35.9375em){.duet-modal-body{padding:36px 20px}.duet-modal-body.duet-modal-gutter-large{padding:48px 36px}}@media (min-width: 36em){.duet-modal-body{padding:36px}.duet-modal-body.duet-modal-gutter-large{padding:28px 72px}}@media (min-width: 48em){.duet-modal-body{padding:36px 72px}.duet-modal-body.duet-modal-gutter-large{padding:36px 72px}}@media (min-width: 76.25em){.duet-modal-body{padding:36px 48px 48px}.duet-modal-body.duet-modal-gutter-large{padding:48px 94px}.small .duet-modal-body{padding:36px 48px}}.duet-modal-header{text-align:center}.duet-modal-close{position:absolute;top:12px;right:12px}.duet-modal-heading{width:100%;padding-right:60px;overflow:hidden;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1.25rem;font-style:normal;font-weight:600;font-variant-numeric:tabular-nums;line-height:1.25;color:#00294d;text-decoration:none;text-overflow:ellipsis;letter-spacing:-0.01rem;white-space:nowrap}.duet-modal-heading.duet-p-0{padding:0 !important}.duet-modal-heading.duet-m-0{margin:0 !important}"; // The transition below is slightly higher than the actual CSS transition as VoiceOver on
// iOS has otherwise problems moving the focus from modal back to the original element.
// This issue is similar to what we’ve seen in Duet Date Picker + iOS VoiceOver.

const TRANSITION_MS = 600;
const DuetModal = class {
  constructor(hostRef) {
    (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.duetOpen = (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "duetOpen", 7);
    this.duetClose = (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "duetClose", 7);
    this.duetBeforeClose = (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "duetBeforeClose", 7);

    var _a, _b;
    /**
     * Own Properties.
     */


    this.modalId = (0,_create_id_981107da_js__WEBPACK_IMPORTED_MODULE_3__.c)("DuetModal");
    this.slotDefaultId = (0,_create_id_981107da_js__WEBPACK_IMPORTED_MODULE_3__.c)("DuetModal-default-slot");
    this.isAndroidDevice = ((_b = (_a = navigator === null || navigator === void 0 ? void 0 : navigator.userAgent) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === null || _b === void 0 ? void 0 : _b.indexOf("android")) > -1 || null;
    this.isSafariBrowser = /^((?!chrome|android).)*safari/i.test(navigator === null || navigator === void 0 ? void 0 : navigator.userAgent);

    this.handleAndroidResizeEvents = () => {
      if (document.activeElement.tagName == "INPUT") {
        window.setTimeout(function () {
          var _a;

          try {
            //@ts-ignore
            (_a = document === null || document === void 0 ? void 0 : document.activeElement) === null || _a === void 0 ? void 0 : _a.scrollIntoViewIfNeeded(true);
          } catch (e) {//dev-null any errors here
          }
        }, 100);
      }
    };
    /**
     * State() variables
     * Inlined decorator, alphabetical order.
     */


    this.open = false;
    /**
     * The currently active language. This setting also changes the logo to match
     * the chosen language.
     * @deprecated this is now handled via the html lang tag, and is no longer used - kept to avoid breaking changes and ease unit testing
     * @default "fi"
     */

    this.language = (0,_language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_6__.a)();
    /**
     * Defaults for accessibleCloseLabel
     * @default {fi: "Sulje ikkuna", sv: "Stäng fönstret", en: "Close the dialog", }
     */

    this.accessibleCloseLabelDefaults = {
      fi: "Sulje ikkuna",
      sv: "Stäng fönstret",
      en: "Close the dialog"
    };
    /**
     * Adds accessible label for the close icon that is only shown for screen
     * readers. This property is always required to create an accessibly interface!
     * Swedish translation for this property is “Stäng fönstret”.
     * @default {fi: "Sulje ikkuna", sv: "Stäng fönstret", en: "Close the dialog", }
     */

    this.accessibleCloseLabel = (0,_language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_6__.g)(this.accessibleCloseLabelDefaults, this.language);
    /**
     * Size of the modal window.
     */

    this.size = "medium";
    /**
     * Size of the modal window.
     */

    this.gutterSize = "medium";
    /**
     * Theme of the modal.
     */

    this.theme = "";
    /**
     * Accessible heading displayed in the modal. The modal marks this as the
     * label of the modal when used. This helps screen reader users which is
     * why this is a required property.
     */

    this.heading = "";
    /**
     * Accessible heading size
     */

    this.headingLevel = "h3";
    /**
     * Icon to display above the heading (from Duet’s icons). Example:
     * "form-location"
     */

    this.icon = "";
    /**
     * Custom color to be used for the icon, as a design token entered in camelCase
     * or kebab-case. Example: "primary".
     */

    this.color = "";
    /**
     * Use this property when you need to have the modal dialog initially active.
     */

    this.active = false;
    /**
     * Use this property when you want the modal to close when clicked outside of modal.
     */

    this.closeOnBlur = false;
  }

  openChanged() {
    if (this.open) {
      if (this.modalEl && this.modalEl.scrollTop) {
        this.modalEl.scrollTop = 0;
      }

      this.focusedElBeforeOpen = document.activeElement;
      (0,_bodyScrollLock_es6_61b5e9a4_js__WEBPACK_IMPORTED_MODULE_2__.d)(this.modalEl, {
        reserveScrollBarGap: true
      });
      setTimeout(() => {
        this.buttonEl.setFocus();
      }, TRANSITION_MS);
      setTimeout(() => {
        this.modalEl.classList.add("duet-disable-transitions");
      }, TRANSITION_MS + 200); // fix for android devices where scrolling and softKeyboards MAY be
      // acting weird when the modal contains an input field

      if (this.isAndroidDevice) {
        window.addEventListener("resize", this.handleAndroidResizeEvents);
      }

      this.duetOpen.emit();
    } else {
      this.modalEl.classList.remove("duet-disable-transitions");
      (0,_bodyScrollLock_es6_61b5e9a4_js__WEBPACK_IMPORTED_MODULE_2__.e)(this.modalEl);
      this.duetClose.emit();
      setTimeout(() => {
        (0,_focus_utils_ea33cb8a_js__WEBPACK_IMPORTED_MODULE_4__.f)(this.focusedElBeforeOpen);
      }, TRANSITION_MS);

      if (this.isAndroidDevice) {
        window.removeEventListener("resize", this.handleAndroidResizeEvents);
      }
    }
  }

  activeChanged() {
    this.open = this.active;
  }
  /**
   * Component lifecycle events.
   */


  componentWillLoad() {
    (0,_themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_7__.i)(this);
  }

  componentDidLoad() {
    if (this.active) {
      // This specific line below can’t be moved to componentWillLoad()
      // as it breaks body scroll enabling.
      this.open = true;
      this.modalEl.classList.add("duet-disable-transitions");
    }
  }

  disconnectedCallback() {
    (0,_bodyScrollLock_es6_61b5e9a4_js__WEBPACK_IMPORTED_MODULE_2__.e)(this.modalEl);
  }
  /**
   * Component event handling.
   */


  handleKeyUp(ev) {
    if (this.open) {
      // When Esc is pressed the modal should be closed
      if ((0,_keyboard_utils_88ea1007_js__WEBPACK_IMPORTED_MODULE_5__.f)(ev)) {
        this.closeModal(ev);
      }
    }
  }
  /**
   * Shows the modal dialog. Additionally saves the element that triggered
   * the modal so that focus can be moved back to this specific element when
   * the modal dialog is closed.
   */


  show() {
    var _this = this;

    return (0,C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this.open = true;
    })();
  }
  /**
   * Hides the modal dialog and puts focus back to the original element
   * that triggered the modal (if we’re still in the same view).
   */


  hide() {
    var _this2 = this;

    return (0,C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this2.open = false;
    })();
  }
  /**
   * Local methods.
   */


  closeModal(ev) {
    this.duetBeforeClose.emit({
      originalEvent: ev,
      component: "duet-modal"
    }); // Make sure the event wasn’t prevented previously

    if (!ev.defaultPrevented) {
      setTimeout(() => {
        this.hide();
      }, 1);
    }
  }
  /**
   * render() function
   * Always the last one in the class.
   */


  render() {
    let iconColor = "primary";
    let closeColor = "secondary";

    if (this.theme === "turva") {
      iconColor = "primary-turva";
      closeColor = "secondary-turva";
    }

    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      ref: modal => this.modalEl = modal,
      "aria-labelledby": this.heading ? this.modalId : false,
      "aria-describedby": this.slotDefaultId,
      role: "dialog",
      "aria-modal": this.isSafariBrowser ? false : true,
      tabindex: "-1",
      "aria-flowto": this.slotDefaultId,
      class: {
        "duet-modal-overlay": true,
        "duet-theme-turva": this.theme === "turva",
        "duet-modal-active": this.open
      }
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)(_focus_utils_ea33cb8a_js__WEBPACK_IMPORTED_MODULE_4__.F, {
      moveFocusTo: this.buttonEl
    }), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        "duet-modal-inner": true,
        "duet-modal-large": this.size === "large"
      },
      role: "document",
      onClick: e => {
        if (this.closeOnBlur) {
          this.closeModal(e);
        }
      }
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        "duet-modal": true,
        [this.size]: true
      },
      onClick: e => {
        if (this.closeOnBlur) {
          e.stopPropagation();
        }
      }
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-spacer", null), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "duet-modal-close"
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-button", {
      ref: button => this.buttonEl = button,
      variation: "plain",
      accessibleLabel: this.accessibleCloseLabel,
      color: closeColor,
      iconSize: "large",
      icon: "navigation-close",
      iconOnly: true,
      margin: "none",
      theme: this.theme,
      onClick: ev => this.closeModal(ev),
      fixed: true
    })), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        "duet-modal-body": true,
        "duet-modal-gutter-small": this.gutterSize === "small",
        "duet-modal-gutter-medium": this.gutterSize === "medium",
        "duet-modal-gutter-large": this.gutterSize === "large"
      }
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "duet-modal-header"
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("span", {
      class: "duet-modal-inner-slot-top"
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
      name: "top"
    })), this.icon && (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-icon", {
      name: this.icon,
      size: "xx-large",
      color: this.color || iconColor
    }), this.heading && (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-heading", {
      level: this.headingLevel,
      theme: this.theme,
      id: this.modalId
    }, this.heading)), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("span", {
      class: "duet-modal-inner-slot-default",
      id: this.slotDefaultId
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null))))), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)(_focus_utils_ea33cb8a_js__WEBPACK_IMPORTED_MODULE_4__.F, {
      moveFocusTo: this.buttonEl
    }));
  }

  get element() {
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

  static get watchers() {
    return {
      "open": ["openChanged"],
      "active": ["activeChanged"]
    };
  }

};
DuetModal.style = duetModalCss;


/***/ }),

/***/ 7558:
/*!*********************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/themeable-component-e8fc98bf.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "i": () => (/* binding */ inheritGlobalTheme)
/* harmony export */ });
/*!
 * Built with Duet Design System
 */
const inheritGlobalTheme = (component) => {
  // this minor change enables duet-theme-XXXXX instead of just duet-theme-turva
  const classList = Array.from(document.documentElement.classList).join(" ") || "";
  const theme = /(duet-theme-)([a-z]*)/gis.exec(classList);
  if (theme && theme[1] === "duet-theme-") {
    component.theme = theme[2] === "default" ? "" : theme[2];
  }
};




/***/ })

}]);
//# sourceMappingURL=node_modules_duetds_components_lib_esm_duet-modal_entry_js.js.map