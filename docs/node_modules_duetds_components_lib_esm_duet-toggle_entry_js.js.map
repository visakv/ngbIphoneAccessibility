{"version":3,"file":"node_modules_duetds_components_lib_esm_duet-toggle_entry_js.js","mappings":"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","sources":["./node_modules/@duetds/components/lib/esm/create-id-981107da.js","./node_modules/@duetds/components/lib/esm/duet-toggle.entry.js","./node_modules/@duetds/components/lib/esm/themeable-component-e8fc98bf.js"],"sourcesContent":["/*!\n * Built with Duet Design System\n */\nfunction chr4() {\n  return Math.random().toString(16).slice(-4);\n}\nfunction createID(prefix) {\n  return `${prefix}-${chr4()}${chr4()}-${chr4()}-${chr4()}-${chr4()}-${chr4()}${chr4()}${chr4()}`;\n}\n\nexport { createID as c };\n","/*!\n * Built with Duet Design System\n */\nimport { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-54e0bce3.js';\nimport { c as createID } from './create-id-981107da.js';\nimport { i as inheritGlobalTheme } from './themeable-component-e8fc98bf.js';\n\nconst duetToggleCss = \"*.sc-duet-toggle,*.sc-duet-toggle::after,*.sc-duet-toggle::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}.sc-duet-toggle-h{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;margin-right:8px !important;margin-bottom:12px !important;-webkit-user-select:none;user-select:none;display:inline-flex;width:100%;vertical-align:bottom;-webkit-tap-highlight-color:transparent}.sc-duet-toggle-h:last-child,.sc-duet-toggle-h:last-of-type{margin-right:0 !important}.duet-m-0.sc-duet-toggle-h{margin:0 !important}duet-label.sc-duet-toggle{display:block !important;width:100% !important}.duet-switch.sc-duet-toggle{position:relative;display:block;width:48px;height:28px}.duet-switch.sc-duet-toggle input.sc-duet-toggle{position:absolute !important;top:0;width:1px !important;height:1px !important;padding:0 !important;overflow:hidden !important;clip:rect(1px, 1px, 1px, 1px) !important;border:0 !important}.duet-switch.sc-duet-toggle input.sc-duet-toggle:checked+.duet-slider.sc-duet-toggle{background-color:#0077b3;box-shadow:none}.duet-theme-turva.sc-duet-toggle .duet-switch.sc-duet-toggle input.sc-duet-toggle:checked+.duet-slider.sc-duet-toggle{background-color:#c60c30}.duet-switch.sc-duet-toggle input.sc-duet-toggle:checked+.duet-slider.sc-duet-toggle::before{background-color:white;box-shadow:none;transform:translateX(20px)}.duet-switch.sc-duet-toggle input.sc-duet-toggle:disabled+.duet-slider.sc-duet-toggle{cursor:default}.duet-switch.sc-duet-toggle input.sc-duet-toggle:disabled:not(:checked)+.duet-slider.sc-duet-toggle{box-shadow:inset 0 0 0 1px #cfd2d4}.duet-theme-turva.sc-duet-toggle .duet-switch.sc-duet-toggle input.sc-duet-toggle:disabled:not(:checked)+.duet-slider.sc-duet-toggle{box-shadow:inset 0 0 0 1px #cfcfd1}.duet-switch.sc-duet-toggle input.sc-duet-toggle:disabled:not(:checked)+.duet-slider.sc-duet-toggle::before{background:#cfd2d4}.duet-theme-turva.sc-duet-toggle .duet-switch.sc-duet-toggle input.sc-duet-toggle:disabled:not(:checked)+.duet-slider.sc-duet-toggle::before{background:#cfcfd1}.duet-switch.sc-duet-toggle input.sc-duet-toggle:disabled:checked+.duet-slider.sc-duet-toggle{background:#cfd2d4}.duet-theme-turva.sc-duet-toggle .duet-switch.sc-duet-toggle input.sc-duet-toggle:disabled:checked+.duet-slider.sc-duet-toggle{background:#cfcfd1}.user-is-tabbing.sc-duet-toggle-h .duet-switch.sc-duet-toggle input.sc-duet-toggle:focus+.duet-slider.sc-duet-toggle{box-shadow:0 0 0 1px white, 0 0 0 3px rgba(0, 119, 179, 0.75)}.user-is-tabbing.sc-duet-toggle-h .duet-theme-turva.sc-duet-toggle .duet-switch.sc-duet-toggle input.sc-duet-toggle:focus+.duet-slider.sc-duet-toggle{box-shadow:0 0 0 1px white, 0 0 0 3px #171c3a}.duet-slider.sc-duet-toggle{position:absolute;top:0;right:0;bottom:0;left:0;cursor:pointer;background-color:white;border-radius:20px;box-shadow:inset 0 0 0 1px #00294d;transition:background-color 300ms ease}.duet-theme-turva.sc-duet-toggle .duet-slider.sc-duet-toggle{box-shadow:inset 0 0 0 1px #171c3a}.duet-slider.sc-duet-toggle::before{position:absolute;bottom:4px;left:4px;width:20px;height:20px;content:\\\"\\\";background-color:#00294d;border-radius:50%;transition:300ms ease}.duet-theme-turva.sc-duet-toggle .duet-slider.sc-duet-toggle::before{background-color:#171c3a}\";\n\nconst DuetToggle = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.duetChange = createEvent(this, \"duetChange\", 3);\n    /**\n     * Own Properties\n     */\n    this.toggleId = createID(\"DuetToggle\");\n    /**\n     * Theme of the card.\n     */\n    this.theme = \"\";\n    /**\n     * Controls the margin of the component.\n     */\n    this.margin = \"auto\";\n    /**\n     * Label for the toggle.\n     */\n    this.label = \"label\";\n    /**\n     * Set whether the input is required or not. Please note that this is necessary for\n     * accessible inputs when the user is required to fill them. When using this property\n     * you need to also set “novalidate” attribute to your form element to prevent\n     * browser from displaying its own validation errors.\n     */\n    this.required = false;\n    /**\n     * Makes the input component disabled. This prevents users from being able to\n     * interact with the input, and conveys its inactive state to assistive technologies.\n     */\n    this.disabled = false;\n    /**\n     * Check state of the checkbox.\n     */\n    this.checked = false;\n    /**\n     * Component event handling.\n     */\n    this.onClick = (ev) => {\n      ev.preventDefault();\n      this.setFocus();\n      this.checked = !this.checked;\n    };\n  }\n  checkedChanged(isChecked) {\n    this.duetChange.emit({\n      checked: isChecked,\n      value: this.value,\n      component: \"duet-toggle\",\n    });\n  }\n  /**\n   * Component lifecycle events.\n   */\n  componentWillLoad() {\n    inheritGlobalTheme(this);\n    if (this.value === undefined) {\n      this.value = this.identifier;\n    }\n  }\n  /**\n   * Sets focus on the specified `duet-toggle`. Use this method instead of the global\n   * `input.focus()`.\n   */\n  async setFocus(options) {\n    this.nativeInput.focus(options);\n  }\n  /**\n   * render() function\n   * Always the last one in the class.\n   */\n  render() {\n    const identifier = this.identifier || this.toggleId;\n    return (h(Host, { onClick: this.disabled ? undefined : this.onClick, class: { \"duet-m-0\": this.margin === \"none\" } }, h(\"div\", { class: {\n        \"duet-toggle\": true,\n        \"duet-theme-turva\": this.theme === \"turva\",\n      } }, h(\"duet-label\", { theme: this.theme, for: identifier }, this.label), h(\"label\", { class: \"duet-switch\", htmlFor: identifier }, h(\"input\", { type: \"checkbox\", value: this.value, \"aria-controls\": this.accessibleControls, \"aria-activedescendant\": this.accessibleActiveDescendant, \"aria-owns\": this.accessibleOwns, \"aria-describedby\": this.accessibleDescribedBy, id: identifier, role: this.role, name: this.name, checked: this.checked, required: this.required, disabled: this.disabled, ref: input => (this.nativeInput = input) }), h(\"div\", { class: \"duet-slider\" })))));\n  }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"checked\": [\"checkedChanged\"]\n  }; }\n};\nDuetToggle.style = duetToggleCss;\n\nexport { DuetToggle as duet_toggle };\n","/*!\n * Built with Duet Design System\n */\nconst inheritGlobalTheme = (component) => {\n  // this minor change enables duet-theme-XXXXX instead of just duet-theme-turva\n  const classList = Array.from(document.documentElement.classList).join(\" \") || \"\";\n  const theme = /(duet-theme-)([a-z]*)/gis.exec(classList);\n  if (theme && theme[1] === \"duet-theme-\") {\n    component.theme = theme[2] === \"default\" ? \"\" : theme[2];\n  }\n};\n\nexport { inheritGlobalTheme as i };\n"],"names":["r","registerInstance","c","createEvent","h","H","Host","g","getElement","createID","i","inheritGlobalTheme","duetToggleCss","DuetToggle","constructor","hostRef","duetChange","toggleId","theme","margin","label","required","disabled","checked","onClick","ev","preventDefault","setFocus","checkedChanged","isChecked","emit","value","component","componentWillLoad","undefined","identifier","options","nativeInput","focus","render","class","for","htmlFor","type","accessibleControls","accessibleActiveDescendant","accessibleOwns","accessibleDescribedBy","id","role","name","ref","input","element","watchers","style","duet_toggle"],"sourceRoot":"webpack:///"}