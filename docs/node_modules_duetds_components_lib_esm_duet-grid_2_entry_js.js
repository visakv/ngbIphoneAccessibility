"use strict";
(self["webpackChunkduet_angular_template"] = self["webpackChunkduet_angular_template"] || []).push([["node_modules_duetds_components_lib_esm_duet-grid_2_entry_js"],{

/***/ 4089:
/*!**********************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/duet-grid_2.entry.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "duet_grid": () => (/* binding */ DuetGrid),
/* harmony export */   "duet_grid_item": () => (/* binding */ DuetGridItem)
/* harmony export */ });
/* harmony import */ var C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 1670);
/* harmony import */ var _index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-54e0bce3.js */ 3669);
/* harmony import */ var _tokens_e110dc89_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tokens-e110dc89.js */ 7935);
/* harmony import */ var _watch_options_dd55bce8_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./watch-options-dd55bce8.js */ 7567);
/* harmony import */ var _themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./themeable-component-e8fc98bf.js */ 7558);


/*!
 * Built with Duet Design System
 */




const duetGridCss = ".sc-duet-grid-h{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;display:flex !important;flex-direction:column !important;align-items:flex-start !important;justify-content:flex-start !important;width:100%;max-width:100%;height:auto}@media (min-width: 36em){.duet-grid-breakpoint-small.sc-duet-grid-h{flex-direction:row !important}}@media (min-width: 48em){.duet-grid-breakpoint-medium.sc-duet-grid-h{flex-direction:row !important}}@media (min-width: 64.0625em){.duet-grid-breakpoint-x-large.sc-duet-grid-h{flex-direction:row !important}}.duet-grid-wrap.sc-duet-grid-h{flex-wrap:wrap !important}.duet-no-stacking.sc-duet-grid-h{flex-direction:row !important}.duet-grid-direction-vertical.duet-grid-breakpoint-small.sc-duet-grid-h{flex-direction:column !important}@media (min-width: 36em){.duet-grid-direction-vertical.duet-grid-breakpoint-small.sc-duet-grid-h{flex-direction:column !important}}.duet-grid-direction-vertical.duet-grid-breakpoint-medium.sc-duet-grid-h{flex-direction:column !important}@media (min-width: 48em){.duet-grid-direction-vertical.duet-grid-breakpoint-medium.sc-duet-grid-h{flex-direction:column !important}}.duet-grid-direction-vertical.duet-grid-breakpoint-x-large.sc-duet-grid-h{flex-direction:column !important}@media (min-width: 64.0625em){.duet-grid-direction-vertical.duet-grid-breakpoint-x-large.sc-duet-grid-h{flex-direction:column !important}}.duet-grid-align-top.duet-no-stacking.sc-duet-grid-h{align-items:flex-start !important}.duet-grid-align-bottom.duet-no-stacking.sc-duet-grid-h{align-items:flex-end !important}.duet-grid-align-center.duet-no-stacking.sc-duet-grid-h{align-items:center !important}.duet-grid-align-stretch.duet-no-stacking.sc-duet-grid-h{align-items:stretch !important}.duet-grid-align-baseline.duet-no-stacking.sc-duet-grid-h{align-items:baseline !important}@media (min-width: 36em){.duet-grid-align-top.duet-grid-breakpoint-small.sc-duet-grid-h{align-items:flex-start !important}}@media (min-width: 36em){.duet-grid-align-bottom.duet-grid-breakpoint-small.sc-duet-grid-h{align-items:flex-end !important}}@media (min-width: 36em){.duet-grid-align-center.duet-grid-breakpoint-small.sc-duet-grid-h{align-items:center !important}}@media (min-width: 36em){.duet-grid-align-stretch.duet-grid-breakpoint-small.sc-duet-grid-h{align-items:stretch !important}}@media (min-width: 36em){.duet-grid-align-baseline.duet-grid-breakpoint-small.sc-duet-grid-h{align-items:baseline !important}}@media (min-width: 48em){.duet-grid-align-top.duet-grid-breakpoint-medium.sc-duet-grid-h{align-items:flex-start !important}}@media (min-width: 48em){.duet-grid-align-bottom.duet-grid-breakpoint-medium.sc-duet-grid-h{align-items:flex-end !important}}@media (min-width: 48em){.duet-grid-align-center.duet-grid-breakpoint-medium.sc-duet-grid-h{align-items:center !important}}@media (min-width: 48em){.duet-grid-align-stretch.duet-grid-breakpoint-medium.sc-duet-grid-h{align-items:stretch !important}}@media (min-width: 48em){.duet-grid-align-baseline.duet-grid-breakpoint-medium.sc-duet-grid-h{align-items:baseline !important}}@media (min-width: 64.0625em){.duet-grid-align-top.duet-grid-breakpoint-x-large.sc-duet-grid-h{align-items:flex-start !important}}@media (min-width: 64.0625em){.duet-grid-align-bottom.duet-grid-breakpoint-x-large.sc-duet-grid-h{align-items:flex-end !important}}@media (min-width: 64.0625em){.duet-grid-align-center.duet-grid-breakpoint-x-large.sc-duet-grid-h{align-items:center !important}}@media (min-width: 64.0625em){.duet-grid-align-stretch.duet-grid-breakpoint-x-large.sc-duet-grid-h{align-items:stretch !important}}@media (min-width: 64.0625em){.duet-grid-align-baseline.duet-grid-breakpoint-x-large.sc-duet-grid-h{align-items:baseline !important}}.duet-grid-distribution-left.sc-duet-grid-h{justify-content:flex-start !important}.duet-grid-distribution-right.sc-duet-grid-h{justify-content:flex-end !important}.duet-grid-distribution-center.sc-duet-grid-h{justify-content:center !important}.duet-grid-distribution-between.sc-duet-grid-h{justify-content:space-between !important}.duet-grid-distribution-around.sc-duet-grid-h{justify-content:space-around !important}.duet-grid-distribution-evenly.sc-duet-grid-h{justify-content:space-evenly !important}@media (max-width: 35.9375em){.duet-grid-mobile-left.sc-duet-grid-h{align-items:flex-start !important;justify-content:flex-start !important;text-align:left !important}}@media (max-width: 35.9375em){.duet-grid-mobile-center.sc-duet-grid-h{align-items:center !important;justify-content:center !important;text-align:center !important}.duet-grid-mobile-center.sc-duet-grid-h *.sc-duet-grid{text-align:center !important}}@media (max-width: 35.9375em){.duet-grid-mobile-right.sc-duet-grid-h{align-items:flex-end !important;justify-content:flex-end !important;text-align:right !important}.duet-grid-mobile-right.sc-duet-grid-h *.sc-duet-grid{text-align:right !important}}";

function isGridItem(element) {
  return element.tagName.toLowerCase() === "duet-grid-item";
}

const DuetGrid = class {
  constructor(hostRef) {
    (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.mql = [window.matchMedia(_tokens_e110dc89_js__WEBPACK_IMPORTED_MODULE_2__.m.replace(/'/g, "")), window.matchMedia(_tokens_e110dc89_js__WEBPACK_IMPORTED_MODULE_2__.a.replace(/'/g, "")), window.matchMedia(_tokens_e110dc89_js__WEBPACK_IMPORTED_MODULE_2__.b.replace(/'/g, ""))];
    this.distributeFormElement = false;
    /**
     * Enable or disable the automatic responsive behaviour of the grid component.
     * Setting this option to "true" makes sure that contents are stacked vertically
     * on mobile (575px and under).
     */

    this.responsive = false;
    /**
     * Switch the breakpoint used to trigger the content stacking. These match to
     * similar media query tokens: $media-query-small and $media-query-medium.
     */

    this.breakpoint = "small";
    /**
     * Direction of the grid items.
     */

    this.direction = "horizontal";
    /**
     * Adjusts the vertical alignment of the grid items, if set to "form_distribute"
     * the grid will try to calculate correct paddings for any duet-input fields inside duet-grid-items,
     * so that they align even when displaying errors.
     */

    this.alignment = "top";
    /**
     * Adjusts the horizontal distribution of the grid items.
     */

    this.distribution = "default";
    /**
     * Adjusts the horizontal alignment of the grid items on mobile (575px and under).
     */

    this.mobile = "";
  }
  /**
   * Private functions
   */

  /**
   * Returns the element height including margins
   * @param element - element
   * @returns {number}
   */


  outerHeight(element) {
    const height = element.offsetHeight,
          style = window.getComputedStyle(element);
    return ["top", "bottom"].map(side => parseInt(style[`margin-${side}`])).reduce((total, side) => total + side, height);
  }
  /**
   * Component lifecycle events.
   */


  connectedCallback() {
    var _this = this;

    return (0,C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const el = _this.element;
      _this.distributeFormElement = _this.alignment === "form_distribute";
      _this.mutationO = (0,_watch_options_dd55bce8_js__WEBPACK_IMPORTED_MODULE_3__.w)(el, "duet-grid-item", () => {
        _this.updateGridItems();
      }); // the next two functions are used to watch for changes in the grid items, and are process intensive - so only run when needed

      if (_this.distributeFormElement) {
        _this.mutation1 = (0,_watch_options_dd55bce8_js__WEBPACK_IMPORTED_MODULE_3__.a)(el, "duet-input", () => {
          _this.updateGridItemsWithInputFields();
        }); // listen for potential mediaquery changes and reset layout

        for (let i = 0; i < _this.mql.length; i++) {
          // addEventListener is not available in Stencil hydrate
          if (_this.mql[i].addEventListener) {
            _this.mql[i].addEventListener("change", _this.updateGridItemsWithInputFields.bind(_this));
          }
        }
      }

      _this.updateGridItems();
    })();
  }

  disconnectedCallback() {
    if (this.mutationO) {
      this.mutationO.disconnect();
      this.mutationO = undefined;
    }

    if (this.mutation1) {
      this.mutation1.disconnect();
      this.mutation1 = undefined;
    } // listen for potential mediaquery changes and reset layout


    for (let i = 0; i < this.mql.length; i++) {
      // addEventListener is not available in Stencil hydrate
      if (this.mql[i].removeEventListener) {
        this.mql[i].removeEventListener("change", this.updateGridItemsWithInputFields.bind(this));
      }
    }
  }
  /**
   * Local methods
   */


  updateGridItems() {
    var _this2 = this;

    return (0,C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const items = Array.from(_this2.element.children).filter(isGridItem);
      items.forEach(item => {
        item.responsive = _this2.responsive;
        item.breakpoint = _this2.breakpoint;
      });
    })();
  }

  updateGridItemsWithInputFields() {
    var _this3 = this;

    return (0,C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const items = Array.from(_this3.element.children).filter(isGridItem); // if layout changes to columns instead of row, remove all padding

      const hasColumnLayout = window ? window.getComputedStyle(_this3.element).flexDirection === "column" : false;
      let maxHeight = 0;
      const sizes = [];
      items.forEach(item => {
        const inputErrorDom = item.querySelector("span.duet-input-error");
        const height = inputErrorDom ? _this3.outerHeight(inputErrorDom) : 0;
        sizes.push(height);
      });
      maxHeight = Math.max(...sizes);
      items.forEach(item => {
        const inputErrorDom = item.querySelector("span.duet-input-error");
        const height = inputErrorDom ? _this3.outerHeight(inputErrorDom) : 0;

        if (height < maxHeight && !hasColumnLayout) {
          item.setAttribute("style", `padding-bottom: ${maxHeight - height}px;`);
        } else if (height === maxHeight || hasColumnLayout) {
          item.setAttribute("style", `padding-bottom: 0px;`);
        }
      });
    })();
  }
  /**
   * render() function
   * Always the last one in the class.
   */


  render() {
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      class: {
        "duet-grid": true,
        "duet-no-stacking": !this.responsive,
        "duet-grid-align-top": this.alignment === "top",
        "duet-grid-align-bottom": this.alignment === "bottom" || this.alignment === "form_distribute",
        "duet-grid-align-center": this.alignment === "center",
        "duet-grid-align-stretch": this.alignment === "stretch",
        "duet-grid-align-baseline": this.alignment === "baseline",
        "duet-grid-distribution-left": this.distribution === "left",
        "duet-grid-distribution-right": this.distribution === "right",
        "duet-grid-distribution-center": this.distribution === "center",
        "duet-grid-distribution-between": this.distribution === "space-between",
        "duet-grid-distribution-around": this.distribution === "space-around",
        "duet-grid-distribution-evenly": this.distribution === "space-evenly",
        "duet-grid-mobile-left": this.mobile === "left",
        "duet-grid-mobile-center": this.mobile === "center",
        "duet-grid-mobile-right": this.mobile === "right",
        "duet-grid-direction-horizontal": this.direction === "horizontal",
        "duet-grid-direction-vertical": this.direction === "vertical",
        "duet-grid-breakpoint-small": this.breakpoint === "small",
        "duet-grid-breakpoint-medium": this.breakpoint === "medium",
        "duet-grid-breakpoint-x-large": this.breakpoint === "x-large"
      }
    });
  }

  get element() {
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

  static get watchers() {
    return {
      "responsive": ["updateGridItems"],
      "breakpoint": ["updateGridItems"]
    };
  }

};
DuetGrid.style = duetGridCss;
const duetGridItemCss = ".sc-duet-grid-item-h{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;margin-bottom:16px !important;min-width:0;max-width:100%;flex:0 0 auto;padding-right:8px;padding-left:8px;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1rem;font-style:normal;font-weight:400;line-height:1.5;color:#00294d}.sc-duet-grid-item-h:first-child,.sc-duet-grid-item-h:first-of-type{padding-left:0}.sc-duet-grid-item-h:last-child,.sc-duet-grid-item-h:last-of-type{padding-right:0}@media (max-width: 35.9375em){.duet-grid-item-responsive.sc-duet-grid-item-h{width:100% !important;min-width:0 !important;max-width:100% !important;padding-right:0;padding-left:0}}@media screen and (max-width: 47.9375em){.duet-grid-item-br-medium.sc-duet-grid-item-h{width:100% !important;min-width:0 !important;max-width:100% !important}}@media screen and (max-width: 47.9375em){.duet-grid-item-responsive.duet-grid-item-br-medium.sc-duet-grid-item-h{padding-right:0;padding-left:0}}@media screen and (max-width: 64em){.duet-grid-item-br-x-large.sc-duet-grid-item-h{width:100% !important;min-width:0 !important;max-width:100% !important}}@media screen and (max-width: 64em){.duet-grid-item-responsive.duet-grid-item-br-x-large.sc-duet-grid-item-h{padding-right:0;padding-left:0}}.duet-grid-item-fill.sc-duet-grid-item-h{flex:1 1 auto;width:100%}.duet-theme-turva.sc-duet-grid-item-h{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:#171c3a}.duet-m-0.sc-duet-grid-item-h{padding:0 !important;margin:0 !important}";
const DuetGridItem = class {
  constructor(hostRef) {
    (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    /**
     * Make the grid item fill the remaining available grid space.
     */

    this.fill = false;
    /**
     * Theme of the grid item.
     */

    this.theme = "";
    /**
     * Controls the margin of the component.
     */

    this.margin = "auto";
    /**
     * @internal
     * Enable or disable the automatic responsive behaviour of the grid item.
     * This property is used internally by Grid, and should not be set by the developer.
     */

    this.responsive = false;
    /**
     * @internal
     * Switch the breakpoint used to trigger the content stacking.
     * This property is used internally by Grid, and should not be set by the developer.
     */

    this.breakpoint = "small";
  }
  /**
   * Component lifecycle events.
   */


  componentWillLoad() {
    (0,_themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_4__.i)(this);
  }
  /**
   * render() function
   * Always the last one in the class.
   */


  render() {
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      style: {
        "min-width": this.minWidth,
        "max-width": this.maxWidth
      },
      class: {
        "duet-m-0": this.margin === "none",
        "duet-theme-turva": this.theme === "turva",
        "duet-grid-item": true,
        "duet-grid-item-fill": this.fill,
        "duet-grid-item-responsive": this.responsive,
        "duet-grid-item-br-medium": this.breakpoint === "medium",
        "duet-grid-item-br-x-large": this.breakpoint === "x-large"
      }
    });
  }

};
DuetGridItem.style = duetGridItemCss;


/***/ }),

/***/ 7558:
/*!*********************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/themeable-component-e8fc98bf.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "i": () => (/* binding */ inheritGlobalTheme)
/* harmony export */ });
/*!
 * Built with Duet Design System
 */
const inheritGlobalTheme = (component) => {
  // this minor change enables duet-theme-XXXXX instead of just duet-theme-turva
  const classList = Array.from(document.documentElement.classList).join(" ") || "";
  const theme = /(duet-theme-)([a-z]*)/gis.exec(classList);
  if (theme && theme[1] === "duet-theme-") {
    component.theme = theme[2] === "default" ? "" : theme[2];
  }
};




/***/ })

}]);
//# sourceMappingURL=node_modules_duetds_components_lib_esm_duet-grid_2_entry_js.js.map