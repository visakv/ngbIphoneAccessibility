"use strict";
(self["webpackChunkduet_angular_template"] = self["webpackChunkduet_angular_template"] || []).push([["node_modules_duetds_components_lib_esm_duet-action-button_entry_js"],{

/***/ 9668:
/*!***********************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/create-id-981107da.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "c": () => (/* binding */ createID)
/* harmony export */ });
/*!
 * Built with Duet Design System
 */
function chr4() {
  return Math.random().toString(16).slice(-4);
}
function createID(prefix) {
  return `${prefix}-${chr4()}${chr4()}-${chr4()}-${chr4()}-${chr4()}-${chr4()}${chr4()}${chr4()}`;
}




/***/ }),

/***/ 2436:
/*!*****************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/duet-action-button.entry.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "duet_action_button": () => (/* binding */ DuetActionButton)
/* harmony export */ });
/* harmony import */ var C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 1670);
/* harmony import */ var _index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-54e0bce3.js */ 3669);
/* harmony import */ var _create_id_981107da_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./create-id-981107da.js */ 9668);
/* harmony import */ var _js_utils_52e0944c_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./js-utils-52e0944c.js */ 3305);
/* harmony import */ var _keyboard_utils_88ea1007_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./keyboard-utils-88ea1007.js */ 1681);
/* harmony import */ var _language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./language-utils-bf701d37.js */ 2601);
/* harmony import */ var _themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./themeable-component-e8fc98bf.js */ 7558);
/* harmony import */ var _token_utils_e9a69acf_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./token-utils-e9a69acf.js */ 359);
/* harmony import */ var _string_utils_5954f458_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./string-utils-5954f458.js */ 4506);
/* harmony import */ var _tokens_module_49cbf963_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./tokens.module-49cbf963.js */ 2370);


/*!
 * Built with Duet Design System
 */









const duetActionButtonCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;display:inline-block;margin:0 auto}button.duet-action-button{white-space:nowrap}button.duet-action-button{display:inline-flex;align-items:center;justify-content:center;width:32px;height:32px;min-height:auto !important;padding:0 !important;margin:0 0 0 8px !important;color:#00294d;cursor:pointer;background:#f5f8fa;border-radius:50%;transition:background-color 300ms ease !important}.duet-theme-turva button.duet-action-button{color:#171c3a;background:#f5f5f7}button.duet-action-button duet-icon{display:block}@media (max-width: 35.9375em){button.duet-action-button{width:32px;height:32px}}button.duet-action-button:not(:disabled):hover{background:#e9ecee !important}.duet-theme-turva button.duet-action-button:not(:disabled):hover{background:#e9e9eb !important}button.duet-action-button:focus{outline:0;box-shadow:0 0 0 2px #0077b3 !important}.duet-theme-turva button.duet-action-button:focus{box-shadow:0 0 0 2px #171c3a !important}button.duet-action-button:active:focus{background:#dddfe1 !important;box-shadow:none}.duet-theme-turva button.duet-action-button:active:focus{background:#ddddde !important}button.duet-action-button:disabled{color:#909599;cursor:default;background:#f5f8fa;opacity:0.75}.duet-theme-turva button.duet-action-button:disabled{color:#747475;background:#f5f5f7}";
const DuetActionButton = class {
  constructor(hostRef) {
    (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.duetActionEvent = (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "duetActionEvent", 6);
    this.numbersStore = "";
    /**
     * Theme of the pagination.
     */

    this.theme = "";
    /**
     * Name of the icon to display
     */

    this.iconName = "action-arrow-left-small";
    /**
     * Color of the icon to display
     */

    this.iconColor = "currentColor";
    /**
     * Size of the icon
     */

    this.iconSize = "xx-small";
    /**
     * Name of action being called
     */

    this.actionName = "default-action";
    /**
     * Name of id of action that was called being called
     */

    this.actionId = undefined;
    /**
     * Name of id of action that was called being called
     */

    this.actionMeta = undefined;
    /**
     * Disables the button
     */

    this.disabled = false;
    /**
     * Custom color to be used for the icon, as a design token entered in camelCase
     * or kebab-case. Example: "color-primary". This property can also be set to
     * "currentColor" which forces the icon to use the CSS text color of parent
     * element instead. Useful when you want to control the color in stylesheet
     * instead.
     */

    this.color = "";
    /**
     * Custom color to be used for a background, as a design token entered
     * in camelCase or kebab-case. Using this option the icon will always be resized
     * to $size-icon-medium on mobile viewports. Example: "color-primary".
     */

    this.background = "";
    /**
     * Described By id
     */

    this.ariaDescribedBy = undefined;
    /**
     * Aria description the button
     */

    this.ariaDescription = undefined;
    /**
     * Default pagination labels
     */

    this.ariaLabelsDefaults = {
      en: {
        label: "Click to activate action"
      },
      fi: {
        label: "Klikkaa toiminnon aktivointiin"
      },
      sv: {
        label: "Klicka för att aktivera åtgärd"
      }
    };
    /**
     * Default pagination labels
     */

    this.ariaLabels = (0,_language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_5__.g)(this.ariaLabelsDefaults);
    /**
     * Used to indicate which dom element with ID this element controls
     */

    this.ariaControls = "";
    this.listId = (0,_create_id_981107da_js__WEBPACK_IMPORTED_MODULE_2__.c)("duet-action-button");
    /**
     * Private methods.
     */
    //helper to emit relevant page events

    this.emitPageEvent = (0,_js_utils_52e0944c_js__WEBPACK_IMPORTED_MODULE_3__.d)(e => {
      this.duetActionEvent.emit({
        component: "duet-action-button",
        originalEvent: e,
        action: this.actionId,
        name: this.actionName,
        meta: this.actionMeta,
        id: this.listId
      });
    });
  } //handle a11y keyboard navigation events


  onKeyboardDown(e) {
    var _this = this;

    return (0,C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if ((0,_keyboard_utils_88ea1007_js__WEBPACK_IMPORTED_MODULE_4__.i)(e)) {
        _this.emitPageEvent(e);
      }
    })();
  } //set update current when mouse click on page number


  onMouseHandler(e) {
    var _this2 = this;

    return (0,C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      e.preventDefault();

      _this2.duetActionEvent.emit({
        component: "duet-action-button",
        originalEvent: e,
        action: _this2.actionName,
        id: _this2.actionId,
        meta: _this2.actionMeta
      });
    })();
  }
  /**
   * Component lifecycle events.
   */


  componentWillLoad() {
    (0,_themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_6__.i)(this);
  }
  /**
   * render() function
   * Always the last one in the class.
   */


  render() {
    const color = this.color === "currentColor" ? "currentColor" : (0,_token_utils_e9a69acf_js__WEBPACK_IMPORTED_MODULE_7__.g)(this.color, this.theme);
    const styles = {
      color,
      background: (0,_token_utils_e9a69acf_js__WEBPACK_IMPORTED_MODULE_7__.g)(this.background, this.theme),
      "border-color": (0,_token_utils_e9a69acf_js__WEBPACK_IMPORTED_MODULE_7__.g)(this.iconColor, this.theme),
      "border-width": "1px",
      "border-style": "solid"
    };
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      onKeyDown: e => this.onKeyboardDown(e)
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("button", {
      part: "button",
      style: styles,
      disabled: this.disabled,
      id: this.listId,
      class: {
        "duet-action-button": true,
        "duet-action-button--disabled": this.disabled,
        [`duet-action-button--${this.theme}`]: this.theme !== ""
      },
      type: "button",
      onClick: e => this.onMouseHandler(e),
      "aria-label": this.ariaLabels.label,
      "aria-description": this.ariaDescription,
      "aria-describedby": this.ariaDescribedBy,
      "aria-controls": this.ariaControls
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-icon", {
      part: "icon",
      name: this.iconName,
      color: this.iconColor,
      margin: "none",
      size: this.iconSize
    }), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-visually-hidden", null, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null))));
  }

  get element() {
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

};
DuetActionButton.style = duetActionButtonCss;


/***/ }),

/***/ 1681:
/*!****************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/keyboard-utils-88ea1007.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "a": () => (/* binding */ isArrowRightKey),
/* harmony export */   "b": () => (/* binding */ isArrowUpKey),
/* harmony export */   "c": () => (/* binding */ isArrowDownKey),
/* harmony export */   "d": () => (/* binding */ isArrowLeftKey),
/* harmony export */   "e": () => (/* binding */ isBackspaceKey),
/* harmony export */   "f": () => (/* binding */ isEscapeKey),
/* harmony export */   "g": () => (/* binding */ isSpaceKey),
/* harmony export */   "h": () => (/* binding */ isQuestionKey),
/* harmony export */   "i": () => (/* binding */ isKeyboardClick),
/* harmony export */   "j": () => (/* binding */ isArrowKey),
/* harmony export */   "k": () => (/* binding */ isNumber),
/* harmony export */   "l": () => (/* binding */ isMinusKey),
/* harmony export */   "m": () => (/* binding */ isPlusKey),
/* harmony export */   "n": () => (/* binding */ isEnterKey),
/* harmony export */   "o": () => (/* binding */ isTabKey)
/* harmony export */ });
/*!
 * Built with Duet Design System
 */
const isArrowLeftKey = (e) => e.keyCode === 37;
const isArrowUpKey = (e) => e.keyCode === 38;
const isArrowRightKey = (e) => e.keyCode === 39;
const isArrowDownKey = (e) => e.keyCode === 40;
const isArrowKey = (e) => isArrowDownKey(e) || isArrowRightKey(e) || isArrowUpKey(e) || isArrowLeftKey(e);
const isEscapeKey = (e) => e.key === "Escape" || e.key === "Esc" || e.keyCode === 27;
const isTabKey = (e) => e.key === "Tab" || e.keyCode === 9;
const isBackspaceKey = (e) => e.keyCode === 8;
const isSpaceKey = (e) => e.key === "Space" || e.keyCode === 32;
const isPlusKey = (e) => e.key === "+" || e.keyCode === 43;
const isMinusKey = (e) => e.key === "-" || e.keyCode === 45;
const isQuestionKey = (e) => e.key === "?";
const isEnterKey = (e) => e.key === "Enter" || e.keyCode === 13;
const isKeyboardClick = (e) => isEnterKey(e) || isSpaceKey(e);
const isNumber = (e) => (e.keyCode >= 48 && e.keyCode <= 57) || (e.keyCode >= 96 && e.keyCode <= 105);




/***/ }),

/***/ 2601:
/*!****************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/language-utils-bf701d37.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "a": () => (/* binding */ getLanguage),
/* harmony export */   "b": () => (/* binding */ getLocale),
/* harmony export */   "g": () => (/* binding */ getLocaleString),
/* harmony export */   "s": () => (/* binding */ sanitizeString)
/* harmony export */ });
/* harmony import */ var _string_utils_5954f458_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./string-utils-5954f458.js */ 4506);
/*!
 * Built with Duet Design System
 */


const localeLookUpTable = {
  fi: "fi-FI",
  en: "en-GB",
  us: "en-US",
  sv: "sv-SE",
};
const localeMonetarySignifierLookUpTable = {
  fi: "€",
  en: "£",
  us: "$",
  sv: "€",
};
const defLanguageArray = ["fi", "en", "sv"];
const defaultLanguage = "fi";
const getCurrentLanguage = () => {
  return document.documentElement.lang ? document.documentElement.lang.toLowerCase() : defaultLanguage;
};
const isOfTypeLanguage = (keyInput) => {
  return defLanguageArray.includes(keyInput);
};
const checkForLanguage = (languageString = getCurrentLanguage()) => {
  if (isOfTypeLanguage(languageString)) {
    return languageString;
  }
  else {
    return defaultLanguage;
  }
};
/**
 * Returns the current language as a string representation (taken from html lang attribute)
 * If language is not fi|sv|en it will default to "fi"
 * @param {string} lang=fi - "fi" | "sv" | "en"
 * @default {string} "fi"
 */
const getLanguage = (languageString = getCurrentLanguage()) => checkForLanguage(languageString);
/**
 * Returns the current language and locale
 * If language is not fi|sv|en it will default to "fi"
 * special case where lang can be ALSO be "us" in addition to other types - if user decides to override local language
 * @param {string} lang="fi" - "fi" | "sv" | "en" | "us"
 * @default {object} {locale: "fi-FI", money: "€"}
 */
const getLocale = (lang) => {
  const returnObj = {
    locale: localeLookUpTable[lang],
    money: localeMonetarySignifierLookUpTable[lang],
  };
  if (returnObj.locale && returnObj.money) {
    return returnObj;
  }
  throw new Error(`Locale for "${lang}" not found`);
};
/**
 * Takes any json object that is passed and/or htmlencoded and converts it to proper json
 */
const sanitizeString = (string) => {
  const argIsString = typeof string === "string";
  if (argIsString) {
    try {
      return JSON.parse((0,_string_utils_5954f458_js__WEBPACK_IMPORTED_MODULE_0__.c)(string));
    }
    catch (e) {
      console.log("sanitizeString received a string, that didnt parse to json object", string, e);
    }
  }
  return string;
};
/**
 * Returns the current string / object from a given translation object
 * If language is not fi|sv|en it will default to "fi"
 * special case where lang can be ALSO be "us" in addition to other types - if user decides to override local language
 * @param {object} langObject - {fi: "finnish", sv: "swedish", en: "english"} | string will get JSON.parsed
 * @param {boolean} languageOverride = false - in case you want to override the actual language set in html tag
 * @default {object} {locale: "fi-FI", money: "€"}
 * @returns {(string|Object)} given example contains {fi:"something"} and language===fi this will return "something"
 */
const getLocaleString = (langObject, languageOverride) => {
  const obj = sanitizeString(langObject);
  if (languageOverride) {
    return obj[checkForLanguage(languageOverride)];
  }
  else {
    return obj[getLanguage()];
  }
};




/***/ }),

/***/ 4506:
/*!**************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/string-utils-5954f458.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "c": () => (/* binding */ convertHtmlQuotes),
/* harmony export */   "p": () => (/* binding */ parsePossibleJSON),
/* harmony export */   "s": () => (/* binding */ sanitizeString)
/* harmony export */ });
/*!
 * Built with Duet Design System
 */
function isObject(maybeObj) {
  return Object.prototype.toString.call(maybeObj) === "[object Object]";
}
const parsePossibleJSON = (maybeJSON) => {
  if (Array.isArray(maybeJSON) || isObject(maybeJSON)) {
    return maybeJSON;
  }
  if (typeof maybeJSON === "string") {
    try {
      return JSON.parse(maybeJSON);
    }
    catch (e) {
      console.warn(e);
      try {
        return JSON.parse(convertHtmlQuotes(maybeJSON));
      }
      catch (e) {
        console.warn(e);
      }
    }
  }
  // undefined is not a type in JSON,
  // so we use it here to signal invalid input
  return undefined;
};
/**
 * Format string, via simplistic sprintf equivalent
 * @example String.format('{0} is super, but {1} is best! {{0}}', 'Duet', 'Coffee'); -> "Duet is super, but Coffee ist best! {0}"
 *
 */
// @ts-ignore
if (!String.format) {
  // @ts-ignore
  String.format = function (format) {
    var args = Array.prototype.slice.call(arguments, 1);
    return format.replace(/\{\{|\}\}|\{(\d+)\}/g, function (curlyBrack, index) {
      return curlyBrack == "{{" ? "{" : curlyBrack == "}}" ? "}" : args[index];
    });
  };
}
const MATCH_DISALLOWED_CHARS = /[^a-z0-9áéíóúñüöäå \.,_-]/gim;
function sanitizeString(string) {
  return string.replace(MATCH_DISALLOWED_CHARS, "").trim();
}
const convertHtmlQuotes = string => {
  if (typeof string === "string") {
    return string.replace(/&quot;/g, '"').replace(/&apos;/g, '"');
  }
  return string;
};




/***/ })

}]);
//# sourceMappingURL=node_modules_duetds_components_lib_esm_duet-action-button_entry_js.js.map