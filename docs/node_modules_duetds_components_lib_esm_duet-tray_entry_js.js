"use strict";
(self["webpackChunkduet_angular_template"] = self["webpackChunkduet_angular_template"] || []).push([["node_modules_duetds_components_lib_esm_duet-tray_entry_js"],{

/***/ 9668:
/*!***********************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/create-id-981107da.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "c": () => (/* binding */ createID)
/* harmony export */ });
/*!
 * Built with Duet Design System
 */
function chr4() {
  return Math.random().toString(16).slice(-4);
}
function createID(prefix) {
  return `${prefix}-${chr4()}${chr4()}-${chr4()}-${chr4()}-${chr4()}-${chr4()}${chr4()}${chr4()}`;
}




/***/ }),

/***/ 9009:
/*!********************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/duet-tray.entry.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "duet_tray": () => (/* binding */ DuetTray)
/* harmony export */ });
/* harmony import */ var _index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-54e0bce3.js */ 3669);
/* harmony import */ var _tokens_module_49cbf963_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tokens.module-49cbf963.js */ 2370);
/* harmony import */ var _create_id_981107da_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./create-id-981107da.js */ 9668);
/* harmony import */ var _language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./language-utils-bf701d37.js */ 2601);
/* harmony import */ var _themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./themeable-component-e8fc98bf.js */ 7558);
/* harmony import */ var _string_utils_5954f458_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./string-utils-5954f458.js */ 4506);
/*!
 * Built with Duet Design System
 */







const duetTrayCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;display:block;width:100%}.duet-tray{position:fixed;top:4rem;right:0;left:0;z-index:399;display:flex;flex-direction:column;max-height:calc(100% - 8rem);padding:16px 20px 16px 24px;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1rem;font-weight:400;line-height:1.5;color:#00294d;visibility:hidden;background:#f3f9fc;border-bottom:1px solid #e1e3e6;box-shadow:0 2px 6px 0 rgba(0, 41, 77, 0.07);opacity:0;transition:opacity 600ms ease, visibility 600ms ease, transform 600ms ease;transform:translateY(-4rem)}@media (min-width: 62em){.duet-tray{padding:16px 36px}}@media (min-width: 106.25em){.duet-tray{padding:16px 52px 16px 60px}}.duet-tray:focus{outline:0}:host(.user-is-tabbing) .duet-tray:focus{box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px #0077b3}:host(.user-is-tabbing) .duet-tray.duet-theme-turva:focus{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px #171c3a}.duet-tray.duet-theme-turva{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:#171c3a;background:#f5f5f7;border-color:#e4e4e6}.duet-tray.duet-tray-is-active{visibility:visible;opacity:1;transform:translateY(0)}.duet-tray.duet-tray-is-hidden{visibility:hidden;opacity:0;transform:translateY(-4rem)}@media (min-width: 62em){.duet-tray.duet-tray-is-responsive{display:none !important}}.duet-tray.duet-tray-is-expandable{padding-right:66px}@media (min-width: 62em){.duet-tray.duet-tray-is-expandable{padding-right:78px}}@media (min-width: 106.25em){.duet-tray.duet-tray-is-expandable{padding-right:94px}}.duet-tray-expandable{position:relative;z-index:100;width:calc(100% + 46px);max-height:0;overflow-y:auto;visibility:hidden;opacity:0;transition:opacity 600ms ease, visibility 600ms ease, max-height 600ms ease;scrollbar-width:none}.duet-tray-expandable::-webkit-scrollbar{display:none}.duet-tray-expandable.active{max-height:500px;visibility:visible;opacity:1}.duet-tray-expandable-content{width:100%;margin-top:16px;border-top:1px solid #e1e3e6}.duet-theme-turva .duet-tray-expandable-content{border-color:#e4e4e6}.duet-tray-button{-webkit-user-select:none;user-select:none;padding:20px !important;position:absolute;top:-2px;right:0;z-index:200;color:#00294d;text-align:center;cursor:pointer;border-radius:4px;transition:transform 300ms ease;-webkit-tap-highlight-color:transparent}@media (min-width: 62em){.duet-tray-button{margin-right:16px}}@media (min-width: 106.25em){.duet-tray-button{margin-right:36px}}.duet-theme-turva .duet-tray-button{color:#171c3a}.duet-tray-button.duet-tray-is-expanded{transform:rotate(-180deg)}.duet-tray-button:focus{outline:0}:host(.user-is-tabbing) .duet-tray-button:focus{box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px #0077b3}:host(.user-is-tabbing) .duet-theme-turva .duet-tray-button:focus{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px #171c3a}.duet-tray-button:active{box-shadow:none;opacity:0.75}";

const topOffset = parseFloat(_tokens_module_49cbf963_js__WEBPACK_IMPORTED_MODULE_1__.s) * 2 * 16; // convert rem -> px
const DuetTray = class {
  constructor(hostRef) {
    (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    /**
     * Own Properties.
     */
    this.isTicking = false;
    this.expandableId = (0,_create_id_981107da_js__WEBPACK_IMPORTED_MODULE_2__.c)("DuetTray");
    this.expanded = false;
    /**
     * The state of the info panel.
     */
    this.hiddenState = false;
    /**
     * The currently active language. This setting changes the accessible labels to match the
     * chosen language.
     * @deprecated this is now handled via the html lang tag, and is no longer used - kept to avoid breaking changes and ease unit testing
     * @default "fi"
     */
    this.language = (0,_language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_3__.a)();
    /**
     * Defaults for accessibleCloseLabel
     * @default {fi: "Sulje", en: "Close", sv: "Stänga"}
     */
    this.accessibleCloseLabelDefaults = {
      fi: "Sulje",
      en: "Close",
      sv: "Stäng",
    };
    /**
     * Accessible label that is shown for screen reader users in the expandable
     * close toggle. Not visible for normal users.
     * @default {fi: "Sulje", en: "Close", sv: "Stänga"}
     */
    this.accessibleCloseLabel = (0,_language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_3__.g)(this.accessibleCloseLabelDefaults, this.language);
    /**
     * Defaults for accessibleOpenLabel
     * @default {fi: "Avaa", en: "Open", sv: "Öppen"}
     */
    this.accessibleOpenLabelDefaults = {
      fi: "Avaa",
      en: "Open",
      sv: "Öppna",
    };
    /**
     * Accessible label that is shown for screen reader users in the expandable
     * open toggle. Not visible for normal users.
     * @default {fi: "Avaa", en: "Open", sv: "Öppen"}
     */
    this.accessibleOpenLabel = (0,_language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_3__.g)(this.accessibleOpenLabelDefaults, this.language);
    /**
     * Theme of the info panel.
     */
    this.theme = "";
    /**
     * Toggle whether the info panel is visible or not. You can use this
     * property e.g. when pricing information is revealed to the user.
     */
    this.active = false;
    /**
     * Hide the info panel when user scrolls back to the top of the viewport.
     */
    this.autoHide = true;
    /**
     * Enable or disable the automatic responsive behaviour which
     * makes the info panel hide on larger viewports. Settings this to
     * "false" means that the header panel is visible on all device sizes.
     */
    this.responsive = true;
    /**
     * Local methods.
     */
    this.animationLoop = () => {
      this.hiddenState = window.pageYOffset < topOffset;
      this.isTicking = false;
    };
    this.toggleExpandable = ev => {
      ev.preventDefault();
      this.expanded = !this.expanded;
    };
  }
  /**
   * Component lifecycle events.
   */
  componentWillLoad() {
    (0,_themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_4__.i)(this);
    this.hasAdditionalContent = !!this.element.querySelector("[slot='additional']");
  }
  /**
   * Component event handling.
   */
  getFrame() {
    if (!this.isTicking && this.autoHide && this.active) {
      requestAnimationFrame(this.animationLoop);
      this.isTicking = true;
    }
  }
  handleBodyClick(e) {
    if (this.expanded) {
      this.expanded = this.element.contains(e.target);
    }
  }
  /**
   * render() function
   * Always the last one in the class.
   */
  render() {
    return ((0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: {
        "duet-tray": true,
        "duet-tray-is-active": this.active,
        "duet-tray-is-hidden": this.hiddenState,
        "duet-tray-is-responsive": this.responsive,
        "duet-theme-turva": this.theme === "turva",
        "duet-tray-is-expandable": this.hasAdditionalContent,
      } }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "duet-tray-default-content", role: "status" }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null)), this.hasAdditionalContent && ((0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_0__.F, null, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_0__.h)("button", { "aria-expanded": this.expanded ? "true" : "false", "aria-controls": this.expandableId, onClick: ev => this.toggleExpandable(ev), class: { "duet-tray-button": true, "duet-tray-is-expanded": this.expanded } }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_0__.h)("duet-icon", { name: "action-arrow-down", size: "small", color: "currentColor", margin: "none" }), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_0__.h)("duet-visually-hidden", null, this.expanded ? this.accessibleCloseLabel : this.accessibleOpenLabel)), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { id: this.expandableId, class: { "duet-tray-expandable": true, active: this.expanded } }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "duet-tray-expandable-content" }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: "additional" })))))));
  }
  get element() { return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
};
DuetTray.style = duetTrayCss;




/***/ }),

/***/ 2601:
/*!****************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/language-utils-bf701d37.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "a": () => (/* binding */ getLanguage),
/* harmony export */   "b": () => (/* binding */ getLocale),
/* harmony export */   "g": () => (/* binding */ getLocaleString),
/* harmony export */   "s": () => (/* binding */ sanitizeString)
/* harmony export */ });
/* harmony import */ var _string_utils_5954f458_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./string-utils-5954f458.js */ 4506);
/*!
 * Built with Duet Design System
 */


const localeLookUpTable = {
  fi: "fi-FI",
  en: "en-GB",
  us: "en-US",
  sv: "sv-SE",
};
const localeMonetarySignifierLookUpTable = {
  fi: "€",
  en: "£",
  us: "$",
  sv: "€",
};
const defLanguageArray = ["fi", "en", "sv"];
const defaultLanguage = "fi";
const getCurrentLanguage = () => {
  return document.documentElement.lang ? document.documentElement.lang.toLowerCase() : defaultLanguage;
};
const isOfTypeLanguage = (keyInput) => {
  return defLanguageArray.includes(keyInput);
};
const checkForLanguage = (languageString = getCurrentLanguage()) => {
  if (isOfTypeLanguage(languageString)) {
    return languageString;
  }
  else {
    return defaultLanguage;
  }
};
/**
 * Returns the current language as a string representation (taken from html lang attribute)
 * If language is not fi|sv|en it will default to "fi"
 * @param {string} lang=fi - "fi" | "sv" | "en"
 * @default {string} "fi"
 */
const getLanguage = (languageString = getCurrentLanguage()) => checkForLanguage(languageString);
/**
 * Returns the current language and locale
 * If language is not fi|sv|en it will default to "fi"
 * special case where lang can be ALSO be "us" in addition to other types - if user decides to override local language
 * @param {string} lang="fi" - "fi" | "sv" | "en" | "us"
 * @default {object} {locale: "fi-FI", money: "€"}
 */
const getLocale = (lang) => {
  const returnObj = {
    locale: localeLookUpTable[lang],
    money: localeMonetarySignifierLookUpTable[lang],
  };
  if (returnObj.locale && returnObj.money) {
    return returnObj;
  }
  throw new Error(`Locale for "${lang}" not found`);
};
/**
 * Takes any json object that is passed and/or htmlencoded and converts it to proper json
 */
const sanitizeString = (string) => {
  const argIsString = typeof string === "string";
  if (argIsString) {
    try {
      return JSON.parse((0,_string_utils_5954f458_js__WEBPACK_IMPORTED_MODULE_0__.c)(string));
    }
    catch (e) {
      console.log("sanitizeString received a string, that didnt parse to json object", string, e);
    }
  }
  return string;
};
/**
 * Returns the current string / object from a given translation object
 * If language is not fi|sv|en it will default to "fi"
 * special case where lang can be ALSO be "us" in addition to other types - if user decides to override local language
 * @param {object} langObject - {fi: "finnish", sv: "swedish", en: "english"} | string will get JSON.parsed
 * @param {boolean} languageOverride = false - in case you want to override the actual language set in html tag
 * @default {object} {locale: "fi-FI", money: "€"}
 * @returns {(string|Object)} given example contains {fi:"something"} and language===fi this will return "something"
 */
const getLocaleString = (langObject, languageOverride) => {
  const obj = sanitizeString(langObject);
  if (languageOverride) {
    return obj[checkForLanguage(languageOverride)];
  }
  else {
    return obj[getLanguage()];
  }
};




/***/ }),

/***/ 4506:
/*!**************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/string-utils-5954f458.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "c": () => (/* binding */ convertHtmlQuotes),
/* harmony export */   "p": () => (/* binding */ parsePossibleJSON),
/* harmony export */   "s": () => (/* binding */ sanitizeString)
/* harmony export */ });
/*!
 * Built with Duet Design System
 */
function isObject(maybeObj) {
  return Object.prototype.toString.call(maybeObj) === "[object Object]";
}
const parsePossibleJSON = (maybeJSON) => {
  if (Array.isArray(maybeJSON) || isObject(maybeJSON)) {
    return maybeJSON;
  }
  if (typeof maybeJSON === "string") {
    try {
      return JSON.parse(maybeJSON);
    }
    catch (e) {
      console.warn(e);
      try {
        return JSON.parse(convertHtmlQuotes(maybeJSON));
      }
      catch (e) {
        console.warn(e);
      }
    }
  }
  // undefined is not a type in JSON,
  // so we use it here to signal invalid input
  return undefined;
};
/**
 * Format string, via simplistic sprintf equivalent
 * @example String.format('{0} is super, but {1} is best! {{0}}', 'Duet', 'Coffee'); -> "Duet is super, but Coffee ist best! {0}"
 *
 */
// @ts-ignore
if (!String.format) {
  // @ts-ignore
  String.format = function (format) {
    var args = Array.prototype.slice.call(arguments, 1);
    return format.replace(/\{\{|\}\}|\{(\d+)\}/g, function (curlyBrack, index) {
      return curlyBrack == "{{" ? "{" : curlyBrack == "}}" ? "}" : args[index];
    });
  };
}
const MATCH_DISALLOWED_CHARS = /[^a-z0-9áéíóúñüöäå \.,_-]/gim;
function sanitizeString(string) {
  return string.replace(MATCH_DISALLOWED_CHARS, "").trim();
}
const convertHtmlQuotes = string => {
  if (typeof string === "string") {
    return string.replace(/&quot;/g, '"').replace(/&apos;/g, '"');
  }
  return string;
};




/***/ })

}]);
//# sourceMappingURL=node_modules_duetds_components_lib_esm_duet-tray_entry_js.js.map