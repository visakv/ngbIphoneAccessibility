"use strict";
(self["webpackChunkduet_angular_template"] = self["webpackChunkduet_angular_template"] || []).push([["node_modules_duetds_components_lib_esm_duet-notification_2_entry_js"],{

/***/ 7763:
/*!******************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/duet-notification_2.entry.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "duet_notification": () => (/* binding */ DuetNotification),
/* harmony export */   "duet_notification_drawer": () => (/* binding */ DuetNotificationDrawer)
/* harmony export */ });
/* harmony import */ var C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 1670);
/* harmony import */ var _index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-54e0bce3.js */ 3669);
/* harmony import */ var _language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./language-utils-bf701d37.js */ 2601);
/* harmony import */ var _themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./themeable-component-e8fc98bf.js */ 7558);
/* harmony import */ var _action_arrow_down_small_82273dc8_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./action-arrow-down-small-82273dc8.js */ 6328);
/* harmony import */ var _string_utils_5954f458_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./string-utils-5954f458.js */ 4506);


/*!
 * Built with Duet Design System
 */





const duetNotificationCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;display:block;width:100%}.duet-notification{display:block;padding:16px;color:#00294d;cursor:pointer;border-bottom:1px solid #e1e3e6;transition:300ms ease}:host(:last-of-type) .duet-notification{border-bottom:0}.duet-notification.duet-theme-turva{color:#171c3a;border-bottom-color:#e4e4e6}.duet-notification.duet-notification-highlight{font-weight:600;background:#f3f9fc}.duet-notification.duet-notification-highlight.duet-theme-turva{background:#fcf3f4}@media (min-width: 62em){.duet-notification:hover{background:#f3f9fc}.duet-notification:hover.duet-theme-turva{background:#fcf3f4}}.duet-notification a{text-decoration:none}.duet-notification a:focus{outline:0}:host(.user-is-tabbing) .duet-notification:focus-within{z-index:1;box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px #0077b3}:host(.user-is-tabbing) .duet-notification:focus-within.duet-theme-turva{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px #171c3a}.duet-notification-container{position:relative;display:flex}.duet-notification-badge-container{position:relative;width:16px}.duet-notification-badge{position:absolute;top:6px;left:-2px;width:8px;height:8px;background:#0077b3;border-radius:50%}.duet-theme-turva .duet-notification-badge{background:#c60c30}.duet-notification-content{flex:1}.duet-notification-date{position:absolute;top:2px;right:0;width:96px;font-size:0.75rem;font-weight:600;line-height:1.25;color:#657787;text-align:right;text-transform:uppercase}@media (max-width: 35.9375em){.duet-notification-date{width:auto}}.duet-theme-turva .duet-notification-date{color:#444445}::slotted(duet-heading){padding-right:80px !important}::slotted(duet-paragraph){margin-bottom:2px !important}";
const DuetNotification = class {
  constructor(hostRef) {
    (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    /**
     * The currently active language.
     * Used for announcing unread notifications to screen readers.
     * @deprecated this is now handled via the html lang tag, and is no longer used - kept to avoid breaking changes and ease unit testing
     * @default "fi"
     */

    this.language = (0,_language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_2__.a)();
    /**
     * Property to change accessibleLabelUnread defaults on the component.
     * normally you would handle these strings on an application level and override @accessibleLabelUnread when needed
     */

    this.accessibleLabelUnreadDefaults = {
      en: "Unread",
      fi: "Lukematon",
      sv: "Oläst"
    };
    /**
     * Adds accessible label for tooltip that is shown over unread counter
     * @default { en: "Unread", fi: "Lukematon", sv: "Oläst" }
     */

    this.accessibleLabelUnread = (0,_language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_2__.g)(this.accessibleLabelUnreadDefaults, this.language);
    /**
     * The url to open on notification click.
     */

    this.url = "#";
    /**
     * The date of the notification.
     */

    this.date = "";
    /**
     * Should the notification be visually highlighted?
     */

    this.highlight = false;
    /**
     * Should the link open in a new window?
     */

    this.external = false;
    /**
     * Theme of the notification.
     */

    this.theme = "";
  }
  /**
   * Component lifecycle events.
   */


  componentWillLoad() {
    (0,_themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_3__.i)(this);
  }
  /**
   * Move focus to the notification's link element.
   * Use this method instead of the native `focus()` method.
   * @param options
   */


  setFocus(options) {
    var _this = this;

    return (0,C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this.linkElement.focus(options);
    })();
  }

  render() {
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      role: "listitem",
      class: {
        "duet-notification": true,
        "duet-notification-highlight": this.highlight,
        "duet-theme-turva": this.theme === "turva"
      }
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("a", {
      ref: element => this.linkElement = element,
      href: this.url,
      target: this.external ? "_blank" : "_self"
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "duet-notification-container"
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "duet-notification-badge-container"
    }, this.highlight && (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "duet-notification-badge"
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-visually-hidden", null, this.accessibleLabelUnread, ":"))), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "duet-notification-content"
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null)), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "duet-notification-date"
    }, this.date))));
  }

  get element() {
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

};
DuetNotification.style = duetNotificationCss;
const duetNotificationDrawerCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;display:block;width:100%}.duet-drawer{position:relative}@media (min-width: 62em){.duet-drawer{display:inline-block}}.duet-drawer-toggle{position:relative;display:flex;align-items:center;width:100%;height:48px;padding:0 20px;overflow:hidden;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1rem;font-weight:400;font-variant-numeric:tabular-nums;line-height:48px;color:#00294d;text-align:left;text-decoration:none;text-overflow:ellipsis;white-space:nowrap;cursor:pointer;background-color:white;border-bottom:1px solid #e1e3e6;border-radius:0;-webkit-appearance:none;appearance:none}@media (min-width: 62em){.duet-drawer-toggle{z-index:200;width:auto;max-width:200px;padding:0 30px 0 12px;overflow:hidden;font-size:0.875rem;line-height:4rem;border:0;border-radius:4px;transition:border 300ms ease}}.duet-theme-turva .duet-drawer-toggle{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:#171c3a;background-color:white;border-color:#e4e4e6}.duet-drawer-toggle:active{opacity:0.75}.duet-drawer-toggle:focus{outline:0}:host(.user-is-tabbing) .duet-drawer-toggle:focus{box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px #0077b3}:host(.user-is-tabbing) .duet-theme-turva .duet-drawer-toggle:focus{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px #171c3a}.duet-drawer-toggle:hover{color:#004d80}.duet-theme-turva .duet-drawer-toggle:hover{color:#444445}.duet-drawer-toggle::after{display:none !important}@media (min-width: 62em){.duet-drawer-toggle::after{position:absolute;top:auto;bottom:0;left:0;display:block !important;width:100%;height:3px;content:\"\";background:#0077b3;transition:300ms ease;transform:translateY(3px)}.duet-theme-turva .duet-drawer-toggle::after{background:#c60c30}}.duet-drawer-toggle[aria-expanded=true],.duet-drawer-toggle[aria-expanded=true]:hover{color:#004d80;border-bottom:1px solid #f5f8fa;border-radius:0}.duet-theme-turva .duet-drawer-toggle[aria-expanded=true],.duet-theme-turva .duet-drawer-toggle[aria-expanded=true]:hover{color:#444445;border-color:#f5f5f7}@media (min-width: 62em){.duet-drawer-toggle[aria-expanded=true],.duet-drawer-toggle[aria-expanded=true]:hover{border:0}.duet-drawer-toggle[aria-expanded=true]::after,.duet-drawer-toggle[aria-expanded=true]:hover::after{left:0;width:100%;transform:translateY(0)}}.duet-drawer-icon{position:relative;display:inline-flex;min-width:12px;margin-right:12px;font-size:0;line-height:normal;vertical-align:baseline}@media (min-width: 62em){.duet-drawer-icon{margin-right:8px}}.duet-drawer-label{line-height:1}.duet-drawer-caret{position:absolute;top:50%;right:20px;display:flex;width:10px;height:10px;margin-left:8px;line-height:normal;pointer-events:none;transition:300ms ease;transform:translateY(-50%);transform-origin:50% 50%}@media (min-width: 62em){.duet-drawer-caret{right:16px;width:7px;height:7px}}.duet-drawer-caret duet-icon{width:10px}.duet-drawer-toggle[aria-expanded=true] .duet-drawer-caret{transform:translateY(-50%) rotate(180deg)}.duet-drawer-badge{position:absolute;top:0;right:0;display:inline-block;width:6px;height:6px;background:#f7b228;border-radius:50%;box-shadow:0 0 0 1px #c18b1f}.duet-theme-turva .duet-drawer-badge{background:#faa40f}.duet-drawer-content{display:none;background-color:white;border-bottom:1px solid #e1e3e6}.duet-drawer-content:focus{outline:0}.duet-theme-turva .duet-drawer-content{background-color:white;border-color:#e1e3e6}@media (min-width: 62em){.duet-drawer-content{position:absolute;top:100%;z-index:600;display:block;width:450px;max-height:420px;padding-left:0;overflow-y:auto;visibility:hidden;background-color:white;border:1px solid #e1e3e6;border-radius:4px;border-top-left-radius:0;border-top-right-radius:0;box-shadow:0 4px 10px 0 rgba(0, 41, 77, 0.15);opacity:0;transition:300ms ease;transform:scale(0.95) translateZ(0) translateY(-10px);transform-origin:50% 0;scrollbar-width:none}.duet-drawer-content::-webkit-scrollbar{display:none}.duet-theme-turva .duet-drawer-content{background-color:white}.duet-drawer-content.duet-drawer-left{right:0}.duet-drawer-content.duet-drawer-right{left:0}}.duet-drawer-content.duet-drawer-open{display:block}@media (min-width: 62em){.duet-drawer-content.duet-drawer-open{visibility:visible;opacity:1;transform:scale(1) translateZ(0) translateY(0)}}";
const ESC_KEY = 27;
const DuetNotificationDrawer = class {
  constructor(hostRef) {
    (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    /**
     * State() variables
     * Inlined decorator, alphabetical order.
     */

    this.isOpen = false;
    /**
     * Icon to display to the left of the drawer button.
     */

    this.icon = "";
    /**
     * Label for the drawer button.
     */

    this.label = "Label";
    /**
     * The currently active language.
     * Used to determine the message displayed when there are no notifications.
     */

    this.language = (0,_language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_2__.a)();
    /**
     * Defaults for accessibleLabelNotifications
     * @default {en: "No notifications", fi: "Ei ilmoituksia", sv: "Inga notifikationer"}
     */

    this.accessibleLabelNotificationsDefaults = {
      en: "No notifications",
      fi: "Ei ilmoituksia",
      sv: "Inga notifikationer"
    };
    /**
     * Adds accessible label for tooltip that is shown for notifications
     * @default {en: "No notifications", fi: "Ei ilmoituksia", sv: "Inga notifikationer"}
     */

    this.accessibleLabelNotifications = (0,_language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_2__.g)(this.accessibleLabelNotificationsDefaults);
    /**
     * Show a badge that indicates something has changed.
     */

    this.badge = false;
    /**
     * Theme of the notification drawer.
     */

    this.theme = "";
    /**
     * Which direction should the drawer open in?
     */

    this.direction = "left";
    /**
     * Component event handling.
     */

    this.handleKeyDown = ev => {
      if (this.isOpen && ev.keyCode === ESC_KEY) {
        this.close();
      }
    };

    this.toggleMenu = e => {
      // this is needed to prevent the main menu closing on mobile
      e.stopPropagation();
      this.isOpen ? this.close() : this.open();
    };

    this.updateNotificationState = () => {
      this.hasNotifications = this.element.children.length > 0;
    };
  }
  /**
   * Component lifecycle events.
   */


  componentWillLoad() {
    (0,_themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_3__.i)(this);
    this.updateNotificationState();
  }

  connectedCallback() {
    this.observer = new MutationObserver(this.updateNotificationState);
    this.observer.observe(this.element, {
      childList: true
    });
  }

  disconnectedCallback() {
    this.observer.disconnect();
    this.observer = null;
  }

  handleClickFocusOutside(e) {
    const target = e.target;

    if (this.isOpen && !this.element.contains(target)) {
      this.close(false);
    }
  }
  /**
   * Move focus to the menu's button. Use instead of the native `focus()` method
   * @param options
   */


  setFocus(options) {
    var _this2 = this;

    return (0,C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this2.drawerButtonEl.focus(options);
    })();
  }
  /**
   * Open the menu
   */


  open() {
    var _this3 = this;

    return (0,C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const header = _this3.element.closest("duet-header");

      if (header) {
        header.closeMenus();
      }

      _this3.isOpen = true;
      _this3.drawerContentEl.scrollTop = 0;
    })();
  }
  /**
   * Close the menu
   * @param moveFocusToButton should focus be moved to the menu's button on close?
   */


  close(moveFocusToButton = true) {
    var _this4 = this;

    return (0,C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this4.isOpen = false;

      if (moveFocusToButton) {
        _this4.setFocus({
          preventScroll: true
        });
      }
    })();
  }
  /**
   * render() function
   * Always the last one in the class.
   */


  render() {
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        "duet-drawer": true,
        "duet-theme-turva": this.theme === "turva"
      },
      onKeyDown: this.handleKeyDown
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("button", {
      ref: el => this.drawerButtonEl = el,
      type: "button",
      class: "duet-drawer-toggle",
      id: "duet-drawer-toggle",
      "aria-controls": "duet-drawer-content",
      "aria-expanded": this.isOpen ? "true" : "false",
      onClick: this.toggleMenu
    }, this.icon && (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "duet-drawer-icon"
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-icon", {
      margin: "none",
      size: "x-small",
      name: this.icon,
      color: "currentColor"
    }), this.badge && (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "duet-drawer-badge"
    })), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("span", {
      class: "duet-drawer-label"
    }, this.label), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "duet-drawer-caret"
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-icon", {
      margin: "none",
      size: "auto",
      icon: _action_arrow_down_small_82273dc8_js__WEBPACK_IMPORTED_MODULE_4__.a.svg,
      color: "currentColor"
    }))), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      id: "duet-drawer-content",
      class: {
        "duet-drawer-content": true,
        "duet-drawer-right": this.direction === "right",
        "duet-drawer-left": this.direction === "left",
        "duet-drawer-open": this.isOpen
      },
      ref: element => this.drawerContentEl = element
    }, this.hasNotifications ? (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      role: "list"
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null)) : (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-empty-state", {
      size: "small"
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-paragraph", {
      size: "small",
      margin: "none"
    }, this.accessibleLabelNotifications))));
  }

  get element() {
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

};
DuetNotificationDrawer.style = duetNotificationDrawerCss;


/***/ }),

/***/ 2601:
/*!****************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/language-utils-bf701d37.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "a": () => (/* binding */ getLanguage),
/* harmony export */   "b": () => (/* binding */ getLocale),
/* harmony export */   "g": () => (/* binding */ getLocaleString),
/* harmony export */   "s": () => (/* binding */ sanitizeString)
/* harmony export */ });
/* harmony import */ var _string_utils_5954f458_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./string-utils-5954f458.js */ 4506);
/*!
 * Built with Duet Design System
 */


const localeLookUpTable = {
  fi: "fi-FI",
  en: "en-GB",
  us: "en-US",
  sv: "sv-SE",
};
const localeMonetarySignifierLookUpTable = {
  fi: "€",
  en: "£",
  us: "$",
  sv: "€",
};
const defLanguageArray = ["fi", "en", "sv"];
const defaultLanguage = "fi";
const getCurrentLanguage = () => {
  return document.documentElement.lang ? document.documentElement.lang.toLowerCase() : defaultLanguage;
};
const isOfTypeLanguage = (keyInput) => {
  return defLanguageArray.includes(keyInput);
};
const checkForLanguage = (languageString = getCurrentLanguage()) => {
  if (isOfTypeLanguage(languageString)) {
    return languageString;
  }
  else {
    return defaultLanguage;
  }
};
/**
 * Returns the current language as a string representation (taken from html lang attribute)
 * If language is not fi|sv|en it will default to "fi"
 * @param {string} lang=fi - "fi" | "sv" | "en"
 * @default {string} "fi"
 */
const getLanguage = (languageString = getCurrentLanguage()) => checkForLanguage(languageString);
/**
 * Returns the current language and locale
 * If language is not fi|sv|en it will default to "fi"
 * special case where lang can be ALSO be "us" in addition to other types - if user decides to override local language
 * @param {string} lang="fi" - "fi" | "sv" | "en" | "us"
 * @default {object} {locale: "fi-FI", money: "€"}
 */
const getLocale = (lang) => {
  const returnObj = {
    locale: localeLookUpTable[lang],
    money: localeMonetarySignifierLookUpTable[lang],
  };
  if (returnObj.locale && returnObj.money) {
    return returnObj;
  }
  throw new Error(`Locale for "${lang}" not found`);
};
/**
 * Takes any json object that is passed and/or htmlencoded and converts it to proper json
 */
const sanitizeString = (string) => {
  const argIsString = typeof string === "string";
  if (argIsString) {
    try {
      return JSON.parse((0,_string_utils_5954f458_js__WEBPACK_IMPORTED_MODULE_0__.c)(string));
    }
    catch (e) {
      console.log("sanitizeString received a string, that didnt parse to json object", string, e);
    }
  }
  return string;
};
/**
 * Returns the current string / object from a given translation object
 * If language is not fi|sv|en it will default to "fi"
 * special case where lang can be ALSO be "us" in addition to other types - if user decides to override local language
 * @param {object} langObject - {fi: "finnish", sv: "swedish", en: "english"} | string will get JSON.parsed
 * @param {boolean} languageOverride = false - in case you want to override the actual language set in html tag
 * @default {object} {locale: "fi-FI", money: "€"}
 * @returns {(string|Object)} given example contains {fi:"something"} and language===fi this will return "something"
 */
const getLocaleString = (langObject, languageOverride) => {
  const obj = sanitizeString(langObject);
  if (languageOverride) {
    return obj[checkForLanguage(languageOverride)];
  }
  else {
    return obj[getLanguage()];
  }
};




/***/ }),

/***/ 4506:
/*!**************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/string-utils-5954f458.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "c": () => (/* binding */ convertHtmlQuotes),
/* harmony export */   "p": () => (/* binding */ parsePossibleJSON),
/* harmony export */   "s": () => (/* binding */ sanitizeString)
/* harmony export */ });
/*!
 * Built with Duet Design System
 */
function isObject(maybeObj) {
  return Object.prototype.toString.call(maybeObj) === "[object Object]";
}
const parsePossibleJSON = (maybeJSON) => {
  if (Array.isArray(maybeJSON) || isObject(maybeJSON)) {
    return maybeJSON;
  }
  if (typeof maybeJSON === "string") {
    try {
      return JSON.parse(maybeJSON);
    }
    catch (e) {
      console.warn(e);
      try {
        return JSON.parse(convertHtmlQuotes(maybeJSON));
      }
      catch (e) {
        console.warn(e);
      }
    }
  }
  // undefined is not a type in JSON,
  // so we use it here to signal invalid input
  return undefined;
};
/**
 * Format string, via simplistic sprintf equivalent
 * @example String.format('{0} is super, but {1} is best! {{0}}', 'Duet', 'Coffee'); -> "Duet is super, but Coffee ist best! {0}"
 *
 */
// @ts-ignore
if (!String.format) {
  // @ts-ignore
  String.format = function (format) {
    var args = Array.prototype.slice.call(arguments, 1);
    return format.replace(/\{\{|\}\}|\{(\d+)\}/g, function (curlyBrack, index) {
      return curlyBrack == "{{" ? "{" : curlyBrack == "}}" ? "}" : args[index];
    });
  };
}
const MATCH_DISALLOWED_CHARS = /[^a-z0-9áéíóúñüöäå \.,_-]/gim;
function sanitizeString(string) {
  return string.replace(MATCH_DISALLOWED_CHARS, "").trim();
}
const convertHtmlQuotes = string => {
  if (typeof string === "string") {
    return string.replace(/&quot;/g, '"').replace(/&apos;/g, '"');
  }
  return string;
};




/***/ }),

/***/ 7558:
/*!*********************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/themeable-component-e8fc98bf.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "i": () => (/* binding */ inheritGlobalTheme)
/* harmony export */ });
/*!
 * Built with Duet Design System
 */
const inheritGlobalTheme = (component) => {
  // this minor change enables duet-theme-XXXXX instead of just duet-theme-turva
  const classList = Array.from(document.documentElement.classList).join(" ") || "";
  const theme = /(duet-theme-)([a-z]*)/gis.exec(classList);
  if (theme && theme[1] === "duet-theme-") {
    component.theme = theme[2] === "default" ? "" : theme[2];
  }
};




/***/ })

}]);
//# sourceMappingURL=node_modules_duetds_components_lib_esm_duet-notification_2_entry_js.js.map