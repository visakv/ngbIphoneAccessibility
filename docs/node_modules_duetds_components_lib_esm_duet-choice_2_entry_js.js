"use strict";
(self["webpackChunkduet_angular_template"] = self["webpackChunkduet_angular_template"] || []).push([["node_modules_duetds_components_lib_esm_duet-choice_2_entry_js"],{

/***/ 9668:
/*!***********************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/create-id-981107da.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "c": () => (/* binding */ createID)
/* harmony export */ });
/*!
 * Built with Duet Design System
 */
function chr4() {
  return Math.random().toString(16).slice(-4);
}
function createID(prefix) {
  return `${prefix}-${chr4()}${chr4()}-${chr4()}-${chr4()}-${chr4()}-${chr4()}${chr4()}${chr4()}`;
}




/***/ }),

/***/ 6849:
/*!************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/duet-choice_2.entry.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "duet_choice": () => (/* binding */ DuetChoice),
/* harmony export */   "duet_choice_group": () => (/* binding */ DuetChoiceGroup)
/* harmony export */ });
/* harmony import */ var C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 1670);
/* harmony import */ var _index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-54e0bce3.js */ 3669);
/* harmony import */ var _common_strings_97e04e4b_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common-strings-97e04e4b.js */ 4122);
/* harmony import */ var _create_id_981107da_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./create-id-981107da.js */ 9668);
/* harmony import */ var _focus_utils_ea33cb8a_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./focus-utils-ea33cb8a.js */ 7681);
/* harmony import */ var _keyboard_utils_88ea1007_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./keyboard-utils-88ea1007.js */ 1681);
/* harmony import */ var _language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./language-utils-bf701d37.js */ 2601);
/* harmony import */ var _themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./themeable-component-e8fc98bf.js */ 7558);
/* harmony import */ var _watch_options_dd55bce8_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./watch-options-dd55bce8.js */ 7567);
/* harmony import */ var _string_utils_5954f458_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./string-utils-5954f458.js */ 4506);


/*!
 * Built with Duet Design System
 */









var messagingInfo = {
  "title": "messaging-info",
  "tags": "messaging info information circle",
  "svg": "<svg fill=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\"><path d=\"M13.5 17.25A2.252 2.252 0 0 1 11.25 15v-3.75h-.75a.75.75 0 0 1 0-1.5h.75c.827 0 1.5.673 1.5 1.5V15c0 .414.336.75.75.75h.75a.75.75 0 0 1 0 1.5z\"/><circle cx=\"11.625\" cy=\"7.125\" r=\"1.125\"/><path d=\"M12 24C5.383 24 0 18.617 0 12S5.383 0 12 0s12 5.383 12 12-5.383 12-12 12zm0-22.5C6.21 1.5 1.5 6.21 1.5 12S6.21 22.5 12 22.5 22.5 17.79 22.5 12 17.79 1.5 12 1.5z\"/></svg>"
};
const duetChoiceCss = "*.sc-duet-choice,*.sc-duet-choice::after,*.sc-duet-choice::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}.sc-duet-choice-h{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;margin-right:16px !important;margin-bottom:12px !important;display:inline-flex;flex-direction:column;width:auto;max-width:100%;vertical-align:bottom;-webkit-tap-highlight-color:transparent}.sc-duet-choice-h:last-child,.sc-duet-choice-h:last-of-type{margin-right:0 !important}@media (max-width: 35.9375em){.sc-duet-choice-h{width:100%}}.duet-expand.sc-duet-choice-h{width:100% !important}.duet-m-0.sc-duet-choice-h{margin:0 !important}.duet-fixed.sc-duet-choice-h{width:auto !important}.vertical.sc-duet-choice-h{margin-right:0 !important}.horizontal.sc-duet-choice-h{margin-bottom:0 !important}@media (min-width: 48em){.horizontal-responsive.sc-duet-choice-h{margin-bottom:0 !important;margin-right:16px !important}.horizontal-responsive.sc-duet-choice-h:last-child,.horizontal-responsive.sc-duet-choice-h:last-of-type{margin-right:0 !important}}.sc-duet-choice-h:last-child:not(:only-child){margin-right:0 !important}.duet-choice-card.sc-duet-choice{position:relative;display:block;width:100%;min-width:8rem;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1rem;font-weight:400;-webkit-hyphens:auto;hyphens:auto;line-height:1.1;color:#00294d !important;text-align:left;background:white;border-width:2px}.duet-choice-card.duet-p-0.sc-duet-choice{padding:0 !important}.duet-choice-card.duet-m-0.sc-duet-choice{margin:0 !important}.duet-theme-turva.sc-duet-choice .duet-choice-card.sc-duet-choice{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:#171c3a !important}.duet-choice-card-flextainer.sc-duet-choice{display:flex}.duet-choice-label.sc-duet-choice{-webkit-user-select:none;user-select:none;position:relative;z-index:100;display:flex;gap:1rem;align-items:center;justify-content:flex-start;width:100%;height:100%;min-height:3.875rem;padding:1rem;font-size:1rem;font-weight:600;text-decoration:none;word-break:break-word;cursor:pointer;border:2px solid #e1e3e6;border-radius:4px;transition:background-color 150ms ease}.duet-choice-label.sc-duet-choice>div.sc-duet-choice:last-child{flex:1;align-self:flex-start;justify-self:flex-end;margin-top:0.25rem}.has-info.sc-duet-choice .duet-choice-label.sc-duet-choice{border-top-right-radius:0;border-bottom-right-radius:0}.info.sc-duet-choice .duet-choice-label.sc-duet-choice{border-bottom-right-radius:0;border-bottom-left-radius:0}.duet-theme-turva.sc-duet-choice .duet-choice-label.sc-duet-choice{border-color:#e4e4e6}.duet-theme-turva.sc-duet-choice .info.sc-duet-choice .duet-choice-label.sc-duet-choice{border-color:#e4e4e6}.duet-choice-label.sc-duet-choice:not(.no-hover):hover{border-color:#909599}.duet-choice-label.sc-duet-choice:not(.no-hover):hover .duet-checkmark-container.sc-duet-choice{border-color:#909599}.duet-theme-turva.sc-duet-choice .duet-choice-label.sc-duet-choice:not(.no-hover):hover{border-color:#747475}.duet-theme-turva.sc-duet-choice .duet-choice-label.sc-duet-choice:not(.no-hover):hover .duet-checkmark-container.sc-duet-choice{border-color:#747475}.duet-theme-turva.sc-duet-choice .info.sc-duet-choice .duet-choice-label.sc-duet-choice:not(.no-hover):hover{border-color:#747475}.duet-choice-label.sc-duet-choice:active{opacity:0.75;transition:none !important}.checked.sc-duet-choice .duet-choice-label.sc-duet-choice{color:#0077b3 !important;background:#f3f9fc;border-color:#0077b3 !important}.checked.sc-duet-choice .duet-choice-label.sc-duet-choice .duet-checkmark-container.sc-duet-choice{border-color:#0077b3}.duet-theme-turva.sc-duet-choice .checked.sc-duet-choice .duet-choice-label.sc-duet-choice{color:#171c3a !important;background:#f5f5f7;border-color:#171c3a !important}.duet-theme-turva.sc-duet-choice .checked.sc-duet-choice .duet-choice-label.sc-duet-choice .duet-checkmark-container.sc-duet-choice{border-color:#c60c30}.checked.collapsible.sc-duet-choice .duet-choice-label.sc-duet-choice{border-bottom:0 !important;border-bottom-right-radius:0;border-bottom-left-radius:0}input.sc-duet-choice:focus{outline:0}.user-is-tabbing.sc-duet-choice-h input.sc-duet-choice:checked:focus+.duet-choice-label.sc-duet-choice{box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3)}.user-is-tabbing.sc-duet-choice-h input.sc-duet-choice:not(:checked):focus+.duet-choice-label.sc-duet-choice{box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px #0077b3}.user-is-tabbing.duet-theme-turva.sc-duet-choice-h input.sc-duet-choice:checked:focus+.duet-choice-label.sc-duet-choice{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2)}.user-is-tabbing.duet-theme-turva.sc-duet-choice-h input.sc-duet-choice:not(:checked):focus+.duet-choice-label.sc-duet-choice{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px #171c3a}input[disabled].sc-duet-choice+.duet-choice-label.sc-duet-choice{color:#657787 !important;cursor:default !important;background:#f5f8fa !important;border-color:#e1e3e6 !important}input[disabled].sc-duet-choice+.duet-choice-label.sc-duet-choice .duet-checkmark.sc-duet-choice{border-color:#657787 !important}.duet-theme-turva.sc-duet-choice input[disabled].sc-duet-choice+.duet-choice-label.sc-duet-choice{color:#747475 !important;background:#f5f5f7 !important;border-color:#e4e4e6 !important}.duet-theme-turva.sc-duet-choice input[disabled].sc-duet-choice+.duet-choice-label.sc-duet-choice .duet-checkmark.sc-duet-choice{border-color:#747475 !important}.checked.sc-duet-choice input[disabled].sc-duet-choice+.duet-choice-label.sc-duet-choice{background:#e1e3e6 !important;border-color:#e1e3e6 !important}.duet-theme-turva.sc-duet-choice .checked.sc-duet-choice input[disabled].sc-duet-choice+.duet-choice-label.sc-duet-choice{background:#e4e4e6 !important;border-color:#e4e4e6 !important}.duet-checkmark-container.sc-duet-choice{position:relative;width:20px;height:20px;margin-left:auto;border:1px solid #909599;border-radius:4px;transition:border 300ms ease}.duet-theme-turva.sc-duet-choice .duet-checkmark-container.sc-duet-choice{border-color:#747475}.checked.sc-duet-choice .duet-checkmark-container.sc-duet-choice{background:#0077b3;border-color:#0077b3;transition:none}.duet-theme-turva.sc-duet-choice .checked.sc-duet-choice .duet-checkmark-container.sc-duet-choice{background:#171c3a;border-color:#171c3a !important}.duet-checkmark-container.duet-checkmark-radio.sc-duet-choice{border-radius:50%}[disabled].sc-duet-choice+label.sc-duet-choice .duet-checkmark-container.sc-duet-choice{border-color:#cfd2d4 !important}.duet-theme-turva.sc-duet-choice [disabled].sc-duet-choice+label.sc-duet-choice .duet-checkmark-container.sc-duet-choice{border-color:#cfcfd1 !important}.checked.sc-duet-choice [disabled].sc-duet-choice+label.sc-duet-choice .duet-checkmark-container.sc-duet-choice{background:#cfd2d4 !important}.duet-theme-turva.sc-duet-choice .checked.sc-duet-choice [disabled].sc-duet-choice+label.sc-duet-choice .duet-checkmark-container.sc-duet-choice{background:#cfcfd1 !important}.duet-checkmark.sc-duet-choice{position:absolute;top:10px;left:3px;width:5.3333333333px;height:11.8518518519px;border-top:2px solid white;border-right:2px solid white;opacity:1;transform:scaleX(-1) rotate(135deg) translateZ(0);transform-origin:left top;animation-name:duet-checkmark;animation-duration:600ms;animation-timing-function:ease-out;animation-fill-mode:forwards}@keyframes duet-checkmark{0%{width:0;height:0;opacity:1}20%{width:5.3333333333px;height:0;opacity:1}40%,100%{width:5.3333333333px;height:11.8518518519px;opacity:1}}.duet-choice-card-icon.sc-duet-choice{position:relative}.duet-choice-card-icon.sc-duet-choice duet-icon.sc-duet-choice{display:block}.duet-choice-section-hidden.sc-duet-choice{display:none}.duet-choice-card-info.duet-choice-card-collapsed.sc-duet-choice,.duet-choice-card-collapsed.duet-choice-card-collapsible.sc-duet-choice{position:relative;width:auto;padding:0 !important;background:unset !important;border:0;border-radius:0}.duet-choice-card-info.sc-duet-choice,.duet-choice-card-collapsible.sc-duet-choice{padding:28px !important;position:relative;z-index:200;width:100%;font-weight:400;color:#00294d;border:2px solid #e1e3e6;border-top:0;border-radius:0 0 4px 4px}.duet-theme-turva.sc-duet-choice .duet-choice-card-info.sc-duet-choice,.duet-theme-turva.sc-duet-choice .duet-choice-card-collapsible.sc-duet-choice{color:#171c3a;border-color:#171c3a}.checked.sc-duet-choice .duet-choice-card-info.sc-duet-choice,.checked.sc-duet-choice .duet-choice-card-collapsible.sc-duet-choice{display:block}.duet-choice-card-info-expanded.sc-duet-choice,.duet-choice-card-collapsible-expanded.sc-duet-choice{display:block}.duet-choice-card-collapsible.sc-duet-choice{background:white;border:2px solid #0077b3;border-top:0}.duet-choice-card-collapsible.duet-theme-turva.sc-duet-choice{background:white;border-color:#171c3a}.duet-choice-card-collapsible-disabled.sc-duet-choice{background:#f5f8fa;border-color:#e1e3e6}.duet-choice-card-collapsible-disabled.duet-theme-turva.sc-duet-choice{background:#f5f5f7;border-color:#e4e4e6}.duet-choice-card-info.sc-duet-choice{font-size:0.875rem;line-height:1.5;background:#f5f8fa;transition:150ms ease-out}.duet-choice-card-info.duet-theme-turva.sc-duet-choice{background:#f5f5f7;border-color:#e4e4e6}.duet-choice-info-toggle.sc-duet-choice{display:flex;flex-shrink:0;align-items:flex-start;justify-content:center;width:57.6px;padding-top:1.25rem;cursor:pointer;background:white;border:2px solid #e1e3e6;border-left:0 none;border-top-right-radius:4px;border-bottom-right-radius:4px;-webkit-appearance:none;appearance:none}.duet-choice-info-toggle[aria-expanded=true].sc-duet-choice{background:#f5f8fa;border-bottom-color:transparent;border-bottom-right-radius:0}.duet-choice-info-toggle[disabled].sc-duet-choice{pointer-events:none;background:#f5f8fa !important;border-color:#e1e3e6 !important}.duet-choice-info-toggle[disabled].sc-duet-choice .duet-choice-info-icon.sc-duet-choice{color:#909599 !important}.duet-choice-info-toggle[disabled].duet-theme-turva.sc-duet-choice{background:#f5f5f7 !important;border-color:#e4e4e6 !important}.duet-choice-info-toggle[disabled].duet-theme-turva.sc-duet-choice .duet-choice-info-icon.sc-duet-choice{color:#747475 !important}.duet-choice-info-toggle.sc-duet-choice:focus{outline:none}.user-is-tabbing.sc-duet-choice-h .duet-choice-info-toggle.sc-duet-choice:focus{box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px #0077b3}.duet-choice-label.sc-duet-choice:not(.no-hover):hover .duet-choice-info-toggle.sc-duet-choice{border-left-color:#909599}.checked.sc-duet-choice .duet-choice-info-toggle.sc-duet-choice{border-left-color:#0077b3 !important}.duet-choice-info-toggle.sc-duet-choice duet-icon.sc-duet-choice{display:block}.duet-choice-info-toggle.sc-duet-choice .duet-choice-info-icon.sc-duet-choice{color:#0077b3}.duet-theme-turva.sc-duet-choice .duet-choice-info-toggle.sc-duet-choice .duet-choice-info-icon.sc-duet-choice{color:#c60c30}.duet-choice-input.sc-duet-choice{position:absolute !important;width:auto;height:auto;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);color:transparent}";
const DuetChoice = class {
  constructor(hostRef) {
    (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.duetChange = (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "duetChange", 7);
    this.duetFocus = (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "duetFocus", 7);
    this.duetBlur = (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "duetBlur", 7);
    this.hasHeader = false;
    this.choiceId = (0,_create_id_981107da_js__WEBPACK_IMPORTED_MODULE_3__.c)("DuetChoice");
    this.expandId = (0,_create_id_981107da_js__WEBPACK_IMPORTED_MODULE_3__.c)("DuetChoiceExpand");
    this.headerId = (0,_create_id_981107da_js__WEBPACK_IMPORTED_MODULE_3__.c)("DuetChoiceHeader");
    this.infoButtonId = (0,_create_id_981107da_js__WEBPACK_IMPORTED_MODULE_3__.c)("DuetChoiceInfoButton");
    /**
     * State() variables
     * Inlined decorator, alphabetical order.
     */

    this.isHovering = false;
    this.isInfoOpen = false;
    this.isBlurred = false;
    /**
     * Theme of the choice.
     */

    this.theme = "";
    /**
     * Label for the choice button.
     */

    this.label = "label";
    /**
     * Property to change accessibleLabelInfoButton defaults on the component.
     * normally you would handle these strings on an application level and override @accessibleLabelInfoButton when needed
     */

    this.accessibleLabelInfoButtonDefaults = _common_strings_97e04e4b_js__WEBPACK_IMPORTED_MODULE_2__.D;
    /**
     * Accessible label that is read for screen reader users in the info toggle trigger button.
     * Not visible for normal users.
     * @default {fi: "Avautuu uuteen ikkunaan",sv: "Öppnas i nytt fönster",en: "Opens in a new window"}
     */

    this.accessibleLabelInfoButton = (0,_language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_6__.g)(this.accessibleLabelInfoButtonDefaults);
    /**
     * Additional caption to show inside the label of the choice button.
     */

    this.caption = "";
    /**
     * Type of the choice button. You can set the type of the choice to be either
     * “radio” or “checkbox”. Depending on this selection we convey the selection
     * type to assistive technologies as well. When type “radio” is chosen it is
     * required to place the choices inside Choice Group component.
     */

    this.type = "checkbox";
    /**
     * Checked state of the choice button.
     */

    this.checked = false;
    /**
     * Makes the choice button open a new section underneath it when clicked or
     * tapped. This new section can be used to show more options related to this
     * choice. Please note that this feature can’t be used together with the "info"
     * functionality and that it only accepts plain dom nodes (no shadow dom elements
     * such as duet-paragraph can be used as this will break accessibility)
     */

    this.collapsible = false;
    /**
     * Controls the margin of the component.
     */

    this.margin = "auto";
    /**
     * Icon to display to the left of the choice button label.
     */

    this.icon = "";
    /**
     * Expands the choice button to fill 100% of the container width.
     */

    this.expand = false;
    /**
     * Controls the padding of the component.
     */

    this.padding = "auto";
    /**
     * Makes the choice component disabled. This prevents users from being able to
     * interact with the choice, and conveys its inactive state to assistive technologies.
     */

    this.disabled = false;
    /**
     * Set whether the input is required or not. Please note that this is necessary for
     * accessible inputs when the user is required to fill them. When using this property
     * you need to also set “novalidate” attribute to your form element to prevent
     * browser from displaying its own validation errors.
     */

    this.required = false;
    /**
     * Placeholder defaults
     * @default { fi: "pp.kk.vvvv", en: "dd.mm.yyyy", sv: "dd.mm.åååå" }
     */

    this.infoLabelDefaults = {
      fi: "Lisätietoja",
      en: "More information about",
      sv: "Mera information om"
    };
    /**
     * Hint text to display before the user types into the date picker input.
     * @default  {
     *     fi: "Lisätietoja",
     *     en: "More information about",
     *     sv: "Mera information om",
     *   }
     */

    this.infoLabel = (0,_language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_6__.g)(this.infoLabelDefaults, (0,_language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_6__.a)());

    this.onMouseEnter = () => {
      this.isHovering = true;
    };

    this.onMouseLeave = () => {
      this.isHovering = false;
    };

    this.onClick = ev => {
      this.toggleChecked(ev);
    };

    this.handleKeyDown = ev => {
      if ((0,_keyboard_utils_88ea1007_js__WEBPACK_IMPORTED_MODULE_5__.i)(ev)) {
        this.toggleChecked(ev);
      }

      if ((0,_keyboard_utils_88ea1007_js__WEBPACK_IMPORTED_MODULE_5__.h)(ev) && this.hasInfo) {
        this.toggleInfo();
      }
    };

    this.onChange = () => {
      this.checked = this.nativeInput.checked || false;
      this.duetChange.emit({
        checked: this.checked,
        value: this.value,
        component: "duet-choice"
      });
    };

    this.onBlur = ev => {
      this.duetBlur.emit({
        originalEvent: ev,
        checked: this.checked,
        value: this.value,
        component: "duet-choice"
      });
    };

    this.onFocus = ev => {
      this.duetFocus.emit({
        originalEvent: ev,
        checked: this.checked,
        value: this.value,
        component: "duet-choice"
      });
    };
    /**
     * Local methods
     */


    this.toggleChecked = ev => {
      if (this.disabled || this.groupDisabled) {
        return;
      }

      this.isInfoOpen = false; // if it's a radio button and it's already checked
      // we shouldn't fire an event, so exit early

      if (this.type === "radio" && this.checked) {
        return;
      }

      this.checked = !this.checked;
      this.duetChange.emit({
        originalEvent: ev,
        checked: this.checked,
        value: this.value,
        component: "duet-choice"
      });
      ev.preventDefault();
      ev.stopPropagation();
    };

    this.toggleInfo = () => {
      this.isInfoOpen = !this.isInfoOpen;
    };
  }
  /**
   * Component lifecycle events.
   */


  componentWillLoad() {
    (0,_themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_7__.i)(this);
    this.hasInfo = !!this.element.querySelector("[slot='info']");
    this.hasHeader = !!this.element.querySelector('[slot="header"]');
    this.hasAdditional = !!this.element.querySelector("[slot='additional']");
  }
  /**
   * Component event handling.
   */


  handleHostBlur(ev) {
    /**
     * When moving away from a choice, collapse the info bar to assist visually impared people on focusing
     */
    if (this.hasInfo && this.isInfoOpen && this.isKeyDown) {
      // @ts-ignore
      const isTargetContainedInHost = this.element.contains(ev === null || ev === void 0 ? void 0 : ev.relatedTarget) || false;

      if (!isTargetContainedInHost) {
        this.toggleInfo();
      }
    }
  }

  handleHostKeyDown() {
    this.isKeyDown = true;
  }

  handleHostKeyUp(ev) {
    this.isKeyDown = false;

    if ((0,_keyboard_utils_88ea1007_js__WEBPACK_IMPORTED_MODULE_5__.f)(ev) && this.isInfoOpen) {
      this.toggleInfo();
    }
  }
  /**
   * Sets focus on the specified `duet-choice`. Use this method instead of the global
   * `input.focus()`.
   */


  setFocus(options) {
    var _this = this;

    return (0,C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this.nativeInput.focus(options);
    })();
  }

  getAriaDescribedby() {
    if (this.accessibleDescribedBy) {
      return this.accessibleDescribedBy;
    }

    if (this.collapsible || this.hasInfo) {
      if (this.hasHeader) {
        return this.headerId;
      } else {
        return this.expandId;
      }
    }

    return null;
  }

  getClassNames() {
    if (this.hasInfo && !this.collapsible) {
      return {
        "duet-choice-card-info": true,
        "duet-choice-card-info-expanded": this.isInfoOpen,
        "duet-choice-card-collapsed": !this.isInfoOpen,
        "duet-theme-turva": this.theme === "turva"
      };
    }

    if (!this.hasInfo && this.collapsible) {
      return {
        "duet-choice-card-collapsible": true,
        "duet-choice-card-collapsible-expanded": this.checked,
        "duet-choice-card-collapsed": !this.checked,
        "duet-choice-card-collapsible-disabled": this.disabled || this.groupDisabled ? true : false,
        "duet-theme-turva": this.theme === "turva"
      };
    }

    return {
      "duet-choice-default-slot": true
    };
  }
  /**
   * render() function
   * Always the last one in the class.
   */


  render() {
    const identifier = this.identifier || this.choiceId;
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      class: {
        horizontal: this.groupDirection === "horizontal" && !this.groupResponsive,
        "horizontal-responsive": this.groupDirection === "horizontal" && this.groupResponsive,
        "duet-m-0": this.margin === "none",
        "duet-expand": this.expand,
        "duet-theme-turva": this.theme === "turva"
      }
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        "duet-choice-card-flextainer": true,
        "duet-theme-turva": this.theme === "turva"
      }
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        "duet-choice-card": true,
        "has-icon": !!this.icon,
        "has-info": this.hasInfo,
        checked: this.checked,
        info: this.isInfoOpen,
        collapsible: this.collapsible,
        "duet-p-0": this.padding === "none"
      }
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("input", {
      class: "duet-choice-input",
      type: this.type,
      onFocus: this.onFocus,
      onBlur: this.onBlur,
      onChange: this.onChange,
      disabled: this.disabled || this.groupDisabled,
      required: this.required,
      id: identifier,
      name: this.name,
      value: this.value,
      checked: this.checked,
      "aria-controls": this.accessibleControls,
      "aria-activedescendant": this.accessibleActiveDescendant,
      "aria-owns": this.accessibleOwns,
      "aria-describedby": this.getAriaDescribedby(),
      onKeyDown: this.handleKeyDown,
      ref: input => this.nativeInput = input
    }), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("label", {
      htmlFor: identifier,
      class: {
        "duet-choice-label": true,
        "no-hover": this.isHovering
      },
      onClick: this.onClick
    }, this.icon && (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "duet-choice-card-icon"
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-icon", {
      margin: "none",
      size: "small",
      name: this.icon,
      color: "currentColor"
    })), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", null, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", null, this.label), this.caption && (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", null, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-spacer", {
      size: "xx-small"
    }), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-caption", {
      margin: "none",
      selected: this.checked
    }, this.caption)), this.hasAdditional && (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", null, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-spacer", {
      size: "xx-small"
    }), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
      name: "additional"
    }))), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", null, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        "duet-checkmark-container": true,
        "duet-checkmark-radio": this.type === "radio"
      }
    }, this.checked && (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "duet-checkmark"
    }))))), this.hasInfo && !this.collapsible && (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("button", {
      ref: button => this.infoButtonEl = button,
      id: this.infoButtonId,
      class: {
        "duet-choice-info-toggle": true,
        "duet-theme-turva": this.theme === "turva"
      },
      onMouseEnter: this.onMouseEnter,
      onMouseLeave: this.onMouseLeave,
      onClick: this.toggleInfo,
      disabled: this.disabled || this.groupDisabled,
      "aria-expanded": this.isInfoOpen ? "true" : "false",
      "aria-label": `${this.infoLabel} ${this.label}`,
      "aria-controls": this.expandId,
      "aria-flowto": this.expandId,
      tabindex: this.type === "radio" && !this.checked ? "-1" : "0",
      type: "button"
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-visually-hidden", {
      "aria-hidden": !this.isBlurred ? "true" : "false"
    }, this.accessibleLabelInfoButton), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "duet-choice-info-icon"
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-icon", {
      icon: messagingInfo.svg,
      margin: "none",
      size: "small",
      color: "currentColor"
    })))), this.collapsible || this.hasInfo ? (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: this.getClassNames(),
      id: this.expandId
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("span", {
      class: {
        "duet-choice-section-visible": this.collapsible ? this.checked : this.isInfoOpen,
        "duet-choice-section-hidden": this.collapsible ? !this.checked : !this.isInfoOpen
      }
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("span", {
      id: this.headerId
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
      name: "header"
    })), this.hasInfo ? (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("span", null, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("span", {
      "aria-relevant": "all",
      "aria-atomic": "true",
      "aria-live": this.isInfoOpen ? "polite" : "off"
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
      name: "info"
    })), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null)) : (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("span", null, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null))), this.isInfoOpen && (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)(_focus_utils_ea33cb8a_js__WEBPACK_IMPORTED_MODULE_4__.F, {
      moveFocusTo: this.infoButtonEl
    })) : null);
  }

  get element() {
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

};
DuetChoice.style = duetChoiceCss;
const duetChoiceGroupCss = "*.sc-duet-choice-group,*.sc-duet-choice-group::after,*.sc-duet-choice-group::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}.sc-duet-choice-group-h{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;display:block;width:100%}.horizontal.sc-duet-choice-group-h .duet-choice-group.sc-duet-choice-group{display:block}@media (min-width: 48em){.horizontal.sc-duet-choice-group-h .duet-choice-group.sc-duet-choice-group{display:flex;margin-bottom:0}}.horizontal.sc-duet-choice-group-h .duet-choice-group.duet-no-stacking.sc-duet-choice-group{display:flex}.duet-choice-group.sc-duet-choice-group{position:relative;width:100%;margin-bottom:-12px}";
const DuetChoiceGroup = class {
  constructor(hostRef) {
    (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    /**
     * Direction of the choice group.
     */

    this.direction = "vertical";
    /**
     * Controls the margin of the component.
     */

    this.margin = "auto";
    /**
     * Theme of the choice group.
     */

    this.theme = "";
    /**
     * Display choice group in error state along with an error message.
     */

    this.error = "";
    /**
     * Legend displayed for the choice buttons in this group.
     */

    this.label = "Label";
    /**
     * Visually hide the label, but still show it to screen readers.
     */

    this.labelHidden = false;
    /**
     * Additional caption to show inside the label of the choice group.
     */

    this.caption = undefined;
    /**
     * Tooltip to display next to the label of the choice group.
     */

    this.tooltip = undefined;
    /**
     * With direction setting you can force the tooltip to always open towards left
     * or right instead of automatically determining the direction.
     */

    this.tooltipDirection = "auto";
    /**
     * Enable or disable the automatic responsive behaviour of the choice group
     * component when horizontal setting is used. Setting this option to "true"
     * makes sure that contents are stacked vertically on mobile.
     */

    this.responsive = false;
    /**
     * Component event handling.
     */

    this.onSelect = ev => {
      if (ev.detail.component !== "duet-choice") {
        return;
      }

      const selectedChoice = ev.target;

      if (selectedChoice) {
        this.value = selectedChoice.value;
      } // Prevent events from bubbling up the DOM tree in case
      // this group is a sub-group of another choice group.


      ev.cancelBubble = true;
    };
  }
  /**
   * Component lifecycle events.
   */


  connectedCallback() {
    var _this2 = this;

    return (0,C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const el = _this2.element;

      if (_this2.value === undefined) {
        const choice = (0,_watch_options_dd55bce8_js__WEBPACK_IMPORTED_MODULE_8__.f)(el, "duet-choice");

        if (choice !== undefined) {
          yield choice.componentOnReady();

          if (_this2.value === undefined) {
            _this2.value = choice.value;
          }
        }
      }

      _this2.mutationO = (0,_watch_options_dd55bce8_js__WEBPACK_IMPORTED_MODULE_8__.w)(el, "duet-choice", newOption => {
        if (newOption !== undefined) {
          newOption.componentOnReady().then(() => {
            _this2.value = newOption.value;
          });
        } else {
          _this2.updateChoices();
        }
      });

      _this2.updateChoices();
    })();
  }

  disconnectedCallback() {
    if (this.mutationO) {
      this.mutationO.disconnect();
      this.mutationO = undefined;
    }
  }

  componentWillLoad() {
    (0,_themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_7__.i)(this);
  }
  /**
   * Local methods
   */


  updateChoices() {
    var _this3 = this;

    return (0,C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      /**
       * Make sure we get all choices first so values are up to date prior
       * to caching the choice group value
       */
      const choices = Array.from(_this3.element.querySelectorAll("duet-choice"));
      const {
        value
      } = _this3;
      let hasChecked = false; // Walk the DOM in reverse order, since the last selected one wins

      for (const choice of choices) {
        choice.name = _this3.name;
        choice.groupDisabled = _this3.disabled;
        choice.groupDirection = _this3.direction;
        choice.groupResponsive = _this3.responsive;

        if (!hasChecked && choice.value === value) {
          // Correct value for this choice, but this choice isn't checked yet
          // and we haven't found a checked yet
          hasChecked = true;
          choice.checked = true;
        } else {
          // This choice doesn't have the correct value or the choice group has been already checked
          choice.checked = false;
        }
      } // Reset value if


      if (!hasChecked) {
        _this3.value = undefined;
      }
    })();
  }
  /**
   * render() function
   * Always the last one in the class.
   */


  render() {
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      onDuetChange: this.onSelect,
      class: {
        horizontal: this.direction === "horizontal"
      }
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-fieldset", {
      label: this.label,
      labelHidden: this.labelHidden,
      caption: this.caption,
      error: this.error,
      margin: this.margin,
      theme: this.theme
    }, this.tooltip && (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-tooltip", {
      slot: "tooltip",
      direction: this.tooltipDirection,
      accessibleInputLabel: this.label
    }, this.tooltip), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        "duet-choice-group": true,
        "duet-no-stacking": !this.responsive
      }
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null))));
  }

  get element() {
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

  static get watchers() {
    return {
      "value": ["updateChoices"],
      "disabled": ["updateChoices"],
      "name": ["updateChoices"],
      "direction": ["updateChoices"],
      "responsive": ["updateChoices"]
    };
  }

};
DuetChoiceGroup.style = duetChoiceGroupCss;


/***/ }),

/***/ 1681:
/*!****************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/keyboard-utils-88ea1007.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "a": () => (/* binding */ isArrowRightKey),
/* harmony export */   "b": () => (/* binding */ isArrowUpKey),
/* harmony export */   "c": () => (/* binding */ isArrowDownKey),
/* harmony export */   "d": () => (/* binding */ isArrowLeftKey),
/* harmony export */   "e": () => (/* binding */ isBackspaceKey),
/* harmony export */   "f": () => (/* binding */ isEscapeKey),
/* harmony export */   "g": () => (/* binding */ isSpaceKey),
/* harmony export */   "h": () => (/* binding */ isQuestionKey),
/* harmony export */   "i": () => (/* binding */ isKeyboardClick),
/* harmony export */   "j": () => (/* binding */ isArrowKey),
/* harmony export */   "k": () => (/* binding */ isNumber),
/* harmony export */   "l": () => (/* binding */ isMinusKey),
/* harmony export */   "m": () => (/* binding */ isPlusKey),
/* harmony export */   "n": () => (/* binding */ isEnterKey),
/* harmony export */   "o": () => (/* binding */ isTabKey)
/* harmony export */ });
/*!
 * Built with Duet Design System
 */
const isArrowLeftKey = (e) => e.keyCode === 37;
const isArrowUpKey = (e) => e.keyCode === 38;
const isArrowRightKey = (e) => e.keyCode === 39;
const isArrowDownKey = (e) => e.keyCode === 40;
const isArrowKey = (e) => isArrowDownKey(e) || isArrowRightKey(e) || isArrowUpKey(e) || isArrowLeftKey(e);
const isEscapeKey = (e) => e.key === "Escape" || e.key === "Esc" || e.keyCode === 27;
const isTabKey = (e) => e.key === "Tab" || e.keyCode === 9;
const isBackspaceKey = (e) => e.keyCode === 8;
const isSpaceKey = (e) => e.key === "Space" || e.keyCode === 32;
const isPlusKey = (e) => e.key === "+" || e.keyCode === 43;
const isMinusKey = (e) => e.key === "-" || e.keyCode === 45;
const isQuestionKey = (e) => e.key === "?";
const isEnterKey = (e) => e.key === "Enter" || e.keyCode === 13;
const isKeyboardClick = (e) => isEnterKey(e) || isSpaceKey(e);
const isNumber = (e) => (e.keyCode >= 48 && e.keyCode <= 57) || (e.keyCode >= 96 && e.keyCode <= 105);




/***/ }),

/***/ 2601:
/*!****************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/language-utils-bf701d37.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "a": () => (/* binding */ getLanguage),
/* harmony export */   "b": () => (/* binding */ getLocale),
/* harmony export */   "g": () => (/* binding */ getLocaleString),
/* harmony export */   "s": () => (/* binding */ sanitizeString)
/* harmony export */ });
/* harmony import */ var _string_utils_5954f458_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./string-utils-5954f458.js */ 4506);
/*!
 * Built with Duet Design System
 */


const localeLookUpTable = {
  fi: "fi-FI",
  en: "en-GB",
  us: "en-US",
  sv: "sv-SE",
};
const localeMonetarySignifierLookUpTable = {
  fi: "€",
  en: "£",
  us: "$",
  sv: "€",
};
const defLanguageArray = ["fi", "en", "sv"];
const defaultLanguage = "fi";
const getCurrentLanguage = () => {
  return document.documentElement.lang ? document.documentElement.lang.toLowerCase() : defaultLanguage;
};
const isOfTypeLanguage = (keyInput) => {
  return defLanguageArray.includes(keyInput);
};
const checkForLanguage = (languageString = getCurrentLanguage()) => {
  if (isOfTypeLanguage(languageString)) {
    return languageString;
  }
  else {
    return defaultLanguage;
  }
};
/**
 * Returns the current language as a string representation (taken from html lang attribute)
 * If language is not fi|sv|en it will default to "fi"
 * @param {string} lang=fi - "fi" | "sv" | "en"
 * @default {string} "fi"
 */
const getLanguage = (languageString = getCurrentLanguage()) => checkForLanguage(languageString);
/**
 * Returns the current language and locale
 * If language is not fi|sv|en it will default to "fi"
 * special case where lang can be ALSO be "us" in addition to other types - if user decides to override local language
 * @param {string} lang="fi" - "fi" | "sv" | "en" | "us"
 * @default {object} {locale: "fi-FI", money: "€"}
 */
const getLocale = (lang) => {
  const returnObj = {
    locale: localeLookUpTable[lang],
    money: localeMonetarySignifierLookUpTable[lang],
  };
  if (returnObj.locale && returnObj.money) {
    return returnObj;
  }
  throw new Error(`Locale for "${lang}" not found`);
};
/**
 * Takes any json object that is passed and/or htmlencoded and converts it to proper json
 */
const sanitizeString = (string) => {
  const argIsString = typeof string === "string";
  if (argIsString) {
    try {
      return JSON.parse((0,_string_utils_5954f458_js__WEBPACK_IMPORTED_MODULE_0__.c)(string));
    }
    catch (e) {
      console.log("sanitizeString received a string, that didnt parse to json object", string, e);
    }
  }
  return string;
};
/**
 * Returns the current string / object from a given translation object
 * If language is not fi|sv|en it will default to "fi"
 * special case where lang can be ALSO be "us" in addition to other types - if user decides to override local language
 * @param {object} langObject - {fi: "finnish", sv: "swedish", en: "english"} | string will get JSON.parsed
 * @param {boolean} languageOverride = false - in case you want to override the actual language set in html tag
 * @default {object} {locale: "fi-FI", money: "€"}
 * @returns {(string|Object)} given example contains {fi:"something"} and language===fi this will return "something"
 */
const getLocaleString = (langObject, languageOverride) => {
  const obj = sanitizeString(langObject);
  if (languageOverride) {
    return obj[checkForLanguage(languageOverride)];
  }
  else {
    return obj[getLanguage()];
  }
};




/***/ }),

/***/ 4506:
/*!**************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/string-utils-5954f458.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "c": () => (/* binding */ convertHtmlQuotes),
/* harmony export */   "p": () => (/* binding */ parsePossibleJSON),
/* harmony export */   "s": () => (/* binding */ sanitizeString)
/* harmony export */ });
/*!
 * Built with Duet Design System
 */
function isObject(maybeObj) {
  return Object.prototype.toString.call(maybeObj) === "[object Object]";
}
const parsePossibleJSON = (maybeJSON) => {
  if (Array.isArray(maybeJSON) || isObject(maybeJSON)) {
    return maybeJSON;
  }
  if (typeof maybeJSON === "string") {
    try {
      return JSON.parse(maybeJSON);
    }
    catch (e) {
      console.warn(e);
      try {
        return JSON.parse(convertHtmlQuotes(maybeJSON));
      }
      catch (e) {
        console.warn(e);
      }
    }
  }
  // undefined is not a type in JSON,
  // so we use it here to signal invalid input
  return undefined;
};
/**
 * Format string, via simplistic sprintf equivalent
 * @example String.format('{0} is super, but {1} is best! {{0}}', 'Duet', 'Coffee'); -> "Duet is super, but Coffee ist best! {0}"
 *
 */
// @ts-ignore
if (!String.format) {
  // @ts-ignore
  String.format = function (format) {
    var args = Array.prototype.slice.call(arguments, 1);
    return format.replace(/\{\{|\}\}|\{(\d+)\}/g, function (curlyBrack, index) {
      return curlyBrack == "{{" ? "{" : curlyBrack == "}}" ? "}" : args[index];
    });
  };
}
const MATCH_DISALLOWED_CHARS = /[^a-z0-9áéíóúñüöäå \.,_-]/gim;
function sanitizeString(string) {
  return string.replace(MATCH_DISALLOWED_CHARS, "").trim();
}
const convertHtmlQuotes = string => {
  if (typeof string === "string") {
    return string.replace(/&quot;/g, '"').replace(/&apos;/g, '"');
  }
  return string;
};




/***/ }),

/***/ 7558:
/*!*********************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/themeable-component-e8fc98bf.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "i": () => (/* binding */ inheritGlobalTheme)
/* harmony export */ });
/*!
 * Built with Duet Design System
 */
const inheritGlobalTheme = (component) => {
  // this minor change enables duet-theme-XXXXX instead of just duet-theme-turva
  const classList = Array.from(document.documentElement.classList).join(" ") || "";
  const theme = /(duet-theme-)([a-z]*)/gis.exec(classList);
  if (theme && theme[1] === "duet-theme-") {
    component.theme = theme[2] === "default" ? "" : theme[2];
  }
};




/***/ })

}]);
//# sourceMappingURL=node_modules_duetds_components_lib_esm_duet-choice_2_entry_js.js.map