{"version":3,"file":"node_modules_duetds_components_lib_esm_duet-upload-aria-status_entry_js.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AAC0E;;AAE1E;AACA;AACA,IAAI,qDAAgB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,EAAE,8BAA8B,OAAO,QAAQ,EAAE,6BAA6B;AACrH;AACA;AACA,mBAAmB,cAAc;AACjC,mBAAmB,gBAAgB;AACnC,mBAAmB,WAAW;AAC9B,mBAAmB,gBAAgB;AACnC;AACA;AACA,cAAc,yDAAyD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAC,CAAC,iDAAI,IAAI,yFAAyF,EAAE,qDAAC;AAClH;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAE2D","sources":["./node_modules/@duetds/components/lib/esm/duet-upload-aria-status.entry.js"],"sourcesContent":["/*!\n * Built with Duet Design System\n */\nimport { r as registerInstance, h, H as Host } from './index-54e0bce3.js';\n\nconst DuetUploadAriaStatus = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * State() variables\n     */\n    this.statusMessage = null;\n    /**\n     * Status labels used in the component\n     */\n    this.statusMessageLabel = null;\n    /**\n     * Adds accessible label that is read aloud\n     */\n    this.accessibleAriaLive = \"polite\";\n    /**\n     * valid file amount\n     */\n    this.valid = undefined;\n    /**\n     * total files\n     */\n    this.total = undefined;\n    /**\n     * invalid file amount\n     */\n    this.invalid = undefined;\n    /**\n     * valid file amount\n     */\n    this.inprogress = undefined;\n    /**\n     * Private functions\n     */\n    this.replacePlaceHolders = (statusString) => {\n      const addFiles = (amount) => {\n        return amount > 1 ? `${amount} ${this.statusMessageLabel.files}` : `${amount} ${this.statusMessageLabel.file}`;\n      };\n      return statusString\n        .replace(\"{filesUploaded}\", addFiles(this.valid))\n        .replace(\"{filesInProgress}\", addFiles(this.inprogress))\n        .replace(\"{filesTotal}\", addFiles(this.total))\n        .replace(\"{filesWithErrors}\", addFiles(this.invalid));\n    };\n    this.getStatusMessage = () => {\n      const { done, inProgress, doneWithErrors, inProgressWithErrors } = this.statusMessageLabel;\n      const hasErrors = this.invalid > 0;\n      const isInProgress = this.inprogress > 0;\n      const isInProgressWithErrors = this.inprogress > 0 && hasErrors;\n      const isDone = this.valid === this.total && !isInProgress && !hasErrors;\n      const isDoneWithErrors = this.valid + this.invalid === this.total && !isInProgress;\n      if (isDone) {\n        this.statusMessage = this.replacePlaceHolders(done);\n        return;\n      }\n      else if (isInProgressWithErrors) {\n        this.statusMessage = this.replacePlaceHolders(inProgressWithErrors);\n        return;\n      }\n      else if (isInProgress) {\n        this.statusMessage = this.replacePlaceHolders(inProgress);\n        return;\n      }\n      else if (isDoneWithErrors) {\n        this.statusMessage = this.replacePlaceHolders(doneWithErrors);\n        return;\n      }\n      return;\n    };\n  }\n  watchHandler(newValue, oldValue) {\n    if (newValue !== oldValue) {\n      this.getStatusMessage();\n    }\n  }\n  /**\n   * render() function\n   * Always the last one in the class.\n   */\n  render() {\n    return (h(Host, { role: \"status\", \"aria-live\": \"assertive\", \"aria-atomic\": \"true\", \"aria-relevant\": \"all\" }, h(\"duet-visually-hidden\", null, this.statusMessage)));\n  }\n  static get watchers() { return {\n    \"valid\": [\"watchHandler\"],\n    \"invalid\": [\"watchHandler\"],\n    \"inprogress\": [\"watchHandler\"],\n    \"total\": [\"watchHandler\"]\n  }; }\n};\n\nexport { DuetUploadAriaStatus as duet_upload_aria_status };\n"],"names":[],"sourceRoot":"webpack:///"}