"use strict";
(self["webpackChunkduet_angular_template"] = self["webpackChunkduet_angular_template"] || []).push([["node_modules_duetds_components_lib_esm_duet-button_2_entry_js"],{

/***/ 2035:
/*!************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/duet-button_2.entry.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "duet_button": () => (/* binding */ DuetButton),
/* harmony export */   "duet_spinner": () => (/* binding */ DuetSpinner)
/* harmony export */ });
/* harmony import */ var C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 1670);
/* harmony import */ var _index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-54e0bce3.js */ 3669);
/* harmony import */ var _common_strings_97e04e4b_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common-strings-97e04e4b.js */ 4122);
/* harmony import */ var _language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./language-utils-bf701d37.js */ 2601);
/* harmony import */ var _themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./themeable-component-e8fc98bf.js */ 7558);
/* harmony import */ var _token_utils_e9a69acf_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./token-utils-e9a69acf.js */ 359);
/* harmony import */ var _string_utils_5954f458_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./string-utils-5954f458.js */ 4506);
/* harmony import */ var _tokens_module_49cbf963_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tokens.module-49cbf963.js */ 2370);


/*!
 * Built with Duet Design System
 */







const duetButtonCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;margin-right:8px !important;margin-bottom:12px !important;position:relative;z-index:1;display:inline-flex;width:auto;max-width:100%;vertical-align:bottom;-webkit-tap-highlight-color:transparent}:host:last-child,:host:last-of-type{margin-right:0 !important}@media (max-width: 35.9375em){:host{width:100%}}:host(.duet-small){margin-right:2px !important;margin-bottom:8px !important}:host(.duet-small):last-child,:host(.duet-small):last-of-type{margin-right:0 !important}@media (max-width: 35.9375em){:host(.duet-small){width:auto}}:host(.duet-expand){width:100% !important}:host(.duet-m-0){margin:0 !important}:host(.duet-fixed){width:auto !important}:host(:last-child){margin-right:0 !important}.duet-button-container{position:relative;width:100%}.duet-button{padding:14px 27px 15px !important;-webkit-user-select:none;user-select:none;position:relative;z-index:100;display:block;width:100%;min-width:8rem;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1rem;font-weight:600;font-variant-numeric:tabular-nums;-webkit-hyphens:auto;hyphens:auto;line-height:1.1;color:#0077b3 !important;text-align:center;text-decoration:none;cursor:pointer;background:transparent;border-style:solid;border-width:2px;border-radius:20rem;transition:background-color 300ms ease, color 300ms ease, border 300ms ease, box-shadow 300ms ease}.duet-button.duet-p-0{padding:0 !important}.duet-button.duet-m-0{margin:0 !important}.duet-button.duet-button-text-center{text-align:center !important}.duet-button.duet-button-is-small:not(.duet-button-icon-only){padding:9px 19px 10px !important;min-width:5.3333333333rem;font-size:0.875rem}.duet-button.duet-button-is-small:not(.duet-button-icon-only).icon{padding-left:48px !important}.duet-button.duet-button-is-small:not(.duet-button-icon-only).icon-right{padding-right:48px !important;padding-left:20px !important}.duet-theme-turva .duet-button{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:#c60c30 !important}.duet-button .duet-button-contents{position:relative;display:inline-block;margin:0 auto;pointer-events:none}.duet-button.duet-no-wrap{white-space:nowrap}.duet-button.icon{padding-left:52px !important}.duet-button.icon-right{padding-right:52px !important;padding-left:28px !important}.duet-button svg{width:100%;min-width:100%;fill:currentColor}.duet-button .duet-button-icon{position:absolute;top:50%;left:-28px;display:flex;align-items:center;justify-content:center;width:16px;height:16px;margin:0 !important;transform:translateY(-50%)}.duet-button .duet-button-icon duet-icon{width:16px;height:16px}.duet-button .duet-button-icon.right{right:-28px;left:auto}.duet-button .duet-button-icon.large{left:-32px;width:20px;height:20px}.duet-button .duet-button-icon.large duet-icon{width:20px;height:20px}.duet-button .duet-button-icon.large.right{right:-32px;left:auto}.duet-button .duet-button-icon.medium-small{left:-16px;width:10px;height:10px;padding-top:1px}.duet-button .duet-button-icon.medium-small duet-icon{width:10px;height:10px}.duet-button .duet-button-icon.medium-small.right{right:-16px;left:auto}.duet-button .duet-button-icon.small{left:-16px;width:7px;height:7px}.duet-button .duet-button-icon.small duet-icon{width:7px;height:7px}.duet-button .duet-button-icon.small.right{right:-16px;left:auto}.duet-button:focus{outline:0;box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px #0077b3}.duet-theme-turva .duet-button:focus{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px #171c3a}.duet-button:active{opacity:0.75;transition:none}.duet-button.default{border-color:#e1e3e6}.duet-theme-turva .duet-button.default{color:#c60c30 !important;border-color:#e4e4e6}.duet-button.default:hover{border-color:#0077b3}.duet-theme-turva .duet-button.default:hover{border-color:#c60c30}.duet-button.default.duet-button-negative{background-color:white}.duet-theme-turva .duet-button.default.duet-button-negative{background-color:#e4e4e6 !important}.duet-button.default.duet-button-negative:hover{color:#0077b3 !important;border-color:#0077b3}.duet-theme-turva .duet-button.default.duet-button-negative:hover{color:#c60c30 !important;border-color:#c60c30}.duet-button.primary{color:white !important;background:#0077b3;border-color:#0077b3}.duet-theme-turva .duet-button.primary{color:white !important;background:#c60c30;border-color:#c60c30}.duet-button.primary:hover{background:#005f8f;border-color:#005f8f;box-shadow:0 4px 20px rgba(34, 34, 34, 0.1)}.duet-theme-turva .duet-button.primary:hover{background:#940925;border-color:#940925}.duet-button.primary:focus{outline:0;box-shadow:0 0 0 1px white, 0 0 0 4px rgba(0, 119, 179, 0.75)}.duet-theme-turva .duet-button.primary:focus{box-shadow:0 0 0 1px white, 0 0 0 4px rgba(23, 28, 58, 0.7)}.duet-button.secondary{color:#00294d !important;background:transparent;border-color:#00294d}.duet-theme-turva .duet-button.secondary{color:#171c3a !important;border-color:#171c3a}.duet-button.secondary:hover{color:#0077b3 !important;border-color:#0077b3}.duet-theme-turva .duet-button.secondary:hover{color:#c60c30 !important;border-color:#c60c30}.duet-button.secondary.duet-button-negative{color:#e1e3e6 !important;border-color:white}.duet-theme-turva .duet-button.secondary.duet-button-negative{color:#e4e4e6 !important}.duet-button.secondary.duet-button-negative:hover{color:#0077b3 !important;border-color:#0077b3}.duet-theme-turva .duet-button.secondary.duet-button-negative:hover{color:#c60c30 !important;border-color:#c60c30}.duet-button.negative{color:#00294d !important;background:white;border-color:white}.duet-theme-turva .duet-button.negative{color:#171c3a !important}.duet-button.negative:hover{color:white !important;background:transparent;border-color:white}.duet-button.negative:focus{outline:0;box-shadow:0 0 0 1px #00294d, 0 0 0 4px rgba(255, 255, 255, 0.7)}.duet-theme-turva .duet-button.negative:focus{box-shadow:0 0 0 1px #171c3a, 0 0 0 4px rgba(255, 255, 255, 0.7)}.duet-button.destructive-primary{color:white !important;background:#de2362;border-color:#de2362}.duet-theme-turva .duet-button.destructive-primary{color:white !important;background:#e02a0d;border-color:#e02a0d}.duet-button.destructive-primary:hover{background:#b21c4e;border-color:#b21c4e;box-shadow:0 4px 20px rgba(34, 34, 34, 0.1)}.duet-theme-turva .duet-button.destructive-primary:hover{background:#b3220a}.duet-button.destructive,.duet-button.destructive-secondary{color:#de2362 !important;background:white;border-color:#de2362}.duet-theme-turva .duet-button.destructive,.duet-theme-turva .duet-button.destructive-secondary{color:#e02a0d !important;background:white;border-color:#e02a0d}.duet-button.destructive:hover,.duet-button.destructive-secondary:hover{color:white !important;background:#b21c4e;border-color:#b21c4e}.duet-theme-turva .duet-button.destructive:hover,.duet-theme-turva .duet-button.destructive-secondary:hover{color:white !important;background:#b3220a;border-color:#b3220a}.duet-button.plain{min-width:48px;padding-right:0 !important;padding-left:0 !important;line-height:1.5;text-align:left;background:transparent;border:0;border-color:transparent;border-radius:4px}.duet-theme-turva .duet-button.plain{color:#c60c30 !important;background:transparent;border-color:transparent}.duet-button.plain.icon{padding-left:20px !important}.duet-button.plain.icon.icon-right{padding-right:20px !important;padding-left:0 !important}.duet-button.plain.icon.medium{padding-left:24px !important}.duet-button.plain.icon.medium.icon-right{padding-right:24px !important;padding-left:0 !important}.duet-button.plain.icon.large{padding-left:30px !important}.duet-button.plain.icon.large.icon-right{padding-right:30px !important;padding-left:0 !important}.duet-button.plain .duet-button-icon.left{left:-16.6666666667px !important}.duet-button.plain .duet-button-icon.left.medium{left:-24px !important}.duet-button.plain .duet-button-icon.left.large{left:-30px !important}.duet-button.plain .duet-button-icon.right{right:-16.6666666667px !important}.duet-button.plain .duet-button-icon.right.medium{right:-24px !important}.duet-button.plain .duet-button-icon.right.large{right:-30px !important}.duet-button.plain[disabled]{color:#657787 !important;background:transparent !important;border-color:transparent !important}.duet-theme-turva .duet-button.plain[disabled]{color:transparent !important;background:transparent !important;border-color:#e4e4e6 !important}.duet-button.plain:hover{color:#004d80 !important;background:transparent !important}.duet-theme-turva .duet-button.plain:hover{color:#940925 !important}.duet-button.plain.duet-button-negative{color:white !important}.duet-theme-turva .duet-button.plain.duet-button-negative{color:#e4e4e6 !important}.duet-button.plain.duet-button-negative:hover{color:#0077b3 !important}.duet-theme-turva .duet-button.plain.duet-button-negative:hover{color:#c60c30 !important}.duet-button.duet-button-icon-only{min-width:48px;min-height:48px;padding:0 !important}.duet-button.duet-button-icon-only .duet-button-contents{position:static}.duet-button.duet-button-icon-only .duet-button-icon.left.large,.duet-button.duet-button-icon-only .duet-button-icon.left.medium,.duet-button.duet-button-icon-only .duet-button-icon.left.small{position:absolute;top:50% !important;left:50% !important;padding:0;margin:0;transform:translateX(-50%) translateY(-50%)}.duet-button[disabled],.duet-button[disabled]:hover,.duet-button.duet-button-negative[disabled],.duet-button.duet-button-negative[disabled]:hover{color:#657787 !important;background:#e1e3e6 !important;border-color:#e1e3e6 !important;box-shadow:none !important}.duet-theme-turva .duet-button[disabled],.duet-theme-turva .duet-button[disabled]:hover,.duet-theme-turva .duet-button.duet-button-negative [disabled],.duet-theme-turva .duet-button.duet-button-negative [disabled]:hover{color:#747475 !important;background:#e4e4e6 !important;border-color:#e4e4e6 !important}.duet-button-is-loading.primary{color:white}.duet-button-is-loading.default{color:#0077b3}.duet-button-is-loading.default.duet-theme-turva{color:#c60c30}.duet-button-is-loading .duet-button-contents{visibility:hidden;opacity:0}";
const DuetButton = class {
  constructor(hostRef) {
    (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.duetFocus = (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "duetFocus", 7);
    this.duetBlur = (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "duetBlur", 7);
    /**
     * Use this property to add an aria-haspopup attribute to a button, if you are using it as a menu button.
     */

    this.accessiblePopup = "false";
    /**
     * Loading state of the button
     */

    this.loading = false;
    /**
     * Style variation of the button.
     * @negative - value is deprecated and should be used in combination with negative prop in the future
     * @destructive - value is deprecated and should be replace with destructive-secondary
     */

    this.variation = "default";
    /**
     * Negative variation, can be combined with Variation to produce negative versions
     */

    this.negative = false;
    /**
     * Theme of the button.
     */

    this.theme = "";
    /**
     * Controls the margin of the component.
     */

    this.margin = "auto";
    /**
     * Controls the padding of the component.
     */

    this.padding = "auto";
    /**
     * Centers the text of a button
     */

    this.centerText = false;
    /**
     * Controls the text wrapping.
     */

    this.wrapping = "auto";
    /**
     * Expands the button to fill 100% of the container width.
     */

    this.expand = false;
    /**
     * Keep the button fixed width even on mobile viewports.
     */

    this.fixed = false;
    /**
     * Makes the button component disabled. This prevents users from being able to
     * interact with the button, and conveys its inactive state to assistive technologies.
     */

    this.disabled = false;
    /**
     * Allows the button to submit a form.
     */

    this.submit = false;
    /**
     * Forces URL to open in a new browser tab. Used together with URL prop.
     */

    this.external = false;
    /**
     * @deprecated this is now handled via the html lang tag, and is no longer used - kept to avoid breaking changes and ease unit testing
     * @default "fi"
     */

    this.language = (0,_language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_3__.a)();
    /**
     * Property to change accessibleLabelExternal defaults on the component.
     * normally you would handle these strings on an application level and override @accessibleLabelExternal when needed
     * @default {fi: "Avautuu uuteen ikkunaan",sv: "Öppnas i nytt fönster",en: "Opens in a new window"}
     */

    this.accessibleLabelExternalDefaults = _common_strings_97e04e4b_js__WEBPACK_IMPORTED_MODULE_2__.D;
    /**
     * Adds accessible label for tooltip that is shown in external link (url & external have both been set)
     * @default {fi: "Avautuu uuteen ikkunaan",sv: "Öppnas i nytt fönster",en: "Opens in a new window"}
     */

    this.accessibleLabelExternal = (0,_language_utils_bf701d37_js__WEBPACK_IMPORTED_MODULE_3__.g)(this.accessibleLabelExternalDefaults);
    /**
     * Icon to display to the left of the button content.
     * This is ignored/overridden when button is used as an external link.
     */

    this.icon = "";
    /**
     * Custom color to be used for text, as a design token entered in camelCase or
     * kebab-case. Example: "color-primary".
     */

    this.color = "";
    /**
     * Show icon on the right side of the button content.
     */

    this.iconRight = false;
    /**
     * Icon size.
     */

    this.iconSize = "medium";
    /**
     * Button’s size.
     */

    this.size = "medium";
    /**
     * Whether this button should use styles meant for displaying just an icon.
     */

    this.iconOnly = false;
    /**
     * Component event handling.
     */

    this.handleClick = ev => {
      // If this button wants to specifically submit a form
      // climb up the dom to see if we're in a <form>
      // and if so, then use JS to submit it.
      // To understand better, see: https://www.hjorthhansen.dev/shadow-dom-form-participation/
      if (!this.url && this.element.closest("form")) {
        ev.preventDefault();
        this.proxyButton.click();
      }
    };

    this.onFocus = () => {
      this.duetFocus.emit();
    };

    this.onBlur = () => {
      this.duetBlur.emit();
    };
  }
  /**
   * Component lifecycle events.
   */


  componentWillLoad() {
    (0,_themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_4__.i)(this);

    if (this.url && this.external && this.icon) {
      console.warn("[DUET]: Button used as an external link will override any icon that is set");
    }
  }

  connectedCallback() {
    this.proxyButton = document.createElement("button");
    this.proxyButton.style.display = "none";
    this.syncToProxyButton();

    if (!this.url && this.element.closest("form")) {
      this.element.insertAdjacentElement("beforebegin", this.proxyButton);
    }
  }

  disconnectedCallback() {
    this.proxyButton.remove();
    this.proxyButton = null;
  }

  syncToProxyButton() {
    this.proxyButton.type = this.getButtonType();
    this.proxyButton.disabled = this.disabled; // attributes should be removed in cases where name/value is not set

    if (this.name != null) {
      this.proxyButton.name = this.name;
    } else {
      this.proxyButton.removeAttribute("name");
    }

    if (this.value != null) {
      this.proxyButton.value = this.value;
    } else {
      this.proxyButton.removeAttribute("value");
    }
  }

  getButtonType() {
    return this.submit ? "submit" : "button";
  }
  /**
   * Sets focus on the specified `duet-button`. Use this method instead of the global
   * `button.focus()`.
   */


  setFocus(options) {
    var _this = this;

    return (0,C_Visakh_1_Workspace_POC_Ngb_modal_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (_this.nativeButton) {
        _this.nativeButton.focus(options);
      }
    })();
  }
  /**
   * render() function.
   * Always the last one in the class.
   */


  render() {
    const isExternalLink = this.external && this.url; // enforce consistency for external links

    const icon = isExternalLink ? "action-new-window" : this.icon;
    const iconRight = isExternalLink ? true : this.iconRight;
    const commonChildren = (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("span", {
      class: "duet-button-contents",
      style: {
        color: (0,_token_utils_e9a69acf_js__WEBPACK_IMPORTED_MODULE_5__.g)(this.color)
      }
    }, icon && (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      "aria-hidden": "true",
      class: {
        "duet-button-icon": true,
        left: !iconRight,
        right: iconRight,
        [this.iconSize]: true
      }
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-icon", {
      size: "auto",
      margin: "none",
      name: icon,
      color: "currentColor"
    })), (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null));
    const commonProps = {
      onFocus: this.onFocus,
      onBlur: this.onBlur,
      ref: button => this.nativeButton = button,
      id: this.identifier,
      class: {
        "duet-m-0": this.margin === "none",
        "duet-p-0": this.padding === "none",
        "duet-no-wrap": this.wrapping === "none",
        "duet-button": true,
        "duet-button-is-small": this.size === "small",
        "duet-button-icon-only": this.iconOnly,
        "duet-button-text-center": this.centerText,
        "duet-button-negative": this.negative || this.variation === "negative",
        [this.variation]: true,
        disabled: this.disabled,
        icon: !!icon,
        "icon-right": iconRight,
        [this.iconSize]: true
      },
      "aria-controls": this.accessibleControls,
      "aria-label": this.accessibleLabel,
      "aria-expanded": this.accessibleExpanded != null ? this.accessibleExpanded.toString() : undefined,
      "aria-activedescendant": this.accessibleActiveDescendant,
      "aria-owns": this.accessibleOwns,
      "aria-describedby": this.accessibleDescribedBy
    };
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      onClick: this.handleClick,
      class: {
        "duet-m-0": this.margin === "none",
        "duet-small": this.size === "small",
        "duet-fixed": this.fixed,
        "duet-expand": this.expand
      }
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        "duet-button-container": true,
        "duet-button-is-loading": this.loading,
        "duet-theme-turva": this.theme === "turva",
        "duet-button-negative": this.negative || this.variation === "negative",
        [this.variation]: true
      }
    }, this.url ? (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("a", Object.assign({}, commonProps, {
      href: this.url,
      target: this.external ? "_blank" : "_self",
      rel: this.external ? "noopener" : undefined
    }), commonChildren, this.external && (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-visually-hidden", null, ", ", this.accessibleLabelExternal)) : (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("button", Object.assign({}, commonProps, {
      type: this.getButtonType(),
      disabled: this.disabled,
      name: this.name,
      value: this.value,
      "aria-pressed": this.accessiblePressed != null ? this.accessiblePressed.toString() : undefined,
      "aria-haspopup": this.accessiblePopup != null ? this.accessiblePopup.toString() : undefined
    }), commonChildren), this.loading && (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("duet-spinner", {
      color: "currentColor"
    })));
  }

  get element() {
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

  static get watchers() {
    return {
      "disabled": ["syncToProxyButton"],
      "submit": ["syncToProxyButton"],
      "value": ["syncToProxyButton"],
      "name": ["syncToProxyButton"]
    };
  }

};
DuetButton.style = duetButtonCss;
const duetSpinnerCss = ":host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;position:absolute;top:50%;left:50%;z-index:800;max-width:100%}:host(.duet-theme-default) .duet-spinner{color:#0077b3 !important}:host(.duet-theme-turva) .duet-spinner{color:#c60c30 !important}:host(.duet-custom-color){color:inherit}*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}.duet-spinner{-webkit-user-select:none;user-select:none;position:absolute;top:50%;left:50%;z-index:800;width:24px;height:24px;color:#0077b3;border:2px solid transparent;border-left:2px solid currentColor;border-radius:50%;transform:translateZ(0) translateX(-50%) translateY(-50%);transform-origin:0% 0%;animation:duetRotate 0.6s linear infinite}.duet-spinner::after{position:absolute;top:50%;left:50%;z-index:200;box-sizing:content-box;width:100%;height:100%;overflow:hidden;content:\"\";border:2px solid currentColor;border-radius:50%;opacity:0.3;transform:translateZ(0) translateX(-50%) translateY(-50%);transform-origin:0% 0%}.duet-spinner.medium{width:36px;height:36px;border-width:4px}.duet-spinner.medium::after{border-width:4px}.duet-spinner.large{width:72px;height:72px;border-width:8px}.duet-spinner.large::after{border-width:8px}@keyframes duetRotate{0%{transform:translateZ(0) rotate(0deg) translateX(-50%) translateY(-50%)}100%{transform:translateZ(0) rotate(360deg) translateX(-50%) translateY(-50%)}}";
const DuetSpinner = class {
  constructor(hostRef) {
    (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    /**
     * Color of the spinner, as a design token entered in camelCase or kebab-case.
     * Example: "color-primary". This property can also be set to "currentColor"
     * which forces the icon to use the CSS text color of parent element instead.
     * Useful when you want to control the color in stylesheet instead.
     */

    this.color = "gray-lightest";
    /**
     * Size variation of the spinner.
     */

    this.size = "small";
    /**
     * Theme of the spinner. When used this will override the color setting and
     * use "primary" or "primary-turva" as the color depending on which theme
     * is chosen.
     */

    this.theme = "";
  }
  /**
   * Component lifecycle events.
   */


  componentWillLoad() {
    (0,_themeable_component_e8fc98bf_js__WEBPACK_IMPORTED_MODULE_4__.i)(this);
  }
  /**
   * render() function
   * Always the last one in the class.
   */


  render() {
    const color = this.color === "currentColor" ? "currentColor" : (0,_token_utils_e9a69acf_js__WEBPACK_IMPORTED_MODULE_5__.g)(this.color);
    return (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      class: {
        "duet-custom-color": this.color !== "currentColor" && this.theme !== "turva" && this.theme !== "default",
        "duet-theme-turva": this.theme === "turva" && this.color !== "currentColor",
        "duet-theme-default": this.theme === "default" && this.color !== "currentColor"
      }
    }, (0,_index_54e0bce3_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        "duet-spinner": true,
        [this.size]: true
      },
      style: {
        color
      },
      "aria-label": this.accessibleLabel
    }));
  }

};
DuetSpinner.style = duetSpinnerCss;


/***/ }),

/***/ 2601:
/*!****************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/language-utils-bf701d37.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "a": () => (/* binding */ getLanguage),
/* harmony export */   "b": () => (/* binding */ getLocale),
/* harmony export */   "g": () => (/* binding */ getLocaleString),
/* harmony export */   "s": () => (/* binding */ sanitizeString)
/* harmony export */ });
/* harmony import */ var _string_utils_5954f458_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./string-utils-5954f458.js */ 4506);
/*!
 * Built with Duet Design System
 */


const localeLookUpTable = {
  fi: "fi-FI",
  en: "en-GB",
  us: "en-US",
  sv: "sv-SE",
};
const localeMonetarySignifierLookUpTable = {
  fi: "€",
  en: "£",
  us: "$",
  sv: "€",
};
const defLanguageArray = ["fi", "en", "sv"];
const defaultLanguage = "fi";
const getCurrentLanguage = () => {
  return document.documentElement.lang ? document.documentElement.lang.toLowerCase() : defaultLanguage;
};
const isOfTypeLanguage = (keyInput) => {
  return defLanguageArray.includes(keyInput);
};
const checkForLanguage = (languageString = getCurrentLanguage()) => {
  if (isOfTypeLanguage(languageString)) {
    return languageString;
  }
  else {
    return defaultLanguage;
  }
};
/**
 * Returns the current language as a string representation (taken from html lang attribute)
 * If language is not fi|sv|en it will default to "fi"
 * @param {string} lang=fi - "fi" | "sv" | "en"
 * @default {string} "fi"
 */
const getLanguage = (languageString = getCurrentLanguage()) => checkForLanguage(languageString);
/**
 * Returns the current language and locale
 * If language is not fi|sv|en it will default to "fi"
 * special case where lang can be ALSO be "us" in addition to other types - if user decides to override local language
 * @param {string} lang="fi" - "fi" | "sv" | "en" | "us"
 * @default {object} {locale: "fi-FI", money: "€"}
 */
const getLocale = (lang) => {
  const returnObj = {
    locale: localeLookUpTable[lang],
    money: localeMonetarySignifierLookUpTable[lang],
  };
  if (returnObj.locale && returnObj.money) {
    return returnObj;
  }
  throw new Error(`Locale for "${lang}" not found`);
};
/**
 * Takes any json object that is passed and/or htmlencoded and converts it to proper json
 */
const sanitizeString = (string) => {
  const argIsString = typeof string === "string";
  if (argIsString) {
    try {
      return JSON.parse((0,_string_utils_5954f458_js__WEBPACK_IMPORTED_MODULE_0__.c)(string));
    }
    catch (e) {
      console.log("sanitizeString received a string, that didnt parse to json object", string, e);
    }
  }
  return string;
};
/**
 * Returns the current string / object from a given translation object
 * If language is not fi|sv|en it will default to "fi"
 * special case where lang can be ALSO be "us" in addition to other types - if user decides to override local language
 * @param {object} langObject - {fi: "finnish", sv: "swedish", en: "english"} | string will get JSON.parsed
 * @param {boolean} languageOverride = false - in case you want to override the actual language set in html tag
 * @default {object} {locale: "fi-FI", money: "€"}
 * @returns {(string|Object)} given example contains {fi:"something"} and language===fi this will return "something"
 */
const getLocaleString = (langObject, languageOverride) => {
  const obj = sanitizeString(langObject);
  if (languageOverride) {
    return obj[checkForLanguage(languageOverride)];
  }
  else {
    return obj[getLanguage()];
  }
};




/***/ }),

/***/ 4506:
/*!**************************************************************************!*\
  !*** ./node_modules/@duetds/components/lib/esm/string-utils-5954f458.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "c": () => (/* binding */ convertHtmlQuotes),
/* harmony export */   "p": () => (/* binding */ parsePossibleJSON),
/* harmony export */   "s": () => (/* binding */ sanitizeString)
/* harmony export */ });
/*!
 * Built with Duet Design System
 */
function isObject(maybeObj) {
  return Object.prototype.toString.call(maybeObj) === "[object Object]";
}
const parsePossibleJSON = (maybeJSON) => {
  if (Array.isArray(maybeJSON) || isObject(maybeJSON)) {
    return maybeJSON;
  }
  if (typeof maybeJSON === "string") {
    try {
      return JSON.parse(maybeJSON);
    }
    catch (e) {
      console.warn(e);
      try {
        return JSON.parse(convertHtmlQuotes(maybeJSON));
      }
      catch (e) {
        console.warn(e);
      }
    }
  }
  // undefined is not a type in JSON,
  // so we use it here to signal invalid input
  return undefined;
};
/**
 * Format string, via simplistic sprintf equivalent
 * @example String.format('{0} is super, but {1} is best! {{0}}', 'Duet', 'Coffee'); -> "Duet is super, but Coffee ist best! {0}"
 *
 */
// @ts-ignore
if (!String.format) {
  // @ts-ignore
  String.format = function (format) {
    var args = Array.prototype.slice.call(arguments, 1);
    return format.replace(/\{\{|\}\}|\{(\d+)\}/g, function (curlyBrack, index) {
      return curlyBrack == "{{" ? "{" : curlyBrack == "}}" ? "}" : args[index];
    });
  };
}
const MATCH_DISALLOWED_CHARS = /[^a-z0-9áéíóúñüöäå \.,_-]/gim;
function sanitizeString(string) {
  return string.replace(MATCH_DISALLOWED_CHARS, "").trim();
}
const convertHtmlQuotes = string => {
  if (typeof string === "string") {
    return string.replace(/&quot;/g, '"').replace(/&apos;/g, '"');
  }
  return string;
};




/***/ })

}]);
//# sourceMappingURL=node_modules_duetds_components_lib_esm_duet-button_2_entry_js.js.map